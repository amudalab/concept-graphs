set of processes::set of processes
result of cpu::result of cpu
computer s response::computer s response
users to realize::users to realize
realize this increase::realize this increase
increase in performance::increase in performance
processes in memory::processes in memory
discuss various ways::discuss various ways
ways to manage::ways to manage
memory the memorymanagement::memory the memorymanagement
memorymanagement algorithms vary::memorymanagement algorithms vary
primitive bare-machine approach::primitive bare-machine approach
approach to paging::approach to paging
paging and segmentation::paging and segmentation
strategies each approach::strategies each approach
advantages and disadvantages::advantages and disadvantages
specific system depends::specific system depends
algorithms require hardware::algorithms require hardware
require hardware support::require hardware support
integrated the hardware::integrated the hardware
hardware and operating::hardware and operating
system to provide::system to provide
provide a detailed::provide a detailed
ways of organizing::ways of organizing
organizing memory hardware::organizing memory hardware
hardware to discuss::hardware to discuss
discuss various memory-management::discuss various memory-management
segmentation to provide::segmentation to provide
supports both pure::supports both pure
segmentation and segmentation::segmentation and segmentation
segmentation with paging::segmentation with paging
memory is central::memory is central
modern computer system::modern computer system
computer system memory::computer system memory
system memory consists::system memory consists
array of words::array of words
words or bytes::words or bytes
address the cpu::address the cpu
cpu fetches instructions::cpu fetches instructions
instructions from memory::instructions from memory
counter these instructions::counter these instructions
storing to specific::storing to specific
specific memory addresses::specific memory addresses
addresses a typical::addresses a typical
typical instruction-execution cycle::typical instruction-execution cycle
fetches an instruction::fetches an instruction
instruction from memory::instruction from memory
memory the instruction::memory the instruction
fetched from memory::fetched from memory
back in memory::back in memory
memory the mernory::memory the mernory
mernory unit sees::mernory unit sees
stream of memory::stream of memory
instructions or data::instructions or data
hozu a program::hozu a program
generates a memory::generates a memory
sequence of memory::sequence of memory
memory addresses generated::memory addresses generated
program we begin::program we begin
begin our discussion::begin our discussion
discussion by covering::discussion by covering
covering several issues::covering several issues
techniques for managing::techniques for managing
memory this coverage::memory this coverage
includes an overview::includes an overview
overview of basic::overview of basic
basic hardware issues::basic hardware issues
binding of symbolic::binding of symbolic
symbolic memory addresses::symbolic memory addresses
addresses to actual::addresses to actual
actual physical addresses::actual physical addresses
distinction between logical::distinction between logical
logical and physical::logical and physical
addresses we conclude::addresses we conclude
conclude the section::conclude the section
loading and linking::loading and linking
code and shared::code and shared
libraries 8.1.1 basic::libraries 8.1.1 basic
8.1.1 basic hardware::8.1.1 basic hardware
basic hardware main::basic hardware main
hardware main memory::hardware main memory
cpu can access::cpu can access
addresses as arguments::addresses as arguments
instructions in execution::instructions in execution
direct-access storage devices::direct-access storage devices
cpu can operate::cpu can operate
clock most cpus::clock most cpus
cpus can decode::cpus can decode
instructions and perform::instructions and perform
perform simple operations::perform simple operations
operations on register::operations on register
operations per clock::operations per clock
memory bus completing::memory bus completing
completing a memory::completing a memory
required to complete::required to complete
complete the instruction::complete the instruction
executing this situation::executing this situation
situation is intolerable::situation is intolerable
frequency of memory::frequency of memory
accesses the remedy::accesses the remedy
add fast memory::add fast memory
lj.o i process::lj.o i process
limit register define::limit register define
define a logical::define a logical
logical address space::logical address space
memory a memory::memory a memory
accommodate a speed::accommodate a speed
described in section::described in section
speed of accessing::speed of accessing
accessing physical memory::accessing physical memory
ensure correct operation::ensure correct operation
operation to protect::operation to protect
protect the operating::protect the operating
system from access::system from access
access by user::access by user
protect user processes::protect user processes
separate memory space::separate memory space
ability to determine::ability to determine
determine the range::determine the range
range of legal::range of legal
process may access::process may access
process can access::process can access
provide this protection::provide this protection
illustrated in figure::illustrated in figure
holds the smallest::holds the smallest
smallest legal physical::smallest legal physical
legal physical memory::legal physical memory
physical memory address::physical memory address
specifies the size::specifies the size
base register holds::base register holds
access all addresses::access all addresses
protection of memory::protection of memory
space is accomplished::space is accomplished
cpu hardware compare::cpu hardware compare
compare every address::compare every address
generated in user::generated in user
registers any attempt::registers any attempt
executing in user::executing in user
mode to access::mode to access
access operating-system memory::access operating-system memory
users  memory::users  memory
treats the attempt::treats the attempt
prevents a user::prevents a user
modifying the code::modifying the code
code or data::code or data
users the base::users the base
base and limit::base and limit
special privileged instruction::special privileged instruction
instruction since privileged::instruction since privileged
operating system executes::operating system executes
executes in kernel::executes in kernel
system can load::system can load
load the base::load the base
registers this scheme::registers this scheme
system to change::system to change
change the value::change the value
registers but prevents::registers but prevents
prevents user programs::prevents user programs
programs from changing::programs from changing
changing the registers::changing the registers
registers  contents::registers  contents
contents the operating::contents the operating
executing in kernel::executing in kernel
operating system memory::operating system memory
memory and users::memory and users
memory this provision::memory this provision
system to load::system to load
users  programs::users  programs
programs into users::programs into users
trap to operating::trap to operating
operating system monitor-addressing::operating system monitor-addressing
system monitor-addressing error::system monitor-addressing error
monitor-addressing error memory::monitor-addressing error memory
error memory figure::error memory figure
hardware address protection::hardware address protection
protection with base::protection with base
out those programs::out those programs
programs in case::programs in case
case of errors::case of errors
access and modify::access and modify
parameters of system::parameters of system
8.1.2 address binding::8.1.2 address binding
binary executable file::binary executable file
brought into memory::brought into memory
moved between disk::moved between disk
disk and memory::disk and memory
execution the processes::execution the processes
memory for execution::memory for execution
load that process::load that process
process into memory::process into memory
process is executed::process is executed
instructions and data::instructions and data
data from memory::data from memory
space is declared::space is declared
process to reside::process to reside
affects the addresses::affects the addresses
optional-before bein.g executed::optional-before bein.g executed
bind these symbolic::bind these symbolic
addresses to relocatable::addresses to relocatable
editor or loader::editor or loader
bind the relocatable::bind the relocatable
addresses to absolute::addresses to absolute
binding of instructions::binding of instructions
data to memory::data to memory
process will reside::process will reside
reside in memory::reside in memory
starting at location::starting at location
generated compiler code::generated compiler code
code will start::code will start
location and extend::location and extend
recompile this code::recompile this code
code the ms-dos::code the ms-dos
ms-dos .com-format programs::ms-dos .com-format programs
programs are bound::programs are bound
bound at compile::bound at compile
compile time load::compile time load
compiler must generate::compiler must generate
binding is delayed::binding is delayed
delayed until load::delayed until load
reload the user::reload the user
code to incorporate::code to incorporate
incorporate this changed::incorporate this changed
changed value execution::changed value execution
delayed until run::delayed until run
run time special::run time special
scheme to work::scheme to work
discussed in section::discussed in section
8.1.3 most general-purpose::8.1.3 most general-purpose
general-purpose operating systems::general-purpose operating systems
11se this method::11se this method
method a major::method a major
chapter is devoted::chapter is devoted
devoted to showing::devoted to showing
discussing appropriate hardware::discussing appropriate hardware
program 8.1.3 logical::program 8.1.3 logical
8.1.3 logical versus::8.1.3 logical versus
logical versus physical::logical versus physical
versus physical address::versus physical address
physical address space::physical address space
space an address::space an address
memory-is commonly referred::memory-is commonly referred
compile-time and load-time::compile-time and load-time
load-time address-binding methods::load-time address-binding methods
address-binding methods generate::address-binding methods generate
methods generate identical::methods generate identical
generate identical logical::generate identical logical
execution-time addressbinding scheme::execution-time addressbinding scheme
addressbinding scheme results::addressbinding scheme results
results in differing::results in differing
logical and addresses::logical and addresses
address and virtual::address and virtual
text the set::text the set
logical addresses generated::logical addresses generated
logical the set::logical the set
in_ the execution-time::in_ the execution-time
execution-time address-binding scheme::execution-time address-binding scheme
physical address spaces::physical address spaces
address spaces differ::address spaces differ
differ the run-time::differ the run-time
mapping from virtual::mapping from virtual
virtual to physical::virtual to physical
addresses is done::addresses is done
methods to accomplish::methods to accomplish
accomplish such mapping::accomplish such mapping
relocation register sections::relocation register sections
illustrate this mapping::illustrate this mapping
simple mmu scheme::simple mmu scheme
base-register scheme described::base-register scheme described
8.1.1 the base::8.1.1 the base
register is added::register is added
user to address::user to address
relocated to location::relocated to location
access to location::access to location
mapped to location::mapped to location
ms-dos operating system::ms-dos operating system
operating system running::operating system running
intel 80x86 family::intel 80x86 family
family of processors::family of processors
four relocation registers::four relocation registers
registers when loading::registers when loading
loading and running::loading and running
processes the user::processes the user
program never sees::program never sees
sees the real::sees the real
real physical addresses::real physical addresses
addresses the program::addresses the program
program can create::program can create
create a pointer::create a pointer
pointer to location::pointer to location
load or store::load or store
register the user::register the user
user program deals::user program deals
deals with logical::deals with logical
addresses the memory-mapping::addresses the memory-mapping
memory-mapping hardware converts::memory-mapping hardware converts
hardware converts logical::hardware converts logical
converts logical addresses::converts logical addresses
addresses into physical::addresses into physical
addresses this form::addresses this form
form of execution-time::form of execution-time
binding was discussed::binding was discussed
8.1.2 the final::8.1.2 the final
referenced memory address::referenced memory address
reference is made::reference is made
two different types::two different types
types of addresses::types of addresses
tor + max::tor + max
generates only logical::generates only logical
addresses and thinks::addresses and thinks
runs in locations::runs in locations
max the user::max the user
user program generates::user program generates
mapped to physical::mapped to physical
separate physical address::separate physical address
space is central::space is central
central to proper::central to proper
proper memory management::proper memory management
management 8.1.4 dynamic::management 8.1.4 dynamic
8.1.4 dynamic loading::8.1.4 dynamic loading
process to execute::process to execute
execute the size::execute the size
size of physical::size of physical
memory to obtain::memory to obtain
obtain better memory-space::obtain better memory-space
dynamic with dynancic::dynamic with dynancic
relocatable load format::relocatable load format
format the main::format the main
program is loaded::program is loaded
loaded into memory::loaded into memory
call another routine::call another routine
routine first checks::routine first checks
relocatable linking loader::relocatable linking loader
load the desired::load the desired
routine into menwry::routine into menwry
update the program::update the program
program s address::program s address
tables to reflect::tables to reflect
reflect this change::reflect this change
change then control::change then control
control is passed::control is passed
newly loaded routine::newly loaded routine
routine the advantage::routine the advantage
advantage of dynamic::advantage of dynamic
loaded this method::loaded this method
amounts of code::amounts of code
code are needed::code are needed
needed to handle::needed to handle
handle infrequently occurring::handle infrequently occurring
infrequently occurring cases::infrequently occurring cases
total program size::total program size
smaller dynamic loading::smaller dynamic loading
require special support::require special support
users to design::users to design
design their programs::design their programs
method operating systems::method operating systems
providing library routines::providing library routines
routines to implement::routines to implement
implement dynamic loading::implement dynamic loading
loading 8.1.5 dynamic::loading 8.1.5 dynamic
8.1.5 dynamic linking::8.1.5 dynamic linking
linking and shared::linking and shared
shared libraries figure::shared libraries figure
shows some operating::shows some operating
operating systems support::operating systems support
support only linking::support only linking
system language libraries::system language libraries
libraries are treated::libraries are treated
binary program image::binary program image
program image dynamic::program image dynamic
image dynamic linking::image dynamic linking
similar to dynamic::similar to dynamic
postponed until execution::postponed until execution
language subroutine libraries::language subroutine libraries
system must include::system must include
include a copy::include a copy
image this requirement::image this requirement
wastes both disk::wastes both disk
space and main::space and main
memory with dynamic::memory with dynamic
stub is included::stub is included
reference the stub::reference the stub
piece of code::piece of code
memory-resident library routine::memory-resident library routine
load the library::load the library
stub is executed::stub is executed
loads the routine::loads the routine
routine into memory::routine into memory
routine and executes::routine and executes
executes the routine::executes the routine
segment is reached::segment is reached
routine is executed::routine is executed
incurring no cost::incurring no cost
cost for dynamic::cost for dynamic
language library execute::language library execute
code this feature::code this feature
extended to library::extended to library
programs that reference::programs that reference
reference the library::reference the library
version without dynamic::version without dynamic
relinked to gain::relinked to gain
versions of libraries::versions of libraries
information is included::information is included
information to decide::information to decide
decide which copy::decide which copy
versions with minor::versions with minor
minor changes retain::minor changes retain
versions with major::versions with major
major changes increment::major changes increment
increment the number::increment the number
version are affected::version are affected
incompatible changes incorporated::incompatible changes incorporated
library was installed::library was installed
installed will continue::installed will continue
library this system::library this system
unlike dynamic loading::unlike dynamic loading
linking generally requires::linking generally requires
memory are protected::memory are protected
process s memory::process s memory
processes to access::processes to access
addresses we elaborate::addresses we elaborate
paging in section::paging in section
8.4.4 a process::8.4.4 a process
executed a process::executed a process
out of memory::out of memory
memory for continued::memory for continued
assume a multiprogramming::assume a multiprogramming
round-robin cpu-scheduling algorithm::round-robin cpu-scheduling algorithm
manager will start::manager will start
start to swap::start to swap
out the process::out the process
swap another process::swap another process
scheduler will allocate::scheduler will allocate
process in memory::process in memory
finishes its quantum::finishes its quantum
manager can swap::manager can swap
ready to execute::ready to execute
reschedule the cpu::reschedule the cpu
cpu in addition::cpu in addition
amounts of computing::amounts of computing
done between swaps::done between swaps
swaps a variant::swaps a variant
priority-based scheduling algorithms::priority-based scheduling algorithms
higher-priority process arrives::higher-priority process arrives
out the lower-priority::out the lower-priority
load and execute::load and execute
execute the higher-priority::execute the higher-priority
higher-priority process finishes::higher-priority process finishes
out @ swap::out @ swap
swap in backing::swap in backing
backing store main::backing store main
store main memory::store main memory
main memory figure::main memory figure
continued this variant::continued this variant
variant of swapping::variant of swapping
space it occupied::space it occupied
previously this restriction::previously this restriction
restriction is dictated::restriction is dictated
method of address::method of address
binding if binding::binding if binding
binding is done::binding is done
assembly or load::assembly or load
location if execution-time::location if execution-time
addresses are computed::addresses are computed
computed during execution::computed during execution
execution time swapping::execution time swapping
requires a backing::requires a backing
store the backing::store the backing
commonly a fast::commonly a fast
provide direct access::provide direct access
images the system::images the system
maintains a consisting::maintains a consisting
processes whose memory::processes whose memory
ready to run::ready to run
cpu scheduler decides::cpu scheduler decides
decides to execute::decides to execute
execute a process::execute a process
calls the dispatcher::calls the dispatcher
dispatcher the dispatcher::dispatcher the dispatcher
free memory region::free memory region
out a process::out a process
memory and swaps::memory and swaps
registers and transfers::registers and transfers
process the context-switch::process the context-switch
standard hard disk::standard hard disk
main memory takes::main memory takes
assuming an average::assuming an average
out and swap::out and swap
amount of memory::amount of memory
resident operating system::resident operating system
operating system taking::operating system taking
smaller than this-say::smaller than this-say
required for swapping::required for swapping
memory a user::memory a user
process with dynamic::process with dynamic
dynamic memory requirements::dynamic memory requirements
issue system calls::issue system calls
memory and release::memory and release
inform the operating::inform the operating
memory needs swapping::memory needs swapping
swapping is constrained::swapping is constrained
swap a process::swap a process
i a process::NNP a process
swap that process::swap that process
process to free::process to free
free up memory::free up memory
accessing the user::accessing the user
operation is queued::operation is queued
device is busy::device is busy
swap out process::swap out process
swap in process::swap in process
belongs to process::belongs to process
two main solutions::two main solutions
process with pending::process with pending
execute i operations::execute -NONE- operations
operating-system buffers transfers::operating-system buffers transfers
transfers between operating-system::transfers between operating-system
buffers and process::buffers and process
memory then occur::memory then occur
process is swapped::process is swapped
explanation we postpone::explanation we postpone
discussing this issue::discussing this issue
issue until chapter::issue until chapter
structure is covered::structure is covered
space is allocated::space is allocated
chunk of disk::chunk of disk
systems it requires::systems it requires
reasonable memory-management solution::reasonable memory-management solution
memory-management solution modified::memory-management solution modified
solution modified versions::solution modified versions
versions of swapping::versions of swapping
systems a modification::systems a modification
modification of swapping::modification of swapping
versions of unix::versions of unix
processes are running::processes are running
system is reduced::system is reduced
reduced memory management::reduced memory management
management in unix::management in unix
unix is described::unix is described
fully in sections::fully in sections
a.6 early pcs-which::a.6 early pcs-which
early pcs-which lacked::early pcs-which lacked
lacked the sophistication::lacked the sophistication
sophistication to implement::sophistication to implement
implement more advanced::implement more advanced
advanced memory-management methods-ran::advanced memory-management methods-ran
memory-management methods-ran multiple::memory-management methods-ran multiple
methods-ran multiple large::methods-ran multiple large
multiple large processes::multiple large processes
version of swapping::version of swapping
swapping a prime::swapping a prime
supports concurrent execution::supports concurrent execution
execution of processes::execution of processes
process is loaded::process is loaded
insufficient main memory::insufficient main memory
swapped to disk::swapped to disk
disk this operating::disk this operating
provide full swapping::provide full swapping
preempt one process::preempt one process
swapped-out process remains::swapped-out process remains
process remains swapped::process remains swapped
selects that process::selects that process
process to run::process to run
run subsequent versions::run subsequent versions
versions of microsoft::versions of microsoft
microsoft operating systems::microsoft operating systems
systems take advantage::systems take advantage
advanced mmu features::advanced mmu features
features now found::features now found
found in pcs::found in pcs
pcs we explore::pcs we explore
explore such features::explore such features
features in section::features in section
cover virtual memory::cover virtual memory
memory the main::memory the main
memory must accommodate::memory must accommodate
allocate main menlory::allocate main menlory
explains one common::explains one common
contiguous memory allocation::contiguous memory allocation
allocation the memory::allocation the memory
place the operating::place the operating
memory or high::memory or high
memory the major::memory the major
major factor affecting::major factor affecting
affecting this decision::affecting this decision
programmers usually place::programmers usually place
system in low::system in low
operating system resides::operating system resides
resides in low::resides in low
memory the development::memory the development
situation is similar::situation is similar
processes to reside::processes to reside
allocate available memory::allocate available memory
input queue waiting::input queue waiting
process is contained::process is contained
single contiguous section::single contiguous section
section of memory::section of memory
memory 8.3.1 memory::memory 8.3.1 memory
8.3.1 memory mapping::8.3.1 memory mapping
mapping and protection::mapping and protection
protection before discussing::protection before discussing
discussing memory allocation::discussing memory allocation
discuss the issue::discuss the issue
issue of memory::issue of memory
provide these features::provide these features
8.1.1 the relocation::8.1.1 the relocation
relocation register contaitls::relocation register contaitls
contaitls the value::contaitls the value
smallest physical address::smallest physical address
range of logical::range of logical
relocation and limit::relocation and limit
maps the logical::maps the logical
dynamically by adding::dynamically by adding
adding the value::adding the value
register this mapped::register this mapped
cpu scheduler selects::cpu scheduler selects
selects a process::selects a process
process for execution::process for execution
loads the relocation::loads the relocation
values as part::values as part
cpu is checked::cpu is checked
programs and data::programs and data
process the relocation-register::process the relocation-register
system s size::system s size
size to change::size to change
dynamically this flexibility::dynamically this flexibility
flexibility is desirable::flexibility is desirable
system contains code::system contains code
code and buffer::code and buffer
space for device::space for device
code and data::code and data
data in memory::data in memory
purposes such code::purposes such code
transient operating-system code::transient operating-system code
system during program::system during program
execution 8.3.2 memory::execution 8.3.2 memory
8.3.2 memory allocation::8.3.2 memory allocation
ready to turn::ready to turn
turn to memory::turn to memory
methods for allocating::methods for allocating
fixed-sized each partition::fixed-sized each partition
degree no trap::degree no trap
addressing error figure::addressing error figure
hardware supportfor relocation::hardware supportfor relocation
multiprogramming is bound::multiprogramming is bound
number of partitions::number of partitions
partition is free::partition is free
process is selected::process is selected
process this method::process this method
ibm os operating::ibm -NONE- operating
os operating system::-NONE- operating system
primarily in batch::primarily in batch
indicating which parts::indicating which parts
parts of memory::parts of memory
considered one large::considered one large
set of holes::set of holes
sizes as processes::sizes as processes
enter the system::enter the system
queue the operating::queue the operating
operating system takes::operating system takes
takes into account::takes into account
account the memory::account the memory
space in determining::space in determining
determining which processes::determining which processes
processes are allocated::processes are allocated
process is allocated::process is allocated
compete for cpu::compete for cpu
releases its memory::releases its memory
system can order::system can order
order the input::order the input
scheduling algorithm memory::scheduling algorithm memory
memory is allocated::memory is allocated
allocated to processes::allocated to processes
block of memory::block of memory
hold that process::hold that process
process the operating::process the operating
large enough block::large enough block
smaller memory requirements::smaller memory requirements
met in generat::met in generat
generat as mentioned::generat as mentioned
blocks available comprise::blocks available comprise
comprise a set::comprise a set
scattered throughout memory::scattered throughout memory
searches the set::searches the set
parts one part::parts one part
part is allocated::part is allocated
releases its block::releases its block
hole is adjacent::hole is adjacent
holes are merged::holes are merged
merged to form::merged to form
form one larger::form one larger
waiting for memory::waiting for memory
freed and recombined::freed and recombined
memory could satisfy::memory could satisfy
satisfy the demands::satisfy the demands
processes this procedure::processes this procedure
general which concerns::general which concerns
satisfy a request::satisfy a request
request of size::request of size
select a free::select a free
holes first fit::holes first fit
first fit allocate::first fit allocate
allocate the first::allocate the first
big enough searching::big enough searching
searching can start::searching can start
previous first-fit search::previous first-fit search
first-fit search ended::first-fit search ended
find a free::find a free
allocate the smallest::allocate the smallest
search the entire::search the entire
list is ordered::list is ordered
ordered by size::ordered by size
size this strategy::size this strategy
produces the smallest::produces the smallest
smallest leftover hole::smallest leftover hole
leftover hole worst::leftover hole worst
hole worst fit::hole worst fit
worst fit allocate::worst fit allocate
allocate the largest::allocate the largest
sorted by size::sorted by size
produces the largest::produces the largest
largest leftover hole::largest leftover hole
smaller leftover hole::smaller leftover hole
best-fit approach simulations::best-fit approach simulations
simulations have shown::simulations have shown
fit in terms::fit in terms
terms of decreasing::terms of decreasing
utilization neither first::utilization neither first
terms of storage::terms of storage
faster 8.3.3 fragmentation::faster 8.3.3 fragmentation
first-fit and best-fit::first-fit and best-fit
strategies for memory::strategies for memory
memory allocation suffer::memory allocation suffer
suffer from external::suffer from external
external as processes::external as processes
processes are loaded::processes are loaded
loaded and removed::loaded and removed
removed from memory::removed from memory
free memory space::free memory space
space is broken::space is broken
pieces external fragmentation::pieces external fragmentation
external fragmentation exists::external fragmentation exists
total memory space::total memory space
space to satisfy::space to satisfy
contiguous ; storage::contiguous ; storage
storage is fragmented::storage is fragmented
number of small::number of small
holes this fragmentation::holes this fragmentation
block of free::block of free
pieces of memory::pieces of memory
big free block::big free block
first-fit or best-fit::first-fit or best-fit
strategy can affect::strategy can affect
affect the amount::affect the amount
amount of fragmentation::amount of fragmentation
block is allocated::block is allocated
matter which algorithm::matter which algorithm
average process size::average process size
major problem statistical::major problem statistical
problem statistical analysis::problem statistical analysis
analysis of first::analysis of first
lost to fragmentation::lost to fragmentation
one-third of memory::one-third of memory
multiple-partition allocation scheme::multiple-partition allocation scheme
18,464 bytes suppose::18,464 bytes suppose
requests 18,462 bytes::requests 18,462 bytes
bytes the overhead::bytes the overhead
approach to avoiding::approach to avoiding
avoiding this problem::avoiding this problem
break the physical::break the physical
memory into fixed-sized::memory into fixed-sized
blocks and allocate::blocks and allocate
memory in units::memory in units
based on block::based on block
memory the difference::memory the difference
numbers is internal::numbers is internal
partition one solution::partition one solution
problem of external::problem of external
shuffle the memory::shuffle the memory
place all free::place all free
large block compaction::large block compaction
relocation is static::relocation is static
done ; compaction::done ; compaction
relocation is dynamic::relocation is dynamic
done at execution::done at execution
addresses are relocated::addresses are relocated
requires only moving::requires only moving
moving the program::moving the program
program and data::program and data
changing the base::changing the base
register to reflect::register to reflect
address when compaction::address when compaction
determine its cost::determine its cost
cost the simplest::cost the simplest
simplest compaction algorithm::simplest compaction algorithm
move all processes::move all processes
end of memory::end of memory
producing one large::producing one large
memory this scheme::memory this scheme
permit the logical::permit the logical
allowing a process::allowing a process
allocated physical memory::allocated physical memory
two complementary techniques::two complementary techniques
complementary techniques achieve::complementary techniques achieve
achieve this solution::achieve this solution
scheme that permits::scheme that permits
permits the physical::permits the physical
space a process::space a process
noncontiguous paging avoids::noncontiguous paging avoids
paging avoids external::paging avoids external
avoids external fragmentation::avoids external fragmentation
solves the considerable::solves the considerable
problem of fitting::problem of fitting
fitting memory chunks::fitting memory chunks
chunks of varying::chunks of varying
introduction of paging::introduction of paging
problem the problem::problem the problem
fragments or data::fragments or data
residing in main::residing in main
fragmentation problems discussed::fragmentation problems discussed
discussed in connection::discussed in connection
connection with main::connection with main
compaction is impossible::compaction is impossible
advantages over earlier::advantages over earlier
operating systems physical::operating systems physical
systems physical address::systems physical address
physical address foooo::physical address foooo
page table figure::page table figure
hardware 1---------1 physical::hardware 1---------1 physical
1---------1 physical memory::1---------1 physical memory
support for paging::support for paging
handled by hardware::handled by hardware
designs have implemented::designs have implemented
integrating the hardware::integrating the hardware
microprocessors 8.4.1 basic::microprocessors 8.4.1 basic
8.4.1 basic method::8.4.1 basic method
method the basic::method the basic
method for implementing::method for implementing
implementing paging involves::implementing paging involves
paging involves breaking::paging involves breaking
involves breaking physical::involves breaking physical
breaking physical memory::breaking physical memory
blocks called harnes::blocks called harnes
harnes and breaking::harnes and breaking
breaking logical memory::breaking logical memory
memory into blocks::memory into blocks
pages are loaded::pages are loaded
store is divided::store is divided
divided into fixed-sized::divided into fixed-sized
frames the hardware::frames the hardware
paging is illustrated::paging is illustrated
generated the cpu::generated the cpu
cpu is divided::cpu is divided
page in physical::page in physical
memory this base::memory this base
address is combined::address is combined
offset to define::offset to define
define the physical::define the physical
unit the paging::unit the paging
model of memory::model of memory
memory is shown::memory is shown
shown in figure::shown in figure
hardware the size::hardware the size
typically a power::typically a power
architecture the selection::architecture the selection
page size makes::page size makes
makes the translation::makes the translation
number and page::number and page
offset particularly easy::offset particularly easy
bytes or wordst::bytes or wordst
logical address designate::logical address designate
designate the page::designate the page
low-order bits designate::low-order bits designate
page table frame::page table frame
table frame number::table frame number
frame number physical::frame number physical
number physical memory::number physical memory
physical memory figure::physical memory figure
model of logical::model of logical
page number page::page number page
number page offset::number page offset
memory in figure::memory in figure
user s view::user s view
view of memory::view of memory
mapped into physical::mapped into physical
physical memory logical::physical memory logical
memory logical address::memory logical address
find that page::find that page
maps to physical::maps to physical
mapped to frame::mapped to frame
noticed that paging::noticed that paging
form of dynamic::form of dynamic
relocation every logical::relocation every logical
address is bound::address is bound
address using paging::address using paging
paging is similar::paging is similar
table of base::table of base
frame of memory::frame of memory
page table logical::page table logical
table logical memory::table logical memory
logical memory physical::logical memory physical
memory physical memory::memory physical memory
memory with 4-byte::memory with 4-byte
internal fragmentation notice::internal fragmentation notice
notice that frames::notice that frames
frames are allocated::frames are allocated
allocated as units::allocated as units
happen to coincide::happen to coincide
coincide with page::coincide with page
last frame allocated::last frame allocated
resulting in internal::resulting in internal
frame if process::frame if process
size is independent::size is independent
independent of page::independent of page
expect internal fragmentation::expect internal fragmentation
fragmentation to average::fragmentation to average
average one-half page::average one-half page
page per process::page per process
process this consideration::process this consideration
suggests that small::suggests that small
small page sizes::small page sizes
sizes are desirable::sizes are desirable
overhead is involved::overhead is involved
overhead is reduced::overhead is reduced
data being transferred::data being transferred
transferred is larger::transferred is larger
sizes have grown::sizes have grown
support even larger::support even larger
larger page sizes::larger page sizes
sizes some cpus::sizes some cpus
cpus and kernels::cpus and kernels
kernels even support::kernels even support
support multiple page::support multiple page
multiple page sizes::multiple page sizes
sizes for instance::sizes for instance
solaris uses page::solaris uses page
support for variable::support for variable
variable on-the-fly page::variable on-the-fly page
on-the-fly page size::on-the-fly page size
size can vary::size can vary
entry can point::entry can point
physical page frames::physical page frames
frames if frame::frames if frame
system with 4-byte::system with 4-byte
entries can address::entries can address
expressed in pages::expressed in pages
examined each page::examined each page
process the first::process the first
number is put::number is put
page is loaded::page is loaded
aspect of paging::aspect of paging
actual physical memory::actual physical memory
memory the user::memory the user
user program views::user program views
program views memory::program views memory
program in fact::program in fact
program is scattered::program is scattered
scattered throughout physical::scattered throughout physical
holds other programs::holds other programs
programs the difference::programs the difference
memory is reconciled::memory is reconciled
hardware the logical::hardware the logical
addresses are translated::addresses are translated
translated into physical::translated into physical
addresses this mapping::addresses this mapping
mapping is hidden::mapping is hidden
operating system notice::operating system notice
process by definition::process by definition
definition is unable::definition is unable
unable to access::unable to access
system is managing::system is managing
managing physical memory::managing physical memory
details of physical::details of physical
physical memory-which frames::physical memory-which frames
frame the frame::frame the frame
physical page frame::physical page frame
free or allocated::free or allocated
process or processes::process or processes
free-frame list free-frame::free-frame list free-frame
list free-frame list::list free-frame list
new-process page table::new-process page table
allocation in addition::allocation in addition
aware that user::aware that user
user processes operate::user processes operate
operate in user::operate in user
mapped to produce::mapped to produce
produce physical addresses::produce physical addresses
makes a system::makes a system
produce the correct::produce the correct
correct physical address::correct physical address
address the operating::address the operating
operating system maintains::operating system maintains
maintains a copy::maintains a copy
counter and register::counter and register
contents this copy::contents this copy
translate logical addresses::translate logical addresses
addresses to physical::addresses to physical
system must map::system must map
map a logical::map a logical
physical address manually::physical address manually
dispatcher to define::dispatcher to define
define the hardware::define the hardware
hardware page table::hardware page table
allocated the cpu::allocated the cpu
paging therefore increases::paging therefore increases
increases the context-switch::increases the context-switch
8.4.2 hardware support::8.4.2 hardware support
support each operating::support each operating
methods for storing::methods for storing
storing page tables::storing page tables
tables most allocate::tables most allocate
allocate a page::allocate a page
process a pointer::process a pointer
table is stored::table is stored
process control block::process control block
dispatcher is told::dispatcher is told
told to start::told to start
start a process::start a process
registers and define::registers and define
define the correct::define the correct
correct hardware page-table::correct hardware page-table
hardware page-table values::hardware page-table values
stored user page::stored user page
user page table::user page table
table the hardware::table the hardware
table is implemented::table is implemented
set of dedicated::set of dedicated
dedicated these registers::dedicated these registers
logic to make::logic to make
make the paging-address::make the paging-address
paging-address translation efficient::paging-address translation efficient
efficient every access::efficient every access
access to memory::access to memory
consideration the cpu::consideration the cpu
cpu dispatcher reloads::cpu dispatcher reloads
reloads these registers::reloads these registers
instructions to load::instructions to load
load or modify::load or modify
modify the page-table::modify the page-table
system can change::system can change
change the memory::change the memory
map the dec::map the dec
architecture the address::architecture the address
table thus consists::table thus consists
table is satisfactory::table is satisfactory
registers to implement::registers to implement
implement the page::implement the page
page table changing::page table changing
table changing page::table changing page
changing page tables::changing page tables
page tables requires::page tables requires
tables requires changing::tables requires changing
substantially reducing context-switch::substantially reducing context-switch
required to access::required to access
access a user::access a user
user memory location::user memory location
page number fori::page number fori
fori this task::fori this task
requires a memory::requires a memory
offset to produce::offset to produce
produce the actual::produce the actual
access the desired::access the desired
place in memory::place in memory
two memory accesses::two memory accesses
accesses are needed::accesses are needed
needed to access::needed to access
access a byte::access a byte
access is slowed::access is slowed
resort to swapping::resort to swapping
fastlookup hardware cache::fastlookup hardware cache
bc.1her the tlb::bc.1her the tlb
tlb is associative::tlb is associative
memory each entry::memory each entry
memory is presented::memory is presented
item is compared::item is compared
item is found::item is found
field is returned::field is returned
returned the search::returned the search
search is fast::search is fast
number of entries::number of entries
tlb is small::tlb is small
1,024 the tlb::1,024 the tlb
address is generated::address is generated
number is presented::number is presented
number is found::number is found
unmapped memory reference::unmapped memory reference
number is obtained::number is obtained
add the page::add the page
number and frame::number and frame
full of entries::full of entries
system must select::system must select
replacement replacement policies::replacement replacement policies
replacement policies range::replacement policies range
entries for kernel::entries for kernel
code are wired::code are wired
entry an asid::entry an asid
asid uniquely identifies::asid uniquely identifies
identifies each process::identifies each process
provide address-space protection::provide address-space protection
attempts to resolve::attempts to resolve
resolve virtual page::resolve virtual page
virtual page numbers::virtual page numbers
running process matches::running process matches
matches the asid::matches the asid
attempt is treated::attempt is treated
miss in addition::miss in addition
addition to providing::addition to providing
providing address-space protection::providing address-space protection
support separate asids::support separate asids
table is selected::table is selected
wrong translation information::wrong translation information
tlb could include::tlb could include
include old entries::include old entries
tlb hit tlb::tlb hit tlb
tlb p tlb::tlb p tlb
tlb miss page::tlb miss page
miss page table::miss page table
hardware with tlb::hardware with tlb
tlb physical memory::tlb physical memory
memory contain valid::memory contain valid
valid virtual addresses::valid virtual addresses
incorrect or invalid::incorrect or invalid
invalid physical addresses::invalid physical addresses
physical addresses left::physical addresses left
process the percentage::process the percentage
percentage of times::percentage of times
80-percent hit ratio::80-percent hit ratio
find the desired::find the desired
desired page number::desired page number
nanoseconds to search::nanoseconds to search
search the tlb::search the tlb
nanoseconds to access::nanoseconds to access
mapped-memory access takes::mapped-memory access takes
fail to find::fail to find
find the page::find the page
first access memory::first access memory
table and frame::table and frame
byte in memory::byte in memory
nanoseconds to find::nanoseconds to find
find the effective::find the effective
weight the case::weight the case
suffer a 40-percent::suffer a 40-percent
slowdown in memory-access::slowdown in memory-access
98-percent hit ratio::98-percent hit ratio
nanoseconds this increased::nanoseconds this increased
increased hit rate::increased hit rate
hit rate produces::hit rate produces
slowdown in access::slowdown in access
explore the impact::explore the impact
tlb in chapter::tlb in chapter
8.4.3 protection memory::8.4.3 protection memory
protection memory protection::protection memory protection
environment is accomplished::environment is accomplished
accomplished by protection::accomplished by protection
table one bit::table one bit
bit can define::bit can define
define a page::define a page
read-write or read-only::read-write or read-only
read-only every reference::read-only every reference
reference to memory::reference to memory
table to find::table to find
find the correct::find the correct
correct frame nuncber::correct frame nuncber
checked to verify::checked to verify
page an attempt::page an attempt
attempt to write::attempt to write
expand this approach::expand this approach
approach to provide::approach to provide
provide a finer::provide a finer
level of protection::level of protection
hardware to provide::hardware to provide
providing separate protection::providing separate protection
separate protection bits::separate protection bits
kind of access::kind of access
accesses illegal attempts::accesses illegal attempts
system one additional::system one additional
bit is set::bit is set
set to valid::set to valid
process s logical::process s logical
set to invalid::set to invalid
address space illegal::address space illegal
space illegal addresses::space illegal addresses
addresses are trapped::addresses are trapped
valid -invalid bit::valid -invalid bit
bit the operating::bit the operating
operating system sets::operating system sets
sets this bit::sets this bit
14-bit address space::14-bit address space
number j valid-invalid::number j valid-invalid
---------  page::----------  page
page n figure::page n figure
table any attempt::table any attempt
attempt to generate::attempt to generate
generate an address::generate an address
address in pages::address in pages
computer will trap::computer will trap
trap to flee::trap to flee
flee operating system::flee operating system
invalid page reference::invalid page reference
scheme has created::scheme has created
created a problem::created a problem
address is illegal::address is illegal
howeve1 ~ references::howeve1 ~ references
references to page::references to page
classified as valid::classified as valid
accesses to addresses::accesses to addresses
invalid this problem::invalid this problem
2-kb page size::2-kb page size
size and reflects::size and reflects
reflects the internal::reflects the internal
fragmentation of paging::fragmentation of paging
range in fact::range in fact
fact many processes::fact many processes
cases to create::cases to create
create a page::create a page
table with entries::table with entries
valuable memory space::valuable memory space
space some systems::space some systems
systems provide hardware::systems provide hardware
page table value::page table value
value is checked::value is checked
address to verify::address to verify
system 8.4.4 shared::system 8.4.4 shared
8.4.4 shared pages::8.4.4 shared pages
pages an advantage::pages an advantage
advantage of paging::advantage of paging
possibility of sharing::possibility of sharing
sharing common code::sharing common code
code this consideration::code this consideration
system that supports::system that supports
executes a text::executes a text
text editor consists::text editor consists
three-page editor-each page::three-page editor-each page
large page size::large page size
simplify the figure::simplify the figure
processes each process::processes each process
data page reentrant::data page reentrant
page reentrant code::page reentrant code
code is non-self-modifying::code is non-self-modifying
processes can execute::processes can execute
copy of registers::copy of registers
registers and data::registers and data
storage to hold::storage to hold
hold the data::hold the data
process s execution::process s execution
execution the data::execution the data
two different processes::two different processes
memory each user::memory each user
user s page::user s page
page table maps::page table maps
pages are mapped::pages are mapped
space per user::space per user
user the total::user the total
total space required::total space required
8,000 kb-a significant::8,000 kb-a significant
kb-a significant savings::kb-a significant savings
heavily used programs::heavily used programs
reentrant the read-only::reentrant the read-only
nature of shared::nature of shared
system should enforce::system should enforce
enforce this property::enforce this property
property the sharing::property the sharing
sharing of memory::sharing of memory
memory among processes::memory among processes
system is similar::system is similar
task by threads::task by threads
described in chapter::described in chapter
described shared memory::described shared memory
process p1 process::process p1 process
process p3 page::process p3 page
sharing of code::sharing of code
corrununication some operating::corrununication some operating
operating systems implement::operating systems implement
systems implement shared::systems implement shared
implement shared memory::implement shared memory
memory using shared::memory using shared
shared pages organizing::shared pages organizing
pages organizing memory::pages organizing memory
pages provides numerous::pages provides numerous
benefits in addition::benefits in addition
addition to allowing::addition to allowing
allowing several processes::allowing several processes
processes to share::processes to share
benefits in chapter::benefits in chapter
techniques for structuring::techniques for structuring
structuring the page::structuring the page
table 8.5.1 hierarchical::table 8.5.1 hierarchical
8.5.1 hierarchical paging::8.5.1 hierarchical paging
paging most modern::paging most modern
modern computer systems::modern computer systems
computer systems support::computer systems support
support a large::support a large
large logical address::large logical address
32-bit logical address::32-bit logical address
table may consist::table may consist
4mb of physical::4mb of physical
allocate the page::allocate the page
contiguously in main::contiguously in main
memory one simple::memory one simple
divide the page::divide the page
table into smaller::table into smaller
accomplish this division::accomplish this division
two-level paging algorithm::two-level paging algorithm
page table memory::page table memory
table memory figure::table memory figure
two-level page-table scheme::two-level page-table scheme
scheme a 32-bit::scheme a 32-bit
address is divided::address is divided
page number consisting::page number consisting
page offset consisting::page offset consisting
page the page::page the page
10-bit page number::10-bit page number
10-bit page offset::10-bit page offset
outer page table::outer page table
table the address-translation::table the address-translation
architecture is shown::architecture is shown
address translation works::address translation works
vax architecture supports::vax architecture supports
supports a variation::supports a variation
variation of two-level::variation of two-level
paging the vax::paging the vax
bytes the logical::bytes the logical
process is divided::process is divided
four equal sections::four equal sections
bytes each section::bytes each section
represent the logical::represent the logical
logical page number::logical page number
represent an offset::represent an offset
page by partitioning::page by partitioning
partitioning the page::partitioning the page
page outer page::page outer page
two-level 32-bit paging::two-level 32-bit paging
32-bit paging architecture::32-bit paging architecture
system can leave::system can leave
leave partitions unused::leave partitions unused
section page offset::section page offset
designates the section::designates the section
one-level page table::one-level page table
bytes per entry::bytes per entry
pages the user-process::pages the user-process
user-process page tables::user-process page tables
64-bit logical address::64-bit logical address
two-level paging scheme::two-level paging scheme
illustrate this point::illustrate this point
page table consists::page table consists
iml.er page tables::iml.er page tables
entries the addresses::entries the addresses
page inner page::page inner page
bytes the obvious::bytes the obvious
divide the outer::divide the outer
processors for added::processors for added
flexibility and efficiency::flexibility and efficiency
page the outer::page the outer
three-level paging scheme::three-level paging scheme
paging scheme suppose::paging scheme suppose
table is made::table is made
64-bit address space::64-bit address space
2nd outer page::2nd outer page
outer page outer::outer page outer
table is sti11234::table is sti11234
bytes in size::bytes in size
four-level paging scheme::four-level paging scheme
second-level outer page::second-level outer page
ultrasparc would require::ultrasparc would require
require seven levels::require seven levels
levels of paging-a::levels of paging-a
paging-a prohibitive number::paging-a prohibitive number
number of memory::number of memory
memory accessesto translate::memory accessesto translate
translate each logical::translate each logical
hierarchical page tables::hierarchical page tables
generally considered inappropriate::generally considered inappropriate
inappropriate 8.5.2 hashed::inappropriate 8.5.2 hashed
8.5.2 hashed page::8.5.2 hashed page
hashed page tables::hashed page tables
tables a common::tables a common
approach for handling::approach for handling
handling address spaces::handling address spaces
address spaces larger::address spaces larger
virtual page number::virtual page number
number each entry::number each entry
list of elements::list of elements
elements that hash::elements that hash
mapped page frame::mapped page frame
list the algorithm::list the algorithm
address is hashed::address is hashed
table the virtual::table the virtual
number is compared::number is compared
compared with field::compared with field
form the desired::form the desired
desired physical address::desired physical address
list are searched::list are searched
matching virtual page::matching virtual page
number this scheme::number this scheme
scheme is shown::scheme is shown
favorable for 64-bit::favorable for 64-bit
64-bit address spaces::64-bit address spaces
proposed this variation::proposed this variation
similar to hashed::similar to hashed
hash table refers::hash table refers
single page-table entry::single page-table entry
entry can store::entry can store
store the mappings::store the mappings
mappings for multiple::mappings for multiple
multiple physical-page frames::multiple physical-page frames
physical-page frames clustered::physical-page frames clustered
frames clustered page::frames clustered page
clustered page tables::clustered page tables
references are noncontiguous::references are noncontiguous
noncontiguous and scattered::noncontiguous and scattered
space 8.5.3 inverted::space 8.5.3 inverted
8.5.3 inverted page::8.5.3 inverted page
inverted page tables::inverted page tables
table the page::table the page
virtual hash table::virtual hash table
hash table figure::hash table figure
hashed page table::hashed page table
page table physical::page table physical
table physical address::table physical address
physical address physical::physical address physical
address physical memory::address physical memory
processes reference pages::processes reference pages
pages  virtual::pages  virtual
addresses the operating::addresses the operating
translate this reference::translate this reference
table is sorted::table is sorted
sorted by virtual::sorted by virtual
physical address entry::physical address entry
entry is located::entry is located
consist of millions::consist of millions
millions of entries::millions of entries
entries these tables::entries these tables
tables may consume::tables may consume
consume large amounts::consume large amounts
amounts of physical::amounts of physical
solve this problem::solve this problem
page an inverted::page an inverted
inverted page table::inverted page table
real memory location::real memory location
process that owns::process that owns
owns the page::owns the page
page of physical::page of physical
shows the operation::shows the operation
page table compare::page table compare
depicts a standard::depicts a standard
standard page table::standard page table
table in operation::table in operation
operation inverted page::operation inverted page
tables often require::tables often require
address spaces mapping::address spaces mapping
spaces mapping physical::spaces mapping physical
mapping physical memory::mapping physical memory
physical memory storing::physical memory storing
storing the address-space::storing the address-space
address-space identifier ensures::address-space identifier ensures
process is mapped::process is mapped
page frame examples::page frame examples
examples of systems::examples of systems
systems using inverted::systems using inverted
page tables include::page tables include
include the 64-bit::include the 64-bit
ultrasparc and powerpc::ultrasparc and powerpc
powerpc to illustrate::powerpc to illustrate
illustrate this method::illustrate this method
describe a simplified::describe a simplified
i11verted page table::i11verted page table
inverted page-table entry::inverted page-table entry
assumes the role::assumes the role
memory page table::memory page table
physical address figure::physical address figure
table physical memory::table physical memory
consisting of process-id::consisting of process-id
subsystem the inverted::subsystem the inverted
match is found-say::match is found-say
i-then the physical::i-then the physical
offset is generated::offset is generated
match is found::match is found
illegal address access::illegal address access
decreases the amount::decreases the amount
needed to store::needed to store
store each page::store each page
increases the amount::increases the amount
needed to search::needed to search
search the table::search the table
page reference occurs::page reference occurs
sorted by physical::sorted by physical
occur on virtual::occur on virtual
match this search::match this search
long to alleviate::long to alleviate
alleviate this problem::alleviate this problem
limit the search::limit the search
search to one-or::search to one-or
hash table adds::hash table adds
adds a memory::adds a memory
virtual memory reference::virtual memory reference
memory reference requires::memory reference requires
two real memory::two real memory
real memory reads-one::real memory reads-one
tlb is searched::tlb is searched
table is consulted::table is consulted
offering some performance::offering some performance
tables have difficulty::tables have difficulty
difficulty implementing shared::difficulty implementing shared
implementing shared memory::implementing shared memory
shared memory shared::shared memory shared
memory shared memory::memory shared memory
implemented as multiple::implemented as multiple
multiple virtual addresses::multiple virtual addresses
sharing the memory::sharing the memory
address this standard::address this standard
virtual page entry::virtual page entry
shared virtual addresses::shared virtual addresses
addresses a simple::addresses a simple
technique for addressing::technique for addressing
addressing this issue::addressing this issue
shared physical address::shared physical address
address this means::address this means
means that references::means that references
references to virtual::references to virtual
result in page::result in page
faults an important::faults an important
aspect of memory::aspect of memory
unavoidable with paging::unavoidable with paging
view is mapped::view is mapped
mapped onto physical::mapped onto physical
memory this mapping::memory this mapping
mapping allows differentiation::mapping allows differentiation
differentiation between logical::differentiation between logical
memory and physical::memory and physical
memory 8.6.1 basic::memory 8.6.1 basic
8.6.1 basic method::8.6.1 basic method
method do users::method do users
array of bytes::array of bytes
data most people::data most people
prefer to view::prefer to view
collection of variable-sized::collection of variable-sized
ordering among segments::ordering among segments
set of methods::set of methods
include various data::include various data
modules or data::modules or data
elements is referred::elements is referred
caring what addresses::caring what addresses
addresses in memory::addresses in memory
memory these elements::memory these elements
stack is stored::stack is stored
defined by subroutine::defined by subroutine
subroutine symbol table::subroutine symbol table
main program logical::main program logical
program logical address::program logical address
segment are identified::segment are identified
seventh stack frame::seventh stack frame
stack frame entry::stack frame entry
scheme that supports::scheme that supports
supports this user::supports this user
memory a logical::memory a logical
collection of segments::collection of segments
segments each segment::segments each segment
length the addresses::length the addresses
segment the user::segment the user
user therefore specifies::user therefore specifies
specifies each address::specifies each address
contrast this scheme::contrast this scheme
simplicity of implementation::simplicity of implementation
segments are numbered::segments are numbered
segn lent number::segn lent number
logical address consists::logical address consists
program is compiled::program is compiled
compiler automatically constructs::compiler automatically constructs
automatically constructs segments::automatically constructs segments
constructs segments reflecting::constructs segments reflecting
reflecting the input::reflecting the input
compiler might create::compiler might create
create separate segments::create separate segments
code global variables::code global variables
variables the heap::variables the heap
allocated the stacks::allocated the stacks
thread the standard::thread the standard
standard c library::standard c library
table yes trap::table yes trap
error + figure::error + figure
segmentation hardware physical::segmentation hardware physical
hardware physical memory::hardware physical memory
physical memory libraries::physical memory libraries
assign.ed separate segments::assign.ed separate segments
segments the loader::segments the loader
segments and assign::segments and assign
assign them segment::assign them segment
numbers 8.6.2 hardware::numbers 8.6.2 hardware
sequence of bytes::sequence of bytes
define an implementation::define an implementation
implementation to map::implementation to map
map twodimensional user-defined::map twodimensional user-defined
twodimensional user-defined addresses::twodimensional user-defined addresses
addresses into one-dimensional::addresses into one-dimensional
one-dimensional physical addresses::one-dimensional physical addresses
mapping is effected::mapping is effected
limit the segment::limit the segment
startilcg physical address::startilcg physical address
resides in memory::resides in memory
segment limit specifies::segment limit specifies
specifies the length::specifies the length
table is illustrated::table is illustrated
table the offset::table the offset
logical addressing attempt::logical addressing attempt
attempt beyond end::attempt beyond end
end of segment::end of segment
offset is legal::offset is legal
base to produce::base to produce
produce the address::produce the address
address in physical::address in physical
byte the segment::byte the segment
essentially an array::essentially an array
array of base-limit::array of base-limit
base-limit register pairs::base-limit register pairs
segments are stored::segments are stored
stored in physical::stored in physical
memory as shown::memory as shown
shown the segment::shown the segment
giving the beginning::giving the beginning
segment in physical::segment in physical
long and begins::long and begins
begins at location::begins at location
reference to byte::reference to byte
segment o segment1::segment o segment1
segment1 symbol table::segment1 symbol table
main program segment::main program segment
segment table figure::segment table figure
segmentation 14001---1 segment::segmentation 14001---1 segment
reference to segment::reference to segment
base of segment::base of segment
tooo bytes long::tooo bytes long
long both paging::long both paging
segmentation have advantages::segmentation have advantages
disadvantages in fact::disadvantages in fact
fact some architectures::fact some architectures
discuss the intel::discuss the intel
intel pentium architecture::intel pentium architecture
give a complete::give a complete
present the major::present the major
based we conclude::based we conclude
conclude our discussion::conclude our discussion
overview of linux::overview of linux
linux address translation::linux address translation
translation on pentium::translation on pentium
systems in pentium::systems in pentium
cpu generates logical::cpu generates logical
generates logical addresses::generates logical addresses
unit the segmentation::unit the segmentation
segmentation unit produces::segmentation unit produces
produces a linear::produces a linear
address the linear::address the linear
generates the physical::generates the physical
address in main::address in main
segmentation and paging::segmentation and paging
paging units form::paging units form
form the equivalent::form the equivalent
8.7.1 pentium segmentation::8.7.1 pentium segmentation
segmentation the pentium::segmentation the pentium
number of segments::number of segments
segments per process::segments per process
cpu i figure::cpu i figure
logical to physical::logical to physical
physical address translation::physical address translation
partitions the first::partitions the first
first partition consists::first partition consists
ldt and gdt::ldt and gdt
8-byte segment descriptor::8-byte segment descriptor
descriptor with detailed::descriptor with detailed
including the base::including the base
location and limit::location and limit
segment the logical::segment the logical
designates the segment::designates the segment
gdt or ldt::gdt or ldt
deals with protection::deals with protection
protection the offset::protection the offset
segment in question::segment in question
question the machine::question the machine
allowing six segments::allowing six segments
8-byte microprogram registers::8-byte microprogram registers
registers to hold::registers to hold
ldt or gdt::ldt or gdt
gdt this cache::gdt this cache
lets the pentium::lets the pentium
read the descriptor::read the descriptor
descriptor from memory::descriptor from memory
reference the linear::reference the linear
segment register points::segment register points
gdt the base::gdt the base
generate a first::generate a first
check for address::check for address
fault is generated::fault is generated
offset is added::offset is added
32-bit linear address::32-bit linear address
paging unit turns::paging unit turns
turns this linear::turns this linear
address 8.7.2 pentium::address 8.7.2 pentium
8.7.2 pentium paging::8.7.2 pentium paging
paging the pentium::paging the pentium
two-level paging schence::two-level paging schence
architecture is similar::architecture is similar
intel pentium address::intel pentium address
pentium address translation::pentium address translation
translation is shown::translation is shown
logical address offset::logical address offset
linear address figure::linear address figure
intel pentium segmentation::intel pentium segmentation
pentium segmentation detail::pentium segmentation detail
detail in figure::detail in figure
high-order bits reference::high-order bits reference
reference an entry::reference an entry
outernlost page table::outernlost page table
terms the page::terms the page
cr3 register points::cr3 register points
page directory entry::page directory entry
directory entry points::directory entry points
4-kb page pointed::4-kb page pointed
table one entry::table one entry
page size flag::page size flag
flag is set::flag is set
page directory points::page directory points
4-mb page frame::4-mb page frame
registe r page::registe r page
page directory page::page directory page
directory page directory::directory page directory
page 4-mb page::page 4-mb page
4-mb page figure::4-mb page figure
improve the efficiency::improve the efficiency
efficiency of physical::efficiency of physical
intel pentium page::intel pentium page
pentium page tables::pentium page tables
entry is pointing::entry is pointing
memory on demand::memory on demand
demand 8.7.3 linux::demand 8.7.3 linux
linux on pentium::linux on pentium
linux operating system::linux operating system
architecture because linux::architecture because linux
linux is designed::linux is designed
designed to run::designed to run
variety of processors::variety of processors-
provide only limited::provide only limited
support for segmentationlinux::support for segmentationlinux
rely on segmentation::rely on segmentation
segment for kernel::segment for kernel
code a segment::code a segment
data a segment::data a segment
segment for user::segment for user
data a task-state::data a task-state
default ldt segment::default ldt segment
segment the segments::segment the segments
segments for user::segments for user
code and user::code and user
data are shared::data are shared
running in user::running in user
descriptors are stored::descriptors are stored
global descriptor table::global descriptor table
segment is stored::segment is stored
gdt the tss::gdt the tss
store the hardware::store the hardware
process during context::process during context
switches the default::switches the default
ldt as noted::ldt as noted
segment selector includes::segment selector includes
includes a 2-bit::includes a 2-bit
field for protection::field for protection
levels of protection::levels of protection
limlx only recognizes::limlx only recognizes
mode and kernel::mode and kernel
two-level paging model::two-level paging model
variety of hardware::variety of hardware
platforms where two-level::platforms where two-level
linux has adopted::linux has adopted
adopted a threelevel::adopted a threelevel
threelevel paging strategy::threelevel paging strategy
strategy that works::strategy that works
32-bit and 64-bit::32-bit and 64-bit
architectures the linear::architectures the linear
address in linux::address in linux
linux is broken::linux is broken
global directory middle::global directory middle
directory middle directory::directory middle directory
middle directory page::middle directory page
directory page table::directory page table
highlights the three-level::highlights the three-level
three-level paging model::three-level paging model
model in linux::model in linux
linux the number::linux the number
number of bits::number of bits
linear address varies::linear address varies
lglobal directory global::lglobal directory global
directory global directory::directory global directory
global directory cr3::global directory cr3
directory cr3 __,.c__::directory cr3 __,.c__
cr3 __,.c__ ___::cr3 __,.c__ ___
__,.c__ ___ __l::__,.c__ ___ __l
___ __l register::___ __l register
middle directory figure::middle directory figure
paging in linux::paging in linux
linux offset page::linux offset page
offset page frame::offset page frame
bypassing the middle::bypassing the middle
directory each task::directory each task
task in linux::task in linux
set of page::set of page
tables and -just::tables and -just
-the cr3 register::-the cr3 register
task currently executing::task currently executing
register is saved::register is saved
saved and restored::saved and restored
context switch memory-management::context switch memory-management
switch memory-management algorithms::switch memory-management algorithms
algorithms for multiprogrammed::algorithms for multiprogrammed
multiprogrammed operating systems::multiprogrammed operating systems
operating systems range::operating systems range
simple single-user system::simple single-user system
single-user system approach::single-user system approach
approach to paged::approach to paged
provided every memory::provided every memory
memory address generated::memory address generated
checked for legality::checked for legality
address the checking::address the checking
combinations of paging::combinations of paging
aspects in comparing::aspects in comparing
comparing different memory-management::comparing different memory-management
support a simple::support a simple
simple base register::simple base register
base-limit register pair::base-limit register pair
pair is sufficient::pair is sufficient
single and multiple-partition::single- and multiple-partition
segmentation need mapping::segmentation need mapping
tables to define::tables to define
define the address::define the address
address map performance::address map performance
required to map::required to map
physical address increases::physical address increases
compare or add::compare or add
implemented in fast::implemented in fast
user memory accesses::user memory accesses
substantially a tlb::substantially a tlb
tlb can reduce::tlb can reduce
reduce the performance::reduce the performance
acceptable level fragmentation::acceptable level fragmentation
fragmentation a multiprogrammed::fragmentation a multiprogrammed
level of multiprogramming::level of multiprogramming
increase the multiprogramming::increase the multiprogramming
packing more processes::packing more processes
processes into memory::processes into memory
memory to accomplish::memory to accomplish
accomplish this task::accomplish this task
reduce memory waste::reduce memory waste
systems with fixed-sized::systems with fixed-sized
fixed-sized allocation units::fixed-sized allocation units
scheme and paging::scheme and paging
suffer from internal::suffer from internal
internal fragmentation systems::internal fragmentation systems
systems with variable-sized::systems with variable-sized
variable-sized allocation units::variable-sized allocation units
scheme and segmentation::scheme and segmentation
external fragmentation relocation::external fragmentation relocation
relocation one solution::relocation one solution
problem is compaction::problem is compaction
compaction compaction involves::compaction compaction involves
compaction involves shifting::compaction involves shifting
shifting a program::shifting a program
program in memory::program in memory
notice the change::notice the change
change this consideration::change this consideration
requires that logical::requires that logical
addresses be relocated::addresses be relocated
compact storage swapping::compact storage swapping
storage swapping swapping::storage swapping swapping
algorithm at intervals::algorithm at intervals
dictated by cpu-scheduling::dictated by cpu-scheduling
processes are copied::processes are copied
copied from main::copied from main
back to main::back to main
fit into memory::fit into memory
sharing another means::sharing another means
means of increasing::means of increasing
increasing the multiprogramming::increasing the multiprogramming
sharing generally requires::sharing generally requires
paging or segmentation::paging or segmentation
provide small packets::provide small packets
packets of information::packets of information
pages or segments::pages or segments
means of running::means of running
running many processes::running many processes
designed carefully protection::designed carefully protection
protection if paging::protection if paging
segmentation is provided::segmentation is provided
read-write this restriction::read-write this restriction
case to provide::case to provide
provide simple run-time::provide simple run-time
simple run-time checks::simple run-time checks
checks for common::checks for common
common programming errors::common programming errors
explain the difference::explain the difference
difference between internal::difference between internal
internal and external::internal and external
compare the memory::compare the memory
memory organization schemes::memory organization schemes
schemes of contiguous::schemes of contiguous
paging with respect::paging with respect
fragmentation b internal::fragmentation b internal
fragmentation c ability::fragmentation c ability
ability to share::ability to share
code across processes::code across processes
paging sometimes combined::paging sometimes combined
program to allocate::program to allocate
allocate more memory::allocate more memory
space during execution::space during execution
allocation of data::allocation of data
segments of programs::segments of programs
required to support::required to support
support dynamic memory::support dynamic memory
dynamic memory allocation::dynamic memory allocation
schemes a contiguous::schemes a contiguous
allocation b pure::allocation b pure
segmentation c pure::segmentation c pure
intel address-translation scheme::intel address-translation scheme
address-translation scheme shown::address-translation scheme shown
pentium in translatil::pentium in translatil
system of hardware::system of hardware
complicated memory translation::complicated memory translation
purpose of paging::purpose of paging
paging the page::paging the page
explain why sharil::explain why sharil
module is easier::module is easier
easier when segmentation::easier when segmentation
system with paging::system with paging
system allow access::system allow access
compare the segmented::compare the segmented
pagil g scheme::pagil g scheme
page table scheme::page table scheme
scheme for handling::scheme for handling
handling large address::handling large address
large address spaces::large address spaces
page table stored::page table stored
stored in memory::stored in memory
memory reference takes::memory reference takes
paged memory reference::paged memory reference
references are found::references are found
effective memory reference::effective memory reference
assume that finding::assume that finding
finding a page-table::finding a page-table
paging with segmentation::paging with segmentation
segmentation with respect::segmentation with respect
address translation structures::address translation structures
structures in order::structures in order
order to convert::order to convert
convert virtual addresses::convert virtual addresses
data the cpu::data the cpu
fetch or store::fetch or store
two baselimit register::two baselimit register
baselimit register pairs::baselimit register pairs
pairs are provided::pairs are provided
data the instruction::data the instruction
instruction base-limit register::instruction base-limit register
discuss the advantages::discuss the advantages
process for generating::process for generating
binaries a compiler::binaries a compiler
generate the object::generate the object
code for individual::code for individual
combine multiple object::combine multiple object
multiple object modules::multiple object modules
single program bilcary::single program bilcary
linkage editor change::linkage editor change
change the bindmg::change the bindmg
bindmg of instructions::bindmg of instructions
addresses what information::addresses what information
editor to facilitate::editor to facilitate
facilitate the memory-binding::facilitate the memory-binding
hierarchical paging scheme::hierarchical paging scheme
operations are performed::operations are performed
user program executes::user program executes
executes a memory-load::executes a memory-load
worst-fit algorithms place::worst-fit algorithms place
algorithms place processes::algorithms place processes
describe a mechanism::describe a mechanism
segment could belong::segment could belong
4-kb page size::4-kb page size
size the system::size the system
512mb of physical::512mb of physical
conventional single-level page::conventional single-level page
single-level page table::single-level page table
1-kb page size::1-kb page size
numbers and offsets::numbers and offsets
provided as decimal::provided as decimal
code is stored::code is stored
fixed virtual address::fixed virtual address
storing the program::storing the program
program starts executing::program starts executing
stack is allocated::stack is allocated
virtual address space::virtual address space
allowed to grow::allowed to grow
grow toward lower::grow toward lower
lower virtual addresses::lower virtual addresses
segment base length::segment base length
words per page::words per page
bits are required::bits are required
segments among processes::segments among processes
processes without requiring::processes without requiring
dynamically linked segmentation::dynamically linked segmentation
linked segmentation system::linked segmentation system
system a define::system a define
define a system::define a system
linking and sharing::linking and sharing
sharing of segments::sharing of segments
segments without requiring::segments without requiring
describe a paging::describe a paging
shared without requiring::shared without requiring
32-bit virtual address::32-bit virtual address
page size write::page size write
passed a virtual::passed a virtual
output the page::output the page
number and offset::number and offset
program would run::program would run
program would output::program would output
writing this program::writing this program
program will require::program will require
type to store::type to store
bits we encourage::bits we encourage
unsigned data types::unsigned data types
dynamic storage allocation::dynamic storage allocation
allocation was discussed::allocation was discussed
discussed by knuth::discussed by knuth
found through simulation::found through simulation
results that first::results that first
discussed the 50-percent::discussed the 50-percent
rule the concept::rule the concept
concept of paging::concept of paging
described by kilburn::described by kilburn
concept of segmentation::concept of segmentation
segmentation was first::segmentation was first
discussed by dennis::discussed by dennis
daley and dennis::daley and dennis
tables are discussed::tables are discussed
ibm rt storage::ibm rt storage
manager by chang::manager by chang
chang and mergen::chang and mergen
translation in software::translation in software
software is covered::software is covered
covered in jacob::covered in jacob
jacob and mudge::jacob and mudge
hennessy and patterson::hennessy and patterson
explains the hardware::explains the hardware
aspects of tlbs::aspects of tlbs
discusses page tables::discusses page tables
tables for 64-bit::tables for 64-bit
address spaces alternative::address spaces alternative
spaces alternative approaches::spaces alternative approaches
approaches to enforcing::approaches to enforcing
enforcing memory protection::enforcing memory protection
protection are proposed::protection are proposed
proposed and studied::proposed and studied
studied in wahbe::studied in wahbe
tedmiques for managing::tedmiques for managing
managing the tlb::managing the tlb
support for large::support for large
large pages tanenbaum::large pages tanenbaum
discusses intel80386 paging::discusses intel80386 paging
intel80386 paging memory::intel80386 paging memory
paging memory management::paging memory management
described by jacob::described by jacob
segmentation on lim1x::segmentation on lim1x
systems is presented::systems is presented
presented in bovet::presented in bovet
bovet and cesati::bovet and cesati
discussed various memory-management::discussed various memory-management
tend to require::tend to require
execute virtual memory::execute virtual memory
completely in memory::completely in memory
memory one major::memory one major
larger than physical::larger than physical
virtual memory abstracts::virtual memory abstracts
memory abstracts main::memory abstracts main
abstracts main memory::abstracts main memory
array of storage::array of storage
separating logical memory::separating logical memory
memory as viewed::memory as viewed
user from physical::user from physical
memory this technique::memory this technique
technique frees programmers::technique frees programmers
concerns of memory-storage::concerns of memory-storage
memory-storage limitations virtual::memory-storage limitations virtual
limitations virtual memory::limitations virtual memory
memory in addition::memory in addition
mechanism for process::mechanism for process
process creation virtual::process creation virtual
creation virtual memory::creation virtual memory
easy to implement::easy to implement
substantially decrease performance::substantially decrease performance
discuss virtual memory::discuss virtual memory
form of demand::form of demand
paging and examine::paging and examine
examine its complexity::examine its complexity
complexity and cost::complexity and cost
cost to describe::cost to describe
describe the benefits::describe the benefits
virtual memory system::virtual memory system
system to explain::system to explain
explain the concepts::explain the concepts
concepts of demand::concepts of demand
allocation of page::allocation of page
frames to discuss::frames to discuss
discuss the principles::discuss the principles
model the memory-management::model the memory-management
memory-management algorithms outlined::memory-management algorithms outlined
outlined in chapter::outlined in chapter
instructions being executed::instructions being executed
memory the first::memory the first
approach to meeting::approach to meeting
meeting this requirement::meeting this requirement
place the entire::place the entire
entire logical address::entire logical address
space in physical::space in physical
physical memory dynamic::physical memory dynamic
memory dynamic loading::memory dynamic loading
ease this restriction::ease this restriction
generally requires special::generally requires special
requires special precautions::requires special precautions
precautions and extra::precautions and extra
requirement that instructions::requirement that instructions
limits the size::limits the size
memory in fact::memory in fact
examination of real::examination of real
real programs shows::real programs shows
needed for instance::needed for instance
code to handle::code to handle
handle unusual error::handle unusual error
unusual error conditions::unusual error conditions
occur in practice::occur in practice
allocated more memory::allocated more memory
elements an assembler::elements an assembler
assembler symbol table::assembler symbol table
symbols certain options::symbols certain options
options and features::options and features
rarely for instance::rarely for instance
routines on u.s::routines on u.s
u.s government computers::u.s government computers
computers that balance::computers that balance
balance the budget::balance the budget
program is needed::program is needed
ability to execute::ability to execute
execute a program::execute a program
partially in memory::partially in memory
memory would confer::memory would confer
confer many benefits::confer many benefits
longer be constrained::longer be constrained
amount of physical::amount of physical
extremely large virtual::extremely large virtual
large virtual address::large virtual address
simplifying the programming::simplifying the programming
programming task page::programming task page
page v virtual::page v virtual
virtual memory memory::virtual memory memory
memory memory map::memory memory map
memory map physical::memory map physical
map physical memory::map physical memory
diagram showing virtual::diagram showing virtual
showing virtual memory::showing virtual memory
increase in cpu::increase in cpu
utilization and throughput::utilization and throughput
increase in response::increase in response
needed to load::needed to load
load or swap::load or swap
swap user programs::swap user programs
programs into memory::programs into memory
running a program::running a program
memory would benefit::memory would benefit
involves the separation::involves the separation
separation of logical::separation of logical
memory as perceived::memory as perceived
perceived by users::perceived by users
users from physical::users from physical
memory this separation::memory this separation
large virtual memory::large virtual memory
provided for programmers::provided for programmers
smaller physical memory::smaller physical memory
virtual memory makes::virtual memory makes
makes the task::makes the task
task of programming::task of programming
programming much easier::programming much easier
programmer no longer::programmer no longer
programmed the address::programmed the address
process is stored::process is stored
address 0-and exists::address 0-and exists
exists in contiguous::exists in contiguous
recall from chapter::recall from chapter
fact physical memory::fact physical memory
organized in page::organized in page
page frames assigned::page frames assigned
map logical pages::map logical pages
pages to physical::pages to physical
frames in memory::frames in memory
note in figure::note in figure
heap to grow::heap to grow
upward in memory::upward in memory
stack to grow::stack to grow
downward in memory::downward in memory
memory through successive::memory through successive
successive function calls::successive function calls
calls the large::calls the large
large blank space::large blank space
stack is part::stack is part
virtual address figure::virtual address figure
require actual physical::require actual physical
actual physical pages::actual physical pages
heap or stack::heap or stack
stack grows virtual::stack grows virtual
grows virtual address::grows virtual address
virtual address spaces::virtual address spaces
spaces that include::spaces that include
sparse address spaces::sparse address spaces
sparse address space::sparse address space
space is beneficial::space is beneficial
stack or heap::stack or heap
heap segments grow::heap segments grow
dynam.ically link libraries::dynam.ically link libraries
possibly other shared::possibly other shared
execution in addition::execution in addition
addition to separating::addition to separating
memory from physical::memory from physical
memory allows files::memory allows files
files and memory::files and memory
processes through page::processes through page
processes through mapping::processes through mapping
considers the shared::considers the shared
reside in physical::reside in physical
memory are shared::memory are shared
library is mapped::library is mapped
virtual memory enables::virtual memory enables
memory enables processes::memory enables processes
share memory recall::share memory recall
processes can communicate::processes can communicate
shared memory virtual::shared memory virtual
memory virtual memory::memory virtual memory
process to create::process to create
create a region::create a region
region of memory::region of memory
process processes sharing::process processes sharing
sharing this region::sharing this region
pages of memory::pages of memory
shared during process::shared during process
calt thus speeding::calt thus speeding
speeding up process::speeding up process
explore these-and other-benefits::explore these-and other-benefits
other-benefits of virtual::other-benefits of virtual
discuss implementing virtual::discuss implementing virtual
implementing virtual memory::implementing virtual memory
memory through demand::memory through demand
demand paging shared::demand paging shared
paging shared library::paging shared library
shared library shared::shared library shared
library shared pages::library shared pages
shared pages shared::shared pages shared
pages shared library::pages shared library
shared library figure::shared library figure
library using virtual::library using virtual
loaded from disk::loaded from disk
disk into nlemory::disk into nlemory
nlemory one option::nlemory one option
load the entire::load the entire
program in physical::program in physical
memory at program::memory at program
suppose a program::suppose a program
loading the entire::loading the entire
program into memory::program into memory
results in loading::results in loading
loading the executable::loading the executable
needed this technique::needed this technique
virtual memory systems::virtual memory systems
systems with demand-paged::systems with demand-paged
demand-paged virtual memory::demand-paged virtual memory
demanded during program::demanded during program
execution ; pages::execution ; pages
loaded into physical::loaded into physical
memory a demand-paging::memory a demand-paging
system with swapping::system with swapping
reside in secondary::reside in secondary
swapping the entire::swapping the entire
swapper never swaps::swapper never swaps
swaps a page::swaps a page
page into memory::page into memory
viewing a process::viewing a process
sequence of pages::sequence of pages
large contiguous address::large contiguous address
contiguous address space::contiguous address space
incorrect a swapper::incorrect a swapper
swapper manipulates entire::swapper manipulates entire
manipulates entire processes::manipulates entire processes
connection with demand::connection with demand
demand paging program::demand paging program
program a program::program a program
program b main::program b main
main memory swap::main memory swap
memory to contiguous::memory to contiguous
contiguous disk space::contiguous disk space
9.2.1 basic concepts::9.2.1 basic concepts
guesses which pages::guesses which pages
pages into memory::pages into memory
reading into memory::reading into memory
decreasing the swap::decreasing the swap
physical memory needed::physical memory needed
form of hardware::form of hardware
support to distinguish::support to distinguish
disk the valid::disk the valid
-invalid bit scheme::-invalid bit scheme
bit scheme described::bit scheme described
disk the page-table::disk the page-table
memory is set::memory is set
set as usuat::set as usuat
simply marked invalid::simply marked invalid
page on disk::page on disk
disk this situation::disk this situation
situation is depicted::situation is depicted
depicted in figure::depicted in figure
notice that marking::notice that marking
marking a page::marking a page
process never attempts::process never attempts
attempts to access::attempts to access
access that page::access that page
right and page::right and page
process will run::process will run
executes and accesses::executes and accesses
valid-invalid frame bit::valid-invalid frame bit
physical memory dod::physical memory dod
main memory operating::main memory operating
memory operating system::memory operating system
operating system reference::operating system reference
backing store trap::backing store trap
store trap restart::store trap restart
trap restart instruction::trap restart instruction
restart instruction page::restart instruction page
instruction page table::instruction page table
page table reset::page table reset
table reset page::table reset page
reset page table::reset page table
bring in missing::bring in missing
missing page figure::missing page figure
steps in handling::steps in handling
handling a page::handling a page
access a page::access a page
page marked invalid::page marked invalid
translating the address::translating the address
causing a trap::causing a trap
system this trap::system this trap
system s failure::system s failure
failure to bring::failure to bring
bring the desired::bring the desired
memory the procedure::memory the procedure
procedure for handling::procedure for handling
handling this page::handling this page
fault is straightforward::fault is straightforward
check an internal::check an internal
process to determine::process to determine
invalid memory access::invalid memory access
reference was invalid::reference was invalid
terminate the process::terminate the process
schedule a disk::schedule a disk
operation to read::operation to read
read the desired::read the desired
newly allocated frame::newly allocated frame
read is complete::read is complete
modify the internal::modify the internal
memory we restart::memory we restart
restart the instruction::restart the instruction
trap the process::trap the process
access the page::access the page
executing a process::executing a process
pages in memory::pages in memory
sets the instruction::sets the instruction
process immediately faults::process immediately faults
page is brought::page is brought
continues to execute::continues to execute
faults this scheme::faults this scheme
bring a page::bring a page
programs could access::programs could access
possibly causing multiple::possibly causing multiple
causing multiple page::causing multiple page
multiple page faults::multiple page faults
faults per instruction::faults per instruction
instruction this situation::instruction this situation
situation would result::situation would result
result in unacceptable::result in unacceptable
unacceptable system performance::unacceptable system performance
analysis of running::analysis of running
running processes shows::running processes shows
exceedingly unlikely programs::exceedingly unlikely programs
results in reasonable::results in reasonable
performance from demand::performance from demand
paging the hardware::paging the hardware
hardware to support::hardware to support
support demand paging::support demand paging
hardware for paging::hardware for paging
paging and swapping::paging and swapping
table this table::table this table
ability to mark::ability to mark
mark an entry::mark an entry
value of protection::value of protection
protection bits secondary::protection bits secondary
bits secondary memory::bits secondary memory
memory this memory::memory this memory
holds those pages::holds those pages
present in main::present in main
memory the secondary::memory the secondary
section of disk::section of disk
allocation is discussed::allocation is discussed
discussed in chapter::discussed in chapter
requirement for demand::requirement for demand
ability to restart::ability to restart
restart any instruction::restart any instruction
save the state::save the state
page fault occurs::page fault occurs
restart the process::restart the process
place and state::place and state
requirement is easy::requirement is easy
easy to meet::easy to meet
meet a page::meet a page
fault may occur::fault may occur
restart by fetching::restart by fetching
fetching the instruction::fetching the instruction
fetching an operand::fetching an operand
fetch and decode::fetch and decode
decode the instruction::decode the instruction
fetch the operand::fetch the operand
add the content::add the content
placing the result::placing the result
steps to execute::steps to execute
execute this instruction::execute this instruction
fetch a fetch::fetch a fetch
fetch b add::fetch b add
store the sum::store the sum
correct the page::correct the page
instruction the restart::instruction the restart
restart will require::restart will require
occurs the major::occurs the major
major difficulty arises::major difficulty arises
instruction may modify::instruction may modify
source or destination::source or destination
straddles a page::straddles a page
fault might occur::fault might occur
done in addition::done in addition
source and destination::source and destination
destination blocks overlap::destination blocks overlap
instruction this problem::instruction this problem
two different ways::two different ways
computes and attempts::computes and attempts
access both ends::access both ends
modified the move::modified the move
fault can occur::fault can occur
solution uses temporary::solution uses temporary
hold the values::hold the values
values of overwritten::values of overwritten
values are written::values are written
back into memory::back into memory
occurs this action::occurs this action
action restores memory::action restores memory
instruction was started::instruction was started
architectural problem resulting::architectural problem resulting
resulting from adding::resulting from adding
difficulties involved paging::difficulties involved paging
paging is added::paging is added
people often assume::people often assume
assume that paging::assume that paging
assumption is true::assumption is true
page fault represents::page fault represents
represents a fatal::represents a fatal
page fault means::page fault means
restarted 9.2.2 performance::restarted 9.2.2 performance
performance of demand::performance of demand
demand paging demand::demand paging demand
paging demand paging::paging demand paging
affect the performance::affect the performance
compute the effective::compute the effective
read the relevant::read the relevant
page from disk::page from disk
close to zero-that::close to zero-that
faults the ttp::faults the ttp
needed to service::needed to service
service a page::service a page
fault a page::fault a page
sequence to occur::sequence to occur
operating system save::operating system save
save the user::save the user
registers and process::registers and process
page fault check::page fault check
reference was legal::reference was legal
legal and determine::legal and determine
determine the location::determine the location
issue a read::issue a read
request is serviced::request is serviced
serviced b wait::serviced b wait
begin the transfer::begin the transfer
frame while waiting::frame while waiting
allocate the cpu::allocate the cpu
receive an interrupt::receive an interrupt
disk i subsystem::disk -NONE- subsystem
save the registers::save the registers
tables to show::tables to show
process again restore::process again restore
restore the user::restore the user
resume the interrupted::resume the interrupted
cpu is allocated::cpu is allocated
occurs this arrangement::occurs this arrangement
arrangement allows multiprogramming::arrangement allows multiprogramming
multiprogramming to maintain::multiprogramming to maintain
maintain cpu utilization::maintain cpu utilization
utilization but requires::utilization but requires
resume the page-fault::resume the page-fault
page-fault service routine::page-fault service routine
transfer is complete::transfer is complete
faced with tlu::faced with tlu
tlu ee major::tlu ee major
service the page-fault::service the page-fault
page-fault interrupt read::page-fault interrupt read
instructions these tasks::instructions these tasks
typical hard disk::typical hard disk
hardware and software::hardware and software
queue of processes::queue of processes
processes is waiting::processes is waiting
free to service::free to service
service our request::service our request
average page-fault service::average page-fault service
microseconds the computer::microseconds the computer
due to paging::due to paging
399,990 to page-fault::399,990 to page-fault
page-fault in sum::page-fault in sum
page-fault rate low::page-fault rate low
access time increases::access time increases
slowing process execution::slowing process execution
process execution dramatically::process execution dramatically
dramatically an additional::dramatically an additional
aspect of demand::aspect of demand
swap space disk::swap space disk
i to swap::-NONE- to swap
faster because swap::faster because swap
lookups and indirect::lookups and indirect
indirect allocation methods::indirect allocation methods
gain better paging::gain better paging
throughput by copying::throughput by copying
copying an entire::copying an entire
entire file image::entire file image
space at process::space at process
performing demand paging::performing demand paging
space another option::space another option
write the pages::write the pages
pages to swap::pages to swap
replaced this approach::replaced this approach
approach will ensure::approach will ensure
pages are read::pages are read
paging is done::paging is done
done from swap::done from swap
attempt to limit::attempt to limit
limit the amount::limit the amount
amount of swap::amount of swap
paging of binary::paging of binary
binary files demand::binary files demand
files demand pages::files demand pages
files are brought::files are brought
simply be overwritten::simply be overwritten
system itself serves::system itself serves
backing store howeve1::backing store howeve1
howeve1 ~ swap::howeve1 ~ swap
include the stack::include the stack
stack and heap::stack and heap
solaris and bsd::solaris and bsd
unix in section::unix in section
process can start::process can start
similar to page::similar to page
covered in section::covered in section
rapid process creation::rapid process creation
creation and minimizes::creation and minimizes
minimizes the number::minimizes the number
newly created process::newly created process
process i modifies::process i modifies
page c recall::page c recall
recall thatthe fork::recall thatthe fork
system call creates::system call creates
creates a child::creates a child
worked by creating::worked by creating
creating a copy::creating a copy
parent s address::parent s address
duplicating the pages::duplicating the pages
child processes invoke::child processes invoke
invoke the exec::invoke the exec
immediately after creation::immediately after creation
works by allowing::works by allowing
allowing the parent::allowing the parent
parent and child::parent and child
initially to share::initially to share
pages these shared::pages these shared
pages are marked::pages are marked
marked as copy-on-write::marked as copy-on-write
page is created::page is created
copy-on-write is illustrated::copy-on-write is illustrated
illustrated in figures::illustrated in figures
show the contents::show the contents
child process attempts::child process attempts
attempts to modify::attempts to modify
modify a page::modify a page
page containing portions::page containing portions
copy-on-write the operating::copy-on-write the operating
system will create::system will create
create a copy::create a copy
process the child::process the child
modify its copied::modify its copied
process are copied::process are copied
child processes note::child processes note
process1 physical memory::process1 physical memory
page c process2::page c process2
arked as copy-on-write::arked as copy-on-write
pages containing executable::pages containing executable
duplicated using copyon::duplicated using copyon-
important to note::important to note
note the location::note the location
allocated many operating::allocated many operating
operating systems provide::operating systems provide
requests these free::requests these free
process must expand::process must expand
managed operating systems::managed operating systems
systems typically allocate::systems typically allocate
allocate these pages::allocate these pages
1and zero-fill-on-demand pages::1and zero-fill-on-demand pages
erasing the previous::erasing the previous
contents several versions::contents several versions
solaris and linux::solaris and linux
provide a variation::provide a variation
variation ofthe fork::variation ofthe fork
differently from fork::differently from fork
copy-on-write with vfork::copy-on-write with vfork
process is suspended::process is suspended
parent because vfork::parent because vfork
caution to ensure::caution to ensure
modify the address::modify the address
child process calls::child process calls
process calls exec::process calls exec
copying of pages::copying of pages
pages takes place::pages takes place
extremely efficient method::extremely efficient method
method of process::method of process
implement unix command-line::implement unix command-line
unix command-line shell::unix command-line shell
command-line shell interfaces::command-line shell interfaces
referenced this representation::referenced this representation
process of ten::process of ten
demand paging saves::demand paging saves
increase our degree::increase our degree
degree of multiprogramming::degree of multiprogramming
multiprogramming by running::multiprogramming by running
run eight processes::run eight processes
required ten frames::required ten frames
run six processes::run six processes
pages in size::pages in size
higher cpu utilization::higher cpu utilization
frames to spare::frames to spare
holding program pages::holding program pages
program pages buffers::program pages buffers
consume a considerable::consume a considerable
increase the strain::increase the strain
strain on memory-placement::strain on memory-placement
memory-placement algorithms deciding::memory-placement algorithms deciding
memory to allocate::memory to allocate
challenge some systems::challenge some systems
allocate a fixed::allocate a fixed
percentage of memory::percentage of memory
subsystem to compete::subsystem to compete
memory for user::memory for user
table for user::table for user
page replacement over-allocation::page replacement over-allocation
over-allocation of memory::over-allocation of memory
process is executing::process is executing
occurs the operating::occurs the operating
operating system determines::operating system determines
page is residing::page is residing
terminate the user::terminate the user
system s attempt::system s attempt
attempt to improve::attempt to improve
improve the computer::improve the computer
system s utilization::system s utilization
choice the operating::choice the operating
frames and reducing::frames and reducing
reducing the level::reducing the level
multiprogramming this option::multiprogramming this option
9.4.1 basic page::9.4.1 basic page
basic page replacement::basic page replacement
page replacement page::page replacement page
replacement page replacement::replacement page replacement
page replacement takes::page replacement takes
frame is free::frame is free
free a frame::free a frame
frame by writing::frame by writing
writing its contents::writing its contents
contents to swap::contents to swap
space and changing::space and changing
changing the page::changing the page
longer in memory::longer in memory
frame to hold::frame to hold
hold the page::hold the page
faulted we modify::faulted we modify
modify the page-fault::modify the page-fault
routine to include::routine to include
include page replacement::include page replacement
find the location::find the location
algorithnc to select::algorithnc to select
write the victim::write the victim
disk ; change::disk ; change
change the page::change the page
page and frame::page and frame
tables accordingly read::tables accordingly read
newly freed frame::newly freed frame
frame ; change::frame ; change
frame tables restart::frame tables restart
restart the user::restart the user
user process notice::user process notice
frames are free::frames are free
two page transfers::two page transfers
required this situation::required this situation
situation effectively doubles::situation effectively doubles
doubles the page-fault::doubles the page-fault
increases the effective::increases the effective
reduce this overhead::reduce this overhead
page or frame::page or frame
hardware the modify::hardware the modify
page is set::page is set
word or byte::word or byte
page is written::page is written
select a page::select a page
page for replacement::page for replacement
examine its modify::examine its modify
write the page::write the page
read into memory::read into memory
write the memory::write the memory
technique also applies::technique also applies
pages of binary::pages of binary
discarded when desired::discarded when desired
desired this scheme::desired this scheme
required to service::required to service
modified frame valid-invalid::modified frame valid-invalid
frame valid-invalid bit::frame valid-invalid bit
replacement is basic::replacement is basic
basic to demand::basic to demand
paging it completes::paging it completes
completes the separation::completes the separation
separation between logical::separation between logical
enormous virtual memory::enormous virtual memory
provided for programnlers::provided for programnlers
addresses are mapped::addresses are mapped
sets of addresses::sets of addresses
constrained by physical::constrained by physical
process of twenty::process of twenty
algorithm to find::algorithm to find
contents are copied::contents are copied
solve two major::solve two major
two major problems::two major problems
problems to implement::problems to implement
implement demand develop::implement demand develop
develop a algorithm::develop a algorithm
frames to allocate::frames to allocate
replacement is required::replacement is required
select the frames::select the frames
designing appropriate algorithms::designing appropriate algorithms
algorithms to solve::algorithms to solve
solve these problems::solve these problems
expensive even slight::expensive even slight
improvements in demand-paging::improvements in demand-paging
demand-paging methods yield::demand-paging methods yield
methods yield large::methods yield large
yield large gains::yield large gains
gains in system::gains in system
algorithms every operating::algorithms every operating
algorithm in general::algorithm in general
lowest page-fault rate::lowest page-fault rate
rate we evaluate::rate we evaluate
evaluate an algorithm::evaluate an algorithm
algorithm by running::algorithm by running
string of memory::string of memory
references and computing::references and computing
computing the number::computing the number
number of page::number of page
faults the string::faults the string
generate reference strings::generate reference strings
system and record::system and record
record the address::record the address
produces a large::produces a large
number of data::number of data
reduce the number::reduce the number
two facts first::two facts first
hardware or system::hardware or system
page fault page::page fault page
immediately following references::immediately following references
bytes per page::bytes per page
sequence is reduced::sequence is reduced
number of frames::number of frames
graph of page::graph of page
faults versus number::faults versus number
frames to determine::frames to determine
determine the number::determine the number
string and page-replacement::string and page-replacement
frames available increases::frames available increases
page faults decreases::page faults decreases
reference strillg considered::reference strillg considered
page in contrast::page in contrast
resulting in eleven::resulting in eleven
faults in general::faults in general
expect a curve::expect a curve
page faults drops::page faults drops
adding physical memory::adding physical memory
physical memory increases::physical memory increases
increases the number::increases the number
illustrate several page-replacement::illustrate several page-replacement
algorithms in doing::algorithms in doing
frames 9.4.2 fifo::frames 9.4.2 fifo
9.4.2 fifo page::9.4.2 fifo page
fifo page replacement::fifo page replacement
replacement the simplest::replacement the simplest
simplest page-replacement algorithm::simplest page-replacement algorithm
algorithm a fifo::algorithm a fifo
fifo replacement algorithm::fifo replacement algorithm
replacement algorithm associates::replacement algorithm associates
page was brought::page was brought
page is chosen::page is chosen
create a fifo::create a fifo
queue to hold::queue to hold
hold all pages::hold all pages
memory we replace::memory we replace
replace the page::replace the page
empty the first::empty the first
first three references::first three references
brought in first::brought in first
reference the first::reference the first
results in replacement::results in replacement
replacement of page::replacement of page
page frames figure::page frames figure
fifo page-replacement algorithm::fifo page-replacement algorithm
first in line::first in line
replaced by page::replaced by page
continues as shown::continues as shown
show which pages::show which pages
fifteen faults altogether::fifteen faults altogether
altogether the fifo::altogether the fifo
algorithm is easy::algorithm is easy
easy to lmderstand::easy to lmderstand
lmderstand and program::lmderstand and program
heavily used variable::heavily used variable
constant use notice::constant use notice
select for replacement::select for replacement
replacement a page::replacement a page
replace an active::replace an active
immediately to retrieve::immediately to retrieve
retrieve the active::retrieve the active
replaced to bring::replaced to bring
bring the active::bring the active
bad replacement choice::bad replacement choice
replacement choice increases::replacement choice increases
increases the page-fault::increases the page-fault
rate and slows::rate and slows
slows process execution::slows process execution
execution to illustrate::execution to illustrate
illustrate the problems::illustrate the problems
shows the curve::shows the curve
curve of page::curve of page
reference string versus::reference string versus
versus the number::versus the number
number of faults::number of faults
rate may increase::rate may increase
number of allocated::number of allocated
allocated frames increases::allocated frames increases
expect that giving::expect that giving
giving more memory::giving more memory
process would improve::process would improve
improve its performance::improve its performance
anomaly was discovered::anomaly was discovered
result 9.4.3 optimal::result 9.4.3 optimal
9.4.3 optimal page::9.4.3 optimal page
optimal page replacement::optimal page replacement
replacement of belady::replacement of belady
suffer from belady::suffer from belady
belady s anomaly::belady s anomaly
algorithm does exist::algorithm does exist
opt or min::opt or min
curve for fifo::curve for fifo
page-replacement algorithm guarantees::page-replacement algorithm guarantees
guarantees the lowest::guarantees the lowest
lowest possible pagefault::lowest possible pagefault
sample reference string::sample reference string
optimal page-replacement algorithm::optimal page-replacement algorithm
algorithm would yield::algorithm would yield
yield nine page::yield nine page
references cause faults::references cause faults
faults that fill::faults that fill
frames the reference::frames the reference
reference to page::reference to page
ignore the first::ignore the first
algorithms must suffer::algorithms must suffer
good as fifo::good as fifo
algorithm can process::algorithm can process
process this reference::process this reference
frames with fewer::frames with fewer
algorithm is difficult::algorithm is difficult
difficult to implement::difficult to implement
requires future knowledge::requires future knowledge
encountered a similar::encountered a similar
sjf cpu-schedulin.g algorithm::sjf cpu-schedulin.g algorithm
algorithm in section::algorithm in section
studies for instance::studies for instance
algorithm reference string::algorithm reference string
percent of optimal::percent of optimal
optimal at worst::optimal at worst
percent on average::percent on average
average 9.4.4 lru::average 9.4.4 lru
9.4.4 lru page::9.4.4 lru page
lru page replacement::lru page replacement
fifo and opt::fifo and opt
backward versus forward::backward versus forward
lru replacement associates::lru replacement associates
page s last::page s last
chooses the page::chooses the page
algorithm looking backward::algorithm looking backward
algorithm on sis::algorithm on sis
result of applying::result of applying
applying lru replacement::applying lru replacement
string is shown::string is shown
lru algorithm produces::lru algorithm produces
algorithm produces twelve::algorithm produces twelve
produces twelve faults::produces twelve faults
twelve faults notice::twelve faults notice
first five faults::first five faults
lru replacement sees::lru replacement sees
lru algorithm replaces::lru algorithm replaces
algorithm replaces page::algorithm replaces page
knowing that page::knowing that page
faults for page::faults for page
replacement with twelve::replacement with twelve
replacement with fifteen::replacement with fifteen
fifteen the lru::fifteen the lru
good the major::good the major
implement lru replacement::implement lru replacement
replacement an lru::replacement an lru
lru page-replacement algorithm::lru page-replacement algorithm
algorithm may require::algorithm may require
require substantial hardware::require substantial hardware
substantial hardware assistance::substantial hardware assistance
assistance the problem::assistance the problem
determine an order::determine an order
implementations are feasible::implementations are feasible
entry a time-of-use::entry a time-of-use
field and add::field and add
cpu a logical::cpu a logical
clock or counter::clock or counter
counter the clock::counter the clock
clock is reference::clock is reference
page is made::page is made
register are copied::register are copied
page we replace::page we replace
smallest time value::smallest time value
value this scheme::value this scheme
requires a search::requires a search
find the lru::find the lru
write to memory::write to memory
access the times::access the times
aintained when page::aintained when page
tables are changed::tables are changed
due to cpu::due to cpu
stack another approach::stack another approach
approach to implementing::approach to implementing
implementing lru replacement::implementing lru replacement
stack of page::stack of page
page is referenced::page is referenced
stack and put::stack and put
recently used page::recently used page
implement this approach::implement this approach
doubly linked list::doubly linked list
tail pointer removing::tail pointer removing
removing a page::removing a page
page and putting::page and putting
stack then requires::stack then requires
changing six pointers::changing six pointers
pointers at worst::pointers at worst
worst each update::worst each update
tail pointer points::tail pointer points
page this approach::page this approach
software or microcode::software or microcode
implementations of lru::implementations of lru
replacement like optimal::replacement like optimal
class of page-replacement::class of page-replacement
anomaly a stack::anomaly a stack
set of pages::set of pages
frames for lru::frames for lru
recently referenced pages::recently referenced pages
frames is increased::frames is increased
implementation of lru::implementation of lru
conceivable without hardware::conceivable without hardware
standard tlb registers::standard tlb registers
registers the updating::registers the updating
stack to record::stack to record
recent page references::recent page references
fields or stack::fields or stack
software to update::software to update
update such data::update such data
slow every memory::slow every memory
slowing every user::slowing every user
factor of ten::factor of ten
ten few systems::ten few systems
systems could tolerate::systems could tolerate
tolerate that level::tolerate that level
level of overhead::level of overhead
overhead for memory::overhead for memory
management 9.4.5 lru-approximation::management 9.4.5 lru-approximation
9.4.5 lru-approximation page::9.4.5 lru-approximation page
lru-approximation page replacement::lru-approximation page replacement
replacement few computer::replacement few computer
computer systems provide::computer systems provide
systems provide sufficient::systems provide sufficient
provide sufficient hardware::provide sufficient hardware
sufficient hardware support::sufficient hardware support
support for true::support for true
true lru page::true lru page
replacement some systems::replacement some systems
provide no hardware::provide no hardware
bits are cleared::bits are cleared
user process executes::user process executes
referenced is set::referenced is set
determine which pages::determine which pages
examining the reference::examining the reference
algorithms that approximate::algorithms that approximate
approximate lru replacement::approximate lru replacement
replacement 9.4.5.1 additional-reference-bits::replacement 9.4.5.1 additional-reference-bits
9.4.5.1 additional-reference-bits algorithm::9.4.5.1 additional-reference-bits algorithm
gain additional ordering::gain additional ordering
additional ordering information::additional ordering information
information by recording::information by recording
recording the reference::recording the reference
bits at regular::bits at regular
table in memory::table in memory
memory at regular::memory at regular
timer interrupt transfers::timer interrupt transfers
interrupt transfers control::interrupt transfers control
system the operating::system the operating
operating system shifts::operating system shifts
shifts the reference::shifts the reference
bit and discarding::bit and discarding
discarding the low-order::discarding the low-order
bit these 8-bit::bit these 8-bit
8-bit shift registers::8-bit shift registers
history of page::history of page
shift register value::shift register value
history register value::history register value
interpret these 8-bit::interpret these 8-bit
bytes as unsigned::bytes as unsigned
method to choose::method to choose
bits of history::bits of history
make the updating::make the updating
updating as fast::updating as fast
9.4.5.2 second-chance algorithm::9.4.5.2 second-chance algorithm
algorithm the basic::algorithm the basic
algorithm of second-chance::algorithm of second-chance
inspect its reference::inspect its reference
proceed to replace::proceed to replace
replace this page::replace this page
give the page::give the page
chance and move::chance and move
reference pages reference::reference pages reference
pages reference pages::pages reference pages
reference pages bits::reference pages bits
pages bits bits::pages bits bits
bits bits circular::bits bits circular
bits circular queue::bits circular queue
queue of pages::queue of pages
pages circular queue::pages circular queue
bit is cleared::bit is cleared
reference bit set::reference bit set
implement the second-chance::implement the second-chance
queue a poi11ter::queue a poi11ter
frame is needed::frame is needed
finds a page::finds a page
clears the reference::clears the reference
page is found::page is found
page is replaced::page is replaced
page is inserted::page is inserted
bits are set::bits are set
giving each page::giving each page
chance it clears::chance it clears
bits before selecting::bits before selecting
replacement second-chance replacement::replacement second-chance replacement
second-chance replacement degenerates::second-chance replacement degenerates
degenerates to fifo::degenerates to fifo
set 9.4.5.3 enhanced::set 9.4.5.3 enhanced
9.4.5.3 enhanced second-chance::9.4.5.3 enhanced second-chance
enhanced second-chance algorithm::enhanced second-chance algorithm
enhance the second-chance::enhance the second-chance
four possible classes::four possible classes
modified -best page::modified -best page
page to replace::page to replace
recently used hut::recently used hut
out before replacement::out before replacement
out to disk::out to disk
replaced each page::replaced each page
classes when page::classes when page
examine the class::examine the class
belongs we replace::belongs we replace
replace the first::replace the first
first page encountered::first page encountered
lowest nonempty class::lowest nonempty class
nonempty class notice::nonempty class notice
scan the circular::scan the circular
queue several times::queue several times
find a page::find a page
replaced the major::replaced the major
simpler clock algorithm::simpler clock algorithm
modified to reduce::modified to reduce
required 9.4.6 counting-based::required 9.4.6 counting-based
9.4.6 counting-based page::9.4.6 counting-based page
counting-based page replacement::counting-based page replacement
number of references::number of references
page and develop::page and develop
page-replacement algorithm requires::page-replacement algorithm requires
count be replaced::count be replaced
replaced the reason::replaced the reason
actively used page::actively used page
large reference count::large reference count
count a problem::count a problem
count and remains::count and remains
remains in memory::remains in memory
needed one solution::needed one solution
shift the counts::shift the counts
bit at regular::bit at regular
exponentially decaying average::exponentially decaying average
decaying average usage::decaying average usage
average usage count::average usage count
algorithm is based::algorithm is based
mfu nor lfu::mfu nor lfu
replacement is common::replacement is common
common the implementation::common the implementation
algorithms is expensive::algorithms is expensive
approxinlate opt replacement::approxinlate opt replacement
9.4.7 page-buffering algorithms::9.4.7 page-buffering algorithms
algorithms other procedures::algorithms other procedures
specific page-replacement algorithm::specific page-replacement algorithm
pool of free::pool of free
frame is chosen::frame is chosen
page is read::page is read
victim is written::victim is written
out this procedure::out this procedure
process to restart::process to restart
frame is added::frame is added
maintain a list::maintain a list
list of modified::list of modified
device is idle::device is idle
page is selected::page is selected
disk its modify::disk its modify
reset this scheme::reset this scheme
increases the probability::increases the probability
selected for replacement::selected for replacement
out another modification::out another modification
remember which page::remember which page
frame is written::frame is written
reused directly fronc::reused directly fronc
fronc the free-frame::fronc the free-frame
frame is reused::frame is reused
i is needed::NNP is needed
frame and read::frame and read
algorithm mistakenly replaces::algorithm mistakenly replaces
replaces a page::replaces a page
buffer provides protection::buffer provides protection
algorithm this method::algorithm this method
versions of vax::versions of vax
implement the reference::implement the reference
reference bit correctly::reference bit correctly
correctly some versions::correctly some versions
method in conjunction::method in conjunction
reduce the penalty::reduce the penalty
wrong victim page::wrong victim page
selected 9.4.8 applications::selected 9.4.8 applications
applications and page::applications and page
applications accessing data::applications accessing data
system s virtual::system s virtual
virtual memory perform::virtual memory perform
memory perform worse::memory perform worse
operating system provided::operating system provided
provided no buffering::provided no buffering
i buffering applications::-NONE- buffering applications
understand their memory::understand their memory
algorithms for general-purpose::algorithms for general-purpose
system is buffering::system is buffering
application is doing::application is doing
warehouses frequently perform::warehouses frequently perform
frequently perform massive::frequently perform massive
perform massive sequential::perform massive sequential
massive sequential disk::massive sequential disk
sequential disk reads::sequential disk reads
computations and writes::computations and writes
writes the lru::writes the lru
removing old pages::removing old pages
pages and preserving::pages and preserving
reading older pages::reading older pages
pages than newer::pages than newer
starts its sequential::starts its sequential
efficient than lru::efficient than lru
operating systems give::operating systems give
systems give special::systems give special
give special programs::give special programs
programs the ability::programs the ability
large sequential array::large sequential array
array of logical::array of logical
file-system data structures::file-system data structures
structures this array::structures this array
array is termed::array is termed
raw i raw::raw NNP raw
raw i bypasses::raw -NONE- bypasses
file i demand::file -NONE- demand
i demand paging::-NONE- demand paging
efficient when implementing::efficient when implementing
special-purpose storage services::special-purpose storage services
regular file-system services::regular file-system services
issue of allocation::issue of allocation
allocate the fixed::allocate the fixed
amount of free::amount of free
composed of pages::composed of pages
size this system::size this system
frames the operating::frames the operating
process under pure::process under pure
pure demand paging::pure demand paging
initially be put::initially be put
user process started::user process started
process started execution::process started execution
generate a sequence::generate a sequence
sequence of page::sequence of page
faults the first::faults the first
list was exhausted::list was exhausted
operating system allocate::operating system allocate
buffer and table::buffer and table
support user paging::support user paging
free frames reserved::free frames reserved
swap is taking::swap is taking
user process continues::user process continues
execute other variants::execute other variants
strategy is clear::strategy is clear
allocated any free::allocated any free
frame 9.5.1 minimum::frame 9.5.1 minimum
9.5.1 minimum number::9.5.1 minimum number
frames our strategies::frames our strategies
allocation of frames::allocation of frames
frames are constrained::frames are constrained
requirement one reason::requirement one reason
reason for allocating::reason for allocating
frames involves performance::frames involves performance
page-fault rate increases::page-fault rate increases
ilcstruction is complete::ilcstruction is complete
frames to hold::frames to hold
ilcstruction can reference::ilcstruction can reference
instructions may reference::instructions may reference
reference in addition::reference in addition
one-level indirect addressing::one-level indirect addressing
addressing is allowed::addressing is allowed
instruction on page::instruction on page
address on page::address on page
frames per process::frames per process
frames the minimum::frames the minimum
frames is defined::frames is defined
straddle two pages::straddle two pages
pages in addition::pages in addition
location to storage::location to storage
pages the block::pages the block
block of characters::block of characters
characters to move::characters to move
pages this situation::pages this situation
situation would require::situation would require
require six frames::require six frames
frames the worst::frames the worst
worst case occurs::worst case occurs
instruction that straddles::instruction that straddles
frames the worst-case::frames the worst-case
worst-case scenario occurs::worst-case scenario occurs
occurs in computer::occurs in computer
levels of indirection::levels of indirection
1-bit indirect indicator::1-bit indirect indicator
simple load instruction::simple load instruction
instruction could reference::instruction could reference
reference an indirect::reference an indirect
page in virtual::page in virtual
entire virtual memory::entire virtual memory
memory to overcome::memory to overcome
overcome this difficulty::overcome this difficulty
place a limit::place a limit
limit an instruction::limit an instruction
16levels of indirection::16levels of indirection
first indirection occurs::first indirection occurs
counter is set::counter is set
counter is decremented::counter is decremented
reduces the maximum::reduces the maximum
references per instruction::references per instruction
process is defined::process is defined
number is defined::number is defined
left with significant::left with significant
choice in frame::choice in frame
allocation 9.5.2 allocation::allocation 9.5.2 allocation
9.5.2 allocation algorithms::9.5.2 allocation algorithms
algorithms the easiest::algorithms the easiest
split m frames::split m frames
frames for instance::frames for instance
free-frame buffer pool::free-frame buffer pool
pool this scheme::pool this scheme
amounts of memory::amounts of memory
1-kb frame size::1-kb frame size
small student process::small student process
two processes running::two processes running
make much sense::make much sense
sense to give::sense to give
give each process::give each process
frames the student::frames the student
wasted to solve::wasted to solve
memory for process::memory for process
frames to process::frames to process
required by tl1e::required by tl1e
tl1e instruction set::tl1e instruction set
sum not exceeding::sum not exceeding
equal and proportional::equal and proportional
allocation may vary::allocation may vary
level is increased::level is increased
process will lose::process will lose
lose some frames::lose some frames
frames to provide::frames to provide
provide the memory::provide the memory
multiprogramming level decreases::multiprogramming level decreases
remaining processes notice::remaining processes notice
equal or proportional::equal or proportional
process is treated::process is treated
give the high-priority::give the high-priority
process more memory::process more memory
memory to speed::memory to speed
speed its execution::speed its execution
detriment of low-priority::detriment of low-priority
processes one solution::processes one solution
proportional allocation scheme::proportional allocation scheme
ratio of frames::ratio of frames
sizes of processes::sizes of processes
priorities of processes::priorities of processes
combination of size::combination of size
size and priority::size and priority
priority 9.5.3 global::priority 9.5.3 global
9.5.3 global versus::9.5.3 global versus
global versus local::global versus local
versus local allocation::versus local allocation
allocation another important::allocation another important
processes is page::processes is page
replacement with multiple::replacement with multiple
multiple processes competing::multiple processes competing
competing for frames::competing for frames
classify page-replacement algorithms::classify page-replacement algorithms
two broad categories::two broad categories
local global replacement::local global replacement
local replacement requires::local replacement requires
set of allocated::set of allocated
processes to select::processes to select
frames from low-priority::frames from low-priority
processes for replacement::processes for replacement
replacement a process::replacement a process
process can select::process can select
select a replacement::select a replacement
process this approach::process this approach
process to increase::process to increase
increase its frame::increase its frame
local replacement strategy::local replacement strategy
change with global::change with global
process may happen::process may happen
happen to select::happen to select
select only frames::select only frames
increasing the number::increasing the number
choose its frames::choose its frames
frames for replacement::frames for replacement
global replacement algorithm::global replacement algorithm
rate the set::rate the set
process may perform::process may perform
totally external circuntstances::totally external circuntstances
local replacement algorithm::local replacement algorithm
algorithm under local::algorithm under local
process is affected::process is affected
process local replacement::process local replacement
replacement might hinder::replacement might hinder
hinder a process::hinder a process
replacement generally results::replacement generally results
results in greater::results in greater
greater system throughput::greater system throughput
method 9.5.4 non-uniform::method 9.5.4 non-uniform
9.5.4 non-uniform memory::9.5.4 non-uniform memory
non-uniform memory access::non-uniform memory access
coverage of virtual::coverage of virtual
memory is created::memory is created
systems with multiple::systems with multiple
access some sections::access some sections
sections of main::sections of main
main memory faster::main memory faster
differences are caused::differences are caused
cpus and memory::cpus and memory
memory are interconnected::memory are interconnected
system is made::system is made
memory the system::memory the system
boards are interconnected::boards are interconnected
ranging from system::ranging from system
busses to high-speed::busses to high-speed
high-speed network connections::high-speed network connections
connections like infiniband::connections like infiniband
board can access::board can access
access the memory::access the memory
memory access times::memory access times
access times vary::access times vary
collectively as systems::collectively as systems
slower than systems::slower than systems
memory and cpus::memory and cpus
cpus are located::cpus are located
managing which page::managing which page
frames are stored::frames are stored
significantly affect performance::significantly affect performance
performance in numa::performance in numa
memory as uniform::memory as uniform
cpus may wait::cpus may wait
wait significantly longer::wait significantly longer
longer for memory::longer for memory
modify memory allocation::modify memory allocation
memory allocation algorithms::memory allocation algorithms
numa into account::numa into account
system the goal::system the goal
memory frames allocated::memory frames allocated
allocated as close::allocated as close
process is running::process is running
running the definition::running the definition
definition of close::definition of close
cpu the algorithmic::cpu the algorithmic
algorithmic changes consist::algorithmic changes consist
track the last::track the last
schedule each process::schedule each process
improved cache hits::improved cache hits
hits and decreased::hits and decreased
decreased memory access::decreased memory access
times will result::times will result
result the picture::result the picture
complicated once threads::complicated once threads
threads are added::threads are added
threads may end::threads may end
case solaris solves::case solaris solves
solves the problem::solves the problem
problem by creating::problem by creating
creating an entity::creating an entity
kernel each lgroup::kernel each lgroup
gathers together close::gathers together close
hierarchy of lgroups::hierarchy of lgroups
amount of latency::amount of latency
schedule all threads::schedule all threads
process and allocate::process and allocate
allocate all memory::allocate all memory
picks nearby lgroups::picks nearby lgroups
latency is minimized::latency is minimized
cpu cache hit::cpu cache hit
cache hit rates::cache hit rates
rates are maximized::rates are maximized
low-priority process falls::low-priority process falls
minimum number required::minimum number required
suspend that process::suspend that process
out its remaining::out its remaining
frames this provision::frames this provision
introduces a swap-in::introduces a swap-in
level of intermediate::level of intermediate
intermediate cpu scheduling::intermediate cpu scheduling
scheduling in fact::scheduling in fact
num.ber of frames::num.ber of frames
pages in active::pages in active
replace some page::replace some page
replace a page::replace a page
back in immediately::back in immediately
immediately this high::immediately this high
high paging activity::high paging activity
process is thrashing::process is thrashing
paging than executing::paging than executing
thrashing thrashing results::thrashing thrashing results
results in severe::results in severe
severe performance problems::severe performance problems
behavior of early::behavior of early
early paging systems::early paging systems
systems the operating::systems the operating
operating system monitors::operating system monitors
system monitors cpu::system monitors cpu
monitors cpu utilization::monitors cpu utilization
utilization if cpu::utilization if cpu
increase the degree::increase the degree
multiprogramming by introducing::multiprogramming by introducing
system a global::system a global
global page-replacement algorithm::global page-replacement algorithm
pages without regard::pages without regard
belong now suppose::belong now suppose
frames it starts::frames it starts
faulting and taking::faulting and taking
processes these processes::processes these processes
processes these faulting::processes these faulting
device to swap::device to swap
ready queue empties::ready queue empties
empties as processes::empties as processes
cpu utilization decreases::cpu utilization decreases
decreases the cpu::decreases the cpu
cpu scheduler sees::cpu scheduler sees
sees the decreasing::sees the decreasing
decreasing cpu utilization::decreasing cpu utilization
utilization and increases::utilization and increases
increases the degree::increases the degree
started by taking::started by taking
frames from running::frames from running
causing more page::causing more page
cpu utilization drops::cpu utilization drops
thrashing has occurred::thrashing has occurred
system throughput plunges::system throughput plunges
plunges the pagefault::plunges the pagefault
pagefault rate increases::pagefault rate increases
rate increases tremendously::rate increases tremendously
m.emory-access time increases::m.emory-access time increases
increases no work::increases no work
processes are spending::processes are spending
paging this phenomenon::paging this phenomenon
phenomenon is illustrated::phenomenon is illustrated
utilization is plotted::utilization is plotted
utilization also ilccreases::utilization also ilccreases
maximum is reached::maximum is reached
multiprogramming is increased::multiprogramming is increased
utilization drops sharply::utilization drops sharply
increase cpu utilization::increase cpu utilization
utilization and stop::utilization and stop
decrease the degree::decrease the degree
limit the effects::limit the effects
effects of thrashing::effects of thrashing
process starts thrashing::process starts thrashing
solved if processes::solved if processes
fault will increase::fault will increase
longer average queue::longer average queue
thrashing to prevent::thrashing to prevent
provide a process::provide a process
teclmiques the working-set::teclmiques the working-set
frames a process::frames a process
defines the locality::defines the locality
locality of process::locality of process
execution the locality::execution the locality
locality model states::locality model states
moves from locality::moves from locality
locality to locality::locality to locality
locality a locality::locality a locality
references are made::references are made
exit the function::exit the function
leaves this locality::leaves this locality
variables and instructions::variables and instructions
longer in active::longer in active
localities are defined::localities are defined
structures the locality::structures the locality
programs will exhibit::programs will exhibit
exhibit this basic::exhibit this basic
basic memory reference::basic memory reference
memory reference structure::memory reference structure
reference structure note::reference structure note
book if accesses::book if accesses
types of data::types of data
data were random::data were random
suppose we allocate::suppose we allocate
allocate enough frames::allocate enough frames
process to accommodate::process to accommodate
accommodate its current::accommodate its current
frames to accommodate::frames to accommodate
accommodate the size::accommodate the size
process will thrash::process will thrash
9.6.2 working-set model::9.6.2 working-set model
model as mentioned::model as mentioned
assumption of locality::assumption of locality
locality this model::locality this model
define the vrindovv::define the vrindovv
vrindovv the idea::vrindovv the idea
references the set::references the set
program s locality::program s locality
set has changed::set has changed
working set depends::working set depends
encompass the entire::encompass the entire
page reference table::page reference table
compute the working-set::compute the working-set
dis the total::dis the total
demand for frames::demand for frames
frames each process::frames each process
wss ; frames::wss ; frames
demand is greater::demand is greater
thrashing will occur::thrashing will occur
model is simple::model is simple
simple the operating::simple the operating
monitors the working::monitors the working
process and allocates::process and allocates
set enough frames::set enough frames
working-set sizes increases::working-set sizes increases
exceeding the total::exceeding the total
operating system selects::operating system selects
process to suspend::process to suspend
suspend the process::suspend the process
process s pages::process s pages
pages are written::pages are written
frames are reallocated::frames are reallocated
processes the suspended::processes the suspended
working-set strategy prevents::working-set strategy prevents
strategy prevents thrashing::strategy prevents thrashing
thrashing while keeping::thrashing while keeping
keeping the degree::keeping the degree
multiprogramming as high::multiprogramming as high
optimizes cpu utilization::optimizes cpu utilization
utilization the difficulty::utilization the difficulty
model is keeping::model is keeping
set the working-set::set the working-set
oldest reference drops::oldest reference drops
end a page::end a page
approximate the working-set::approximate the working-set
fixed-interval timer interrupt::fixed-interval timer interrupt
equals 10,000 references::equals 10,000 references
copy and clear::copy and clear
clear the reference-bit::clear the reference-bit
examine the current::examine the current
current reference bit::current reference bit
two in-memory bits::two in-memory bits
bits to determine::bits to determine
working set note::working set note
reduce the uncertainty::reduce the uncertainty
uncertainty by increasing::uncertainty by increasing
number of history::number of history
frequency of interrupts::frequency of interrupts
bits and interrupts::bits and interrupts
cost to service::cost to service
frequency 9.6.3 page-fault::frequency 9.6.3 page-fault
9.6.3 page-fault frequency::9.6.3 page-fault frequency
frequency the working-set::frequency the working-set
model is successful::model is successful
thrashilcg a strategy::thrashilcg a strategy
approach the specific::approach the specific
prevent thrashilcg thrashing::prevent thrashilcg thrashing
high page-fault rate::high page-fault rate
control the page-fault::control the page-fault
upper and lower::upper and lower
desired page-fault rate::desired page-fault rate
actual page-fault rate::actual page-fault rate
page-fault rate exceeds::page-fault rate exceeds
exceeds the upper::exceeds the upper
allocate the process::allocate the process
process another frame::process another frame
page-fault rate falls::page-fault rate falls
remove a frame::remove a frame
measure and control::measure and control
rate to prevent::rate to prevent
suspend a process::suspend a process
page-fault rate ilccreases::page-fault rate ilccreases
select some process::select some process
process and suspend::process and suspend
distributed to processes::distributed to processes
processes with high::processes with high
high page-fault rates::high page-fault rates
file on disk::file on disk
standard system calls::standard system calls
system calls open::system calls open
file access requires::file access requires
requires a system::requires a system
call and disk::call and disk
virtual memory techniques::virtual memory techniques
memory techniques discussed::memory techniques discussed
i as routine::-NONE- as routine
routine memory accesses::routine memory accesses
accesses this approach::accesses this approach
lead to significant::lead to significant
significant performance increases::significant performance increases
increases when performing::increases when performing
sets and page::sets and page
typically as shown::typically as shown
working set ofa::working set ofa
set ofa process::set ofa process
references to data::references to data
data and code::data and code
code sections move::code sections move
memory to store::memory to store
store the working::store the working
processis 11.ot thrashing::processis 11.ot thrashing
tbe page-fault rate::tbe page-fault rate
process will transition::process will transition
transition between peaks::transition between peaks
peaks and valleys::peaks and valleys
behavior is shown::behavior is shown
page fault rate::page fault rate
fault rate working::fault rate working
rate working set::rate working set
set time figure::set time figure
page-fault rate occurs::page-fault rate occurs
fault rate rises::fault rate rises
set is loaded::set is loaded
memory the span::memory the span
start of thenext::start of thenext
thenext peak represents::thenext peak represents
represents the transition::represents the transition
9.7.1 basic mechanism::9.7.1 basic mechanism
basic mechanism memory::basic mechanism memory
mechanism memory mapping::mechanism memory mapping
mapping a file::mapping a file
file is accomplished::file is accomplished
accomplished by mapping::accomplished by mapping
mapping a disk::mapping a disk
memory initial access::memory initial access
proceeds through ordinary::proceeds through ordinary
ordinary demand paging::ordinary demand paging
file is read::file is read
systems may opt::systems may opt
opt to read::opt to read
chunk of memory::chunk of memory
reads and writes::reads and writes
file are handled::file are handled
handled as routine::handled as routine
simplifying file access::simplifying file access
access and usage::access and usage
usage by allowing::usage by allowing
allowing the system::allowing the system
system to manipulate::system to manipulate
files through memory::files through memory
incurring the overhead::incurring the overhead
l is done::-NONE- is done
done in memory::done in memory-
memory as opposed::memory- as opposed
calls that involve::calls that involve
note that writes::note that writes
mapped in memory::mapped in memory
disk some systems::disk some systems
systems may choose::systems may choose
choose to update::choose to update
update the physical::update the physical
system periodically checks::system periodically checks
page in memory::page in memory
file is closed::file is closed
data are written::data are written
back to disk::back to disk
disk and ren::disk and ren
process some operating::process some operating
systems provide memory::systems provide memory
provide memory mapping::provide memory mapping
specific system call::specific system call
calls to perform::calls to perform
choose to memory-map::choose to memory-map
memory-map a file::memory-map a file
maps the file::maps the file
file is opened::file is opened
opened and accessed::opened and accessed
accessed using ordinary::accessed using ordinary
ordinary system calls::ordinary system calls
memory-maps the file::memory-maps the file
file is mapped::file is mapped
kernel address space::kernel address space
treats all file::treats all file
i as memory-mapped::-NONE- as memory-mapped
allowing file access::allowing file access
efficient memory subsystem::efficient memory subsystem
memory subsystem multiple::memory subsystem multiple
subsystem multiple processes::subsystem multiple processes
allowed to map::allowed to map
sharing of data::sharing of data
modify the data::modify the data
data in virtual::data in virtual
discussions of virtual::discussions of virtual
sharing of memory-mapped::sharing of memory-mapped
sections of memory::sections of memory
memory is implemented::memory is implemented
virtual memory map::virtual memory map
sharing process points::sharing process points
physical memory-the page::physical memory-the page
page that holds::page that holds
holds a copy::holds a copy
block this memory::block this memory
sharing is illustrated::sharing is illustrated
memory-mapping system calls::memory-mapping system calls
support copy-on-write functionality::support copy-on-write functionality
share a file::share a file
file in read-only::file in read-only
data they modify::data they modify
j---r  -rl..-r::j---r  -rl..-r
.....c.c ~ ..----r::.....c.c ~ ..----r
disk file figure::disk file figure
memory-mapped files process::memory-mapped files process
process b virtual::process b virtual
memory-mapped file figure::memory-mapped file figure
memory in windows::memory in windows
windows using memory-mapped::windows using memory-mapped
data is coordinated::data is coordinated
mechanisms for achieving::mechanisms for achieving
achieving mutual exclusion::achieving mutual exclusion
mutual exclusion described::mutual exclusion described
files is similar::files is similar
similar to shared::similar to shared
memory as described::memory as described
unix and linux::unix and linux
mapping is accomplished::mapping is accomplished
memory is achieved::memory is achieved
howeve1 ~ shared::howeve1 ~ shared
memory is accomplished::memory is accomplished
accomplished by memory::accomplished by memory
memory mapping files::memory mapping files
communicate using shared::communicate using shared
spaces the memorymapped::spaces the memorymapped
memorymapped file serves::memorymapped file serves
region of shared::region of shared
api for shared::api for shared
memory using memory-mapped::memory using memory-mapped
files 9.7.2 shared::files 9.7.2 shared
9.7.2 shared memory::9.7.2 shared memory
api the general::api the general
outline for creating::outline for creating
creating a region::creating a region
memory using memorymapped::memory using memorymapped
win32 api involves::win32 api involves
api involves first::api involves first
involves first creating::involves first creating
creating a file::creating a file
establishing a view::establishing a view
process s virtual::process s virtual
open and create::open and create
create a view::create a view
space the mapped::space the mapped
mapped file represents::mapped file represents
represents the shared-menwry::represents the shared-menwry
illustrate these steps::illustrate these steps
process first creates::process first creates
creates a shared-memory::creates a shared-memory
api the producer::api the producer
producer then writes::producer then writes
writes a message::writes a message
message to shared::message to shared
consumer process opens::consumer process opens
opens a mapping::opens a mapping
object and reads::object and reads
reads the message::reads the message
consum.er to establish::consum.er to establish
establish a memory-mapped::establish a memory-mapped
process first opens::process first opens
opens the file::opens the file
returns a handle::returns a handle
file the process::file the process
process then creates::process then creates
creates a mapping::creates a mapping
mapping is established::mapping is established
process then establishes::process then establishes
establishes a view::establishes a view
function the view::function the view
represents the portion::represents the portion
file being mapped::file being mapped
windows.h # include::windows.h # include
include stdio.h int::include stdio.h int
stdio.h int main::stdio.h int main
hmapfile ; lpvoid::hmapfile ; lpvoid
lpmapaddress ; hfile::lpmapaddress ; hfile
hfile = createfile::hfile = createfile
genericjread i generic_write::genericjread i generic_write
existing file file_attribute_normal::existing file file_attribute_normal
file attributes null::file attributes null
file template hmapfile::file template hmapfile
hmapfile = createfilemapping::hmapfile = createfilemapping
access to mapped::access to mapped
map entire file::map entire file
shared memory object::shared memory object
memory object lpmapaddress::memory object lpmapaddress
lpmapaddress = mapviewdffile::lpmapaddress = mapviewdffile
object handle filejmap_all_access::object handle filejmap_all_access
view of entire::view of entire
write to shared::write to shared
shared memory sprintf::shared memory sprintf
shared memory message::shared memory message
writing to shared::writing to shared
win32 api -the::win32 api -the
api -the entire::api -the entire
-the entire file::-the entire file
mapped we illustrate::mapped we illustrate
illustrate this sequence::illustrate this sequence
checking for code::checking for code
call to createfilemapping::call to createfilemapping
creates a named::creates a named
named shared-memory object::named shared-memory object
object called sharedobj::object called sharedobj
ect the consumer::ect the consumer
process will communicate::process will communicate
segment by creating::segment by creating
creating a mapping::creating a mapping
object the producer::object the producer
producer then creates::producer then creates
creates a view::creates a view
space by passing::space by passing
passing the last::passing the last
last three parameters::last three parameters
parameters the value::parameters the value
offset and size::offset and size
creating a view::creating a view
loaded # include::loaded # include
hmapfile = openfilemapping::hmapfile = openfilemapping
mapped file object::mapped file object
file object lpmapaddress::file object lpmapaddress
lpmapaddress = mapviewoffile::lpmapaddress = mapviewoffile
read from shared::read from shared
shared memory printf::shared memory printf
reading from shared::reading from shared
api into memory::api into memory
returns a pointer::returns a pointer
producer process writes::producer process writes
writes the message::writes the message
message shared memory::message shared memory
memory a program::memory a program
consumer process establishes::consumer process establishes
object is shown::object is shown
create a mapping::create a mapping
existii1g named shared-memory::existii1g named shared-memory
object the consumer::object the consumer
process did ii1::process did ii1
ii1 the program::ii1 the program
program in figure::program in figure
consumer then reads::consumer then reads
reads from shared::reads from shared
memory the message::memory the message
memory message thatwas::memory message thatwas
message thatwas written::message thatwas written
remove the view::remove the view
call to unmapviewoffile::call to unmapviewoffile
provide a programming::provide a programming
chapter using shared::chapter using shared
memory with memory::memory with memory
api 9.7.3 memory-mapped::api 9.7.3 memory-mapped
mentioned in section::mentioned in section
i controller includes::-NONE- controller includes
controller includes registers::controller includes registers
special i instructions::special -NONE- instructions
instructions allow data::instructions allow data
registers and system::registers and system
devices1 many computer::devices1 many computer
computer architectures provide::computer architectures provide
ranges of memory::ranges of memory
addresses are set::addresses are set
device registers reads::device registers reads
registers this method::registers this method
screen is mapped::screen is mapped
n1.emory location displaying::n1.emory location displaying
location displaying text::location displaying text
easy as writing::easy as writing
writing the text::writing the text
memory-mapped locations memory-mapped::memory-mapped locations memory-mapped
serial and parallel::serial and parallel
modems and printers::modems and printers
computer the cpu::computer the cpu
cpu transfers data::cpu transfers data
kinds of devices::kinds of devices
devices by reading::devices by reading
reading and writing::reading and writing
i to send::-NONE- to send
out a long::out a long
string of bytes::string of bytes
memory-mapped serial port1::memory-mapped serial port1
port1 the cpu::port1 the cpu
writes one data::writes one data
register and sets::register and sets
sets a bit::sets a bit
register to signal::register to signal
takes the data::takes the data
clears the bit::clears the bit
cpu can transfer::cpu can transfer
cpu uses polling::cpu uses polling
polling to watch::polling to watch
watch the control::watch the control
method of operation::method of operation
poll the control::poll the control
receives an interrupt::receives an interrupt
device is ready::device is ready
user rnode requests::user rnode requests
rnode requests additional::rnode requests additional
additional memory pages::additional JJ pages
pages are allocated::pages are allocated
list of free::list of free
free page frames::free page frames
page frames maintained::page frames maintained
kernel this list::kernel this list
free pages scattered::free pages scattered
user process requests::user process requests
requests a single::requests a single
memory internal fragmentation::NNP internal fragmentation
granted an entire::granted an entire
entire page frame::entire page frame
page frame kernel::page frame kernel
kernel memory however1::kernel -NONE- however1
satisfy ordinary user-mode::satisfy ordinary user-mode
ordinary user-mode processes::ordinary user-mode processes
two primary reasons::two primary reasons
kernel requests memory::kernel requests memory
memory for data::memory for data
structures of varying::structures of varying
page in size::page in size
result1 the kernel::result1 the kernel
conservatively and attempt::conservatively and attempt
attempt to minimize::attempt to minimize
minimize waste due::minimize waste due
due to fragmentation::due to fragmentation
subject kernel code::subject kernel code
allocated to user-mode::allocated to user-mode
contiguous physical memory::contiguous physical memory
however certain hardware::NNP certain hardware
hardware devices interact::hardware devices interact
directly with physical::directly with physical
memory-without the benefit::memory-without the benefit
virtual memory interface-and::virtual memory interface-and
require memory residing::require memory residing
physically contiguous pages::physically contiguous pages
examine two strategies::examine two strategies
strategies for managing::strategies for managing
managing free memory::managing free memory
assigned to kernel::assigned to kernel
system and slab::system and slab
9.8.1 buddy system::9.8.1 buddy system
buddy system tbe::buddy system tbe
system tbe buddy::system tbe buddy
tbe buddy system::tbe buddy system
buddy system allocates::buddy system allocates
system allocates memory::system allocates memory
fixed-size segment consisting::fixed-size segment consisting
contiguous pages memory::contiguous pages memory
requests in units::requests in units
request in units::request in units
sized is rounded::sized is rounded
simple example assume::simple example assume
assume the size::assume the size
memory the segment::memory the segment
two 64-kb buddiesbland::two 64-kb buddiesbland
two 32-kb buddies::two 32-kb buddies
request this scheme::request this scheme
scheme is illustrated::scheme is illustrated
request an advantage::request an advantage
quickly adjacent buddies::quickly adjacent buddies
combined to form::combined to form
form larger segments::form larger segments
coalescing in figure::coalescing in figure
system can coalesce::system can coalesce
segment this segment::segment this segment
turn be coalesced::turn be coalesced
segment the obvious::segment the obvious
fragmentation within allocated::fragmentation within allocated
segment in fact::segment in fact
due to internal::due to internal
explore a memory::explore a memory
memory allocation scheme::memory allocation scheme
space is lost::space is lost
fragmentation physically contiguous::fragmentation physically contiguous
buddy system allocation::buddy system allocation
9.8.2 slab allocation::9.8.2 slab allocation
strategy for allocating::strategy for allocating
allocating kernel memory::allocating kernel memory
nwre physically contiguous::nwre physically contiguous
pages a consists::pages a consists
unique kernel data::unique kernel data
kernel data structure::kernel data structure
data structure -for::data structure -for
data structure representing::data structure representing
structure representing process::structure representing process
representing process descriptors::representing process descriptors
cache for file::cache for file
cache for semaphores::cache for semaphores
cache is populated::cache is populated
structure the cache::structure the cache
cache representing semaphores::cache representing semaphores
representing semaphores stores::representing semaphores stores
semaphores stores instances::semaphores stores instances
instances of semaphore::instances of semaphore
cache representing process::cache representing process
process descriptors stores::process descriptors stores
descriptors stores instances::descriptors stores instances
instances of process::instances of process
process descriptor objects::process descriptor objects
relationship between slabs::relationship between slabs
objects is shown::objects is shown
shows two kernel::shows two kernel
two kernel objects::two kernel objects
size these objects::size these objects
objects are stored::objects are stored
caches the slab-allocation::caches the slab-allocation
algorithm uses caches::algorithm uses caches
caches to store::caches to store
store kernel objects::store kernel objects
cache is created::cache is created
number of objects-which::number of objects-which
marked as free-are::marked as free-are
cache the number::cache the number
number of objects::number of objects
continguous 4-kb pages::continguous 4-kb pages
cache are marked::cache are marked
marked as free::marked as free
structure is needed::structure is needed
allocator can assign::allocator can assign
assign any free::assign any free
cache to satisfy::cache to satisfy
satisfy the request::satisfy the request
request the object::request the object
cache is marked::cache is marked
representing a process::representing a process
descriptor in linux::descriptor in linux
type struct task_struct::type struct task_struct
linux kernel creates::linux kernel creates
struct task_struct object::struct task_struct object
cache the cache::cache the cache
cache will fulfill::cache will fulfill
fulfill the request::fulfill the request
free in linux::free in linux
kernel objects slabs::kernel objects slabs
slabs 3-kb objects::slabs 3-kb objects
objects 7-kb objects::objects 7-kb objects
7-kb objects figure::7-kb objects figure
allocation physically contiguous::allocation physically contiguous
full all objects::full all objects
slab are marked::slab are marked
empty all objects::empty all objects
partial the slab::partial the slab
allocator first attempts::allocator first attempts
attempts to satisfy::attempts to satisfy
object is assigned::object is assigned
slab is allocated::slab is allocated
allocated from contiguous::allocated from contiguous
contiguous physical pages::contiguous physical pages
pages and assigned::pages and assigned
cache ; memory::cache ; memory
object is allocated::object is allocated
slab the slab::slab the slab
two main benefits::two main benefits
memory is wasted::memory is wasted
fragmentation fragn entation::fragmentation fragn entation
cache is made::cache is made
divided into chunks::divided into chunks
chunks the size::chunks the size
objects being represented::objects being represented
slab allocator returns::slab allocator returns
returns the exact::returns the exact
required to represent::required to represent
represent the object::represent the object
object memory requests::object memory requests
quickly the slab::quickly the slab
slab allocation scheme::slab allocation scheme
memory when objects::memory when objects
allocated and deallocated::allocated and deallocated
case with requests::case with requests
kernel the act::kernel the act
act of allocating-and::act of allocating-and
objects are created::objects are created
created in advance::created in advance
kernel has finished::kernel has finished
object and releases::object and releases
free and returned::free and returned
kernel the slab::kernel the slab
allocator first appeared::allocator first appeared
user-mode memory requests::user-mode memory requests
requests in solaris::requests in solaris
beginning with version::beginning with version
linux kernel adopted::linux kernel adopted
adopted the slab::adopted the slab
allocator the major::allocator the major
prepaging an obvious::prepaging an obvious
property of pure::property of pure
faults that occur::faults that occur
process is started::process is started
started this situation::started this situation
locality into memory::locality into memory
situation may arise::situation may arise
times for instance::times for instance
process is restarted::process is restarted
attempt to prevent::attempt to prevent
prevent this high::prevent this high
level of initial::level of initial
paging the strategy::paging the strategy
bring into memory::bring into memory
needed some operating::needed some operating
operating systerns-notably solaris-prepage::operating systerns-notably solaris-prepage
solaris-prepage the page::solaris-prepage the page
frames for small::frames for small
process a list::process a list
lack of free::lack of free
remember the working::remember the working
i has finished::-NONE- has finished
memory its entire::memory its entire
entire working set::entire working set
set before restarting::set before restarting
restarting the process::restarting the process
prepaging may offer::prepaging may offer
offer an advantage::offer an advantage
cases the question::cases the question
cost of servicing::cost of servicing
memory by prepaging::memory by prepaging
pages are prepaged::pages are prepaged
saved page faults::saved page faults
faults is greater::faults is greater
cost of prepaging::cost of prepaging
wins 9.9.2 page::wins 9.9.2 page
9.9.2 page size::9.9.2 page size
size the designers::size the designers
existing machine seldom::existing machine seldom
single best page::single best page
set of factors::set of factors
factors that support::factors that support
support various sizes::support various sizes
sizes page sizes::sizes page sizes
size one concern::size one concern
virtual memory space::virtual memory space
decreasing the page::decreasing the page
page size increases::page size increases
number of pages::number of pages
size is desirable::size is desirable
utilized with smaller::utilized with smaller
allocated memory starting::allocated memory starting
units of allocation::units of allocation
creating internal fragmentation::creating internal fragmentation
independence of process::independence of process
size and page::size and page
wasted this loss::wasted this loss
bytes to minimize::bytes to minimize
minimize internal fragmentation::minimize internal fragmentation
small page size::small page size
size another problem::size another problem
required to read::required to read
read or write::read or write
write a page::write a page
composed of seek::composed of seek
transfer times transfer::transfer times transfer
page size howeve1::page size howeve1
latency and seek::latency and seek
milliseconds to transfer::milliseconds to transfer
milliseconds and seek::milliseconds and seek
percent is attributable::percent is attributable
actual transfer doubling::actual transfer doubling
doubling the page::doubling the page
milliseconds it takes::milliseconds it takes
milliseconds to read::milliseconds to read
read a single::read a single
read the sam.e::read the sam.e
desire to minimize::desire to minimize
larger page size::larger page size
smaller page size::smaller page size
improved a smaller::improved a smaller
page to match::page to match
match program locality::match program locality
locality more accurately::locality more accurately
transferred and allocated::transferred and allocated
allocate and transfer::allocate and transfer
size should result::size should result
total allocated memory::total allocated memory
byte a process::byte a process
memory would generate::memory would generate
102,400 page faults::102,400 page faults
byte each page::byte each page
page fault generates::page fault generates
generates the large::generates the large
amount of overhead::amount of overhead
needed for processing::needed for processing
processing the interrupt::processing the interrupt
replacing a page::replacing a page
tables to minimize::tables to minimize
minimize the number::minimize the number
size other factors::size other factors
relationship between page::relationship between page
size and sector::size and sector
edition of operating::edition of operating
operating system concepts::operating system concepts
bound on page::bound on page
common page size::common page size
section 9.9.3 tlb::section 9.9.3 tlb
9.9.3 tlb reach::9.9.3 tlb reach
reach in chapter::reach in chapter
percentage of virtual::percentage of virtual
virtual address translations::virtual address translations
ratio is related::ratio is related
increase the hit::increase the hit
construct the tlb::construct the tlb
expensive and power::expensive and power
power hungry related::power hungry related
tlb reach refers::tlb reach refers
simply the number::simply the number
process will spend::process will spend
spend a considerable::spend a considerable
resolving memory references::resolving memory references
double the number::double the number
double the tlb::double the tlb
insufficient for storing::insufficient for storing
storing the working::storing the working
set another approacl1::set another approacl1
approacl1 for increasing::approacl1 for increasing
increasing the tlb::increasing the tlb
increase the size::increase the size
page or provide::page or provide
provide multiple page::provide multiple page
increase the page::increase the page
quadruple the tlb::quadruple the tlb
increase in fragmentation::increase in fragmentation
system may provide::system may provide
ultrasparc supports page::ultrasparc supports page
supports page sizes::supports page sizes
4-mb page sizes::4-mb page sizes
reach for solaris::reach for solaris
majority of applications::majority of applications
8-kb page size::8-kb page size
size is sufficient::size is sufficient
maps the first::maps the first
two 4-mb pages::two 4-mb pages
4-mb pages solaris::4-mb pages solaris
applications-such as databases-to::applications-such as databases-to
databases-to take advantage::databases-to take advantage
large 4-mb page::large 4-mb page
4-mb page size::4-mb page size
page size providing::page size providing
size providing support::size providing support
support for multiple::support for multiple
page sizes requires::page sizes requires
requires the operating::requires the operating
operating system -not::operating system -not
-not hardware-to manage::-not hardware-to manage
manage the tlb::manage the tlb
tlb entry managing::tlb entry managing
tlb in software::tlb in software
cost in performance::cost in performance
increased hit ratio::increased hit ratio
ratio and tlb::ratio and tlb
tlb reach offset::tlb reach offset
offset the performance::offset the performance
move toward softwaremanaged::move toward softwaremanaged
tlbs and operating-system::tlbs and operating-system
sizes the ultrasparc::sizes the ultrasparc
alpha architectures employ::alpha architectures employ
architectures employ software-managed::architectures employ software-managed
employ software-managed tlbs::employ software-managed tlbs
tlbs the powerpc::tlbs the powerpc
powerpc and pentium::powerpc and pentium
tlb in hardware::tlb in hardware
hardware 9.9.4 inverted::hardware 9.9.4 inverted
9.9.4 inverted page::9.9.4 inverted page
page tables section::page tables section
section 8.5.3 introduced::section 8.5.3 introduced
introduced the concept::introduced the concept
table the purpose::table the purpose
form of page::form of page
reduce the amount::reduce the amount
needed to track::needed to track
track virtual-to-physical address::track virtual-to-physical address
virtual-to-physical address translations::virtual-to-physical address translations
translations we accomplish::translations we accomplish
accomplish this savings::accomplish this savings
savings by creating::savings by creating
creating a table::creating a table
entry per page::entry per page
virtual memory page::virtual memory page
page is stored::page is stored
page tables reduce::page tables reduce
store this information::store this information
table no longer::table no longer
longer contains complete::longer contains complete
information is required::information is required
memory demand paging::memory demand paging
demand paging requires::demand paging requires
requires this information::requires this information
information to process::information to process
process page faults::process page faults
external page table::external page table
traditional per-process page::traditional per-process page
per-process page table::per-process page table
page is located::page is located
external page tables::external page tables
page tables negate::page tables negate
negate the utility::negate the utility
utility of inverted::utility of inverted
tables are referenced::tables are referenced
virtual memory n1.anager::virtual memory n1.anager
n1.anager to generate::n1.anager to generate
generate another page::generate another page
locate the virtual::locate the virtual
store this special::store this special
special case requires::special case requires
case requires careful::case requires careful
requires careful handling::requires careful handling
processing 9.9.5 program::processing 9.9.5 program
9.9.5 program structure::9.9.5 program structure
program structure demand::program structure demand
structure demand paging::structure demand paging
paging is designed::paging is designed
nature of memory::nature of memory
underlying demand paging::underlying demand paging
contrived but informative::contrived but informative
informative example assume::informative example assume
assume that pages::assume that pages
words in size::words in size
program whose function::program whose function
code is typical::code is typical
array is stored::array is stored
stored row major::stored row major
127j for pages::127j for pages
takes one page::takes one page
preceding code zeros::preceding code zeros
zeros one word::zeros one word
operating system allocates::operating system allocates
system allocates fewer::system allocates fewer
execution will result::execution will result
16,384 page faults::16,384 page faults
faults in contrast::faults in contrast
suppose we change::suppose we change
change the code::change the code
code to inti::code to inti
page before starting::page before starting
reducing the number::reducing the number
selection of data::selection of data
structures and programming::structures and programming
structures can increase::structures can increase
lower the page-fault::lower the page-fault
stack has good::stack has good
top a hash::top a hash
designed to scatter::designed to scatter
producing bad locality::producing bad locality
locality of reference::locality of reference
heavily weighted factors::heavily weighted factors
weighted factors include::weighted factors include
factors include search::factors include search
include search speed::include search speed
compiler and loader::compiler and loader
effect on paging::effect on paging
paging separating code::paging separating code
data and generating::data and generating
generating reentrant code::generating reentrant code
reentrant code means::reentrant code means
means that code::means that code
modified clean pages::modified clean pages
replaced the loader::replaced the loader
loader can avoid::loader can avoid
avoid placing routines::avoid placing routines
routines across page::routines across page
keeping each routine::keeping each routine
routines that call::routines that call
page this packaging::page this packaging
problem of operations::problem of operations
pack the variable-sized::pack the variable-sized
variable-sized load segments::variable-sized load segments
references are minimized::references are minimized
large page sizes::large page sizes
sizes the choice::sizes the choice
choice of programming::choice of programming
language can affect::language can affect
tend to randomize::tend to randomize
diminishing a process::diminishing a process
process s locality::process s locality
locality some studies::locality some studies
studies have shown::studies have shown
shown that object-oriented::shown that object-oriented
programs also tend::programs also tend
interlock when demand::interlock when demand
separate i processor::separate NN processor
usb storage device::usb storage device
number of bytes::number of bytes
bytes to transfer::bytes to transfer
cpu is interrupted::cpu is interrupted
sequence of events::sequence of events
processes cause page::processes cause page
replaces the page::replaces the page
process the pages::process the pages
pages are paged::pages are paged
i request advances::NNP request advances
two common solutions::two common solutions
problem one solution::problem one solution
i to user::-NONE- to user
copied between system::copied between system
memory and user::memory and user
memory i takes::memory -NONE- takes
i takes place::-NONE- takes place
device to write::device to write
write a block::write a block
block on tape::block on tape
copy the block::copy the block
block to system::block to system
tape this extra::tape this extra
copying may result::copying may result
unacceptably high overhead::unacceptably high overhead
overhead another solution::overhead another solution
locked into memory::locked into memory
frame is locked::frame is locked
lock into memory::lock into memory
memory the pages::memory the pages
block the system::block the system
continue as usual::continue as usual
usual locked pages::usual locked pages
i is complete::NNP is complete
pages are unlocked::pages are unlocked
reason why frames::reason why frames
kernel is locked::kernel is locked
tolerate a page::tolerate a page
page fault caused::page fault caused
lock bit involves::lock bit involves
bit involves normal::bit involves normal
involves normal page::involves normal page
normal page replacement::normal page replacement
low-priority process faults::low-priority process faults
process faults selecting::process faults selecting
selecting a replacement::selecting a replacement
paging system reads::paging system reads
ready to continue::ready to continue
low-priority process enters::low-priority process enters
enters the ready::enters the ready
queue and waits::queue and waits
low-priority process waits::low-priority process waits
high-priority process faults::high-priority process faults
paging system sees::paging system sees
sees a page::sees a page
referenced or modified::referenced or modified
process just brought::process just brought
replace the low-priority::replace the low-priority
delaying the low-priority::delaying the low-priority
wasting the effort::wasting the effort
spent to bring::spent to bring
decide to prevent::decide to prevent
newly brought-in page::newly brought-in page
bit to implement::bit to implement
implement this mechanism::implement this mechanism
bit is turned::bit is turned
frame becomes unusable::frame becomes unusable
overuse of locking::overuse of locking
locking would hurt::locking would hurt
doing the locking::doing the locking
locking multiuser systems::locking multiuser systems
trusting of users::trusting of users
users for instance::users for instance
solaris allows locking::solaris allows locking
free to disregard::free to disregard
disregard these hints::disregard these hints
individual process requests::individual process requests
pages be locked::pages be locked
locked in memory::locked in memory
describe how windows::describe how windows
solaris implement virtual::solaris implement virtual
implement virtual memory::implement virtual memory
memory 9.10.1 windows::memory 9.10.1 windows
windows xp windows::windows xp windows
windows xp implements::windows xp implements
implements virtual memory::implements virtual memory
memory using demand::memory using demand
paging with clustering::paging with clustering
clustering handles page::clustering handles page
handles page faults::handles page faults
faults by bringing::faults by bringing
process is first::process is first
assigned a working-set::assigned a working-set
minimum and maximum::minimum and maximum
pages the process::pages the process
process is guaranteed::process is guaranteed
memory if sufficient::memory if sufficient
value of working-set::value of working-set
minimum and working-set::minimum and working-set
allowed to exceed::allowed to exceed
exceed its working-set::exceed its working-set
virtual memory manager::virtual memory manager
memory manager maintains::memory manager maintains
maintains a list::maintains a list
sufficient free memory::sufficient free memory
memory manager allocates::memory manager allocates
allocates a page::allocates a page
working-set rnaximum incurs::working-set rnaximum incurs
incurs a page::incurs a page
local page-replacement policy::local page-replacement policy
free memory falls::free memory falls
restore the value::restore the value
threshold automatic working-set::threshold automatic working-set
automatic working-set trimming::automatic working-set trimming
working-set trimming works::working-set trimming works
works by evaluating::works by evaluating
evaluating the number::evaluating the number
allocated more pages::allocated more pages
memory manager removes::memory manager removes
manager removes pages::manager removes pages
reaches its working-set::reaches its working-set
minimum a process::minimum a process
list once sufficient::list once sufficient
determine which page::determine which page
page to remove::page to remove
type of processor::type of processor
processor on single-processor::processor on single-processor
single-processor 80x86 systems::single-processor 80x86 systems
clock algorithm discussed::clock algorithm discussed
9.4.5.2 on alpha::9.4.5.2 on alpha
alpha and multiprocessor::alpha and multiprocessor
multiprocessor x86 systems::multiprocessor x86 systems
clearing the reference::clearing the reference
bit may require::bit may require
translation look-aside buffer::translation look-aside buffer
incurring this overhead::incurring this overhead
fifo algorithm discussed::fifo algorithm discussed
9.4.2 9.10.2 solaris::9.4.2 9.10.2 solaris
solaris in solaris::solaris in solaris
assigns a page::assigns a page
pages it maintains::pages it maintains
represents a threshold::represents a threshold
threshold to begin::threshold to begin
paging the lotsfree::paging the lotsfree
memory four times::memory four times
number of free::number of free
free pages falls::free pages falls
falls below lotsfree::falls below lotsfree
process is similar::process is similar
second-chance algorithm described::second-chance algorithm described
hands while scanning::hands while scanning
pageout process works::pageout process works
scans all pages::scans all pages
setting the reference::setting the reference
examines the reference::examines the reference
appending each page::appending each page
page whose reference::page whose reference
list and writing::list and writing
writing to disk::writing to disk
disk its contents::disk its contents
contents if modified::contents if modified
modified solaris maintains::modified solaris maintains
maintains a cache::maintains a cache
list of pages::list of pages
overwritten the free::overwritten the free
list contains frames::list contains frames
invalid contents pages::invalid contents pages
list the pageout::list the pageout
parameters to control::parameters to control
control the rate::control the rate
pages are scam::pages are scam
scanrate is expressed::scanrate is expressed
ranges from slowscan::ranges from slowscan
slowscan to fastscan::slowscan to fastscan
fastscan when free::fastscan when free
occurs at slowscan::occurs at slowscan
progresses to fastscan::progresses to fastscan
value of slowscan::value of slowscan
total physical pages::total physical pages
clock is determil::clock is determil
handspread the amount::handspread the amount
slowscan minfree desfree::slowscan minfree desfree
minfree desfree amount::minfree desfree amount
free memory figure::free memory figure
solaris page scanner::solaris page scanner
clearing a bit::clearing a bit
hand s investigating::hand s investigating
investigating its value::investigating its value
handspread if scam-ate::handspread if scam-ate
seconds can pass::seconds can pass
uncommon this means::uncommon this means
clearing and investigating::clearing and investigating
investigating a bit::investigating a bit
seconds as mentioned::seconds as mentioned
pageout process checks::pageout process checks
process checks memory::process checks memory
falls below desfree::falls below desfree
intention of keeping::intention of keeping
desfree free memory::desfree free memory
process is unable::process is unable
memory at desfree::memory at desfree
kernel begins swapping::kernel begins swapping
begins swapping processes::begins swapping processes
freeing all pages::freeing all pages
allocated to swapped::allocated to swapped
processes in general::processes in general
system is unable::system is unable
unable to maintain::unable to maintain
maintain the amount::maintain the amount
memory at minfree::memory at minfree
page recent releases::page recent releases
kernel have provided::kernel have provided
enhancement involves recognizing::enhancement involves recognizing
involves recognizing pages::involves recognizing pages
pages from shared::pages from shared
shared libraries pages::shared libraries pages
libraries pages belonging::libraries pages belonging
belonging to libraries::belonging to libraries
process another enhancement::process another enhancement
enhancement concerns distinguishing::enhancement concerns distinguishing
concerns distinguishing pages::concerns distinguishing pages
processes from pages::processes from pages
allocated to regularfiles::allocated to regularfiles
process whose logical::process whose logical
space is larger::space is larger
address space virtual::address space virtual
space virtual memory::space virtual memory
map a large::map a large
smaller physical menlory::smaller physical menlory
physical menlory virtual::physical menlory virtual
menlory virtual memory::menlory virtual memory
run extremely large::run extremely large
extremely large processes::extremely large processes
raise the degree::raise the degree
increasing cpu utilization::increasing cpu utilization
frees application programmers::frees application programmers
programmers from worrying::programmers from worrying
worrying about memory::worrying about memory
availability in addition::availability in addition
processes can share::processes can share
share system libraries::share system libraries
libraries and memory::libraries and memory
memory also enables::memory also enables
type of process::type of process
child processes share::child processes share
processes share actual::processes share actual
share actual pages::share actual pages
implemented by demand::implemented by demand
demand paging pure::demand paging pure
paging pure demand::paging pure demand
paging never brings::paging never brings
referenced the first::referenced the first
system the operating-system::system the operating-system
operating-system kernel consults::operating-system kernel consults
consults an internal::consults an internal
table to determine::table to determine
finds a free::finds a free
frame and reads::frame and reads
reads the page::reads the page
store the page::store the page
table is updated::table is updated
updated to reflect::updated to reflect
instruction that caused::instruction that caused
caused the page::caused the page
fault is restarted::fault is restarted
restarted this approach::restarted this approach
entire memory image::entire memory image
performance is acceptable::performance is acceptable
paging to reduce::paging to reduce
process this arrangement::process this arrangement
arrangement can increase::arrangement can increase
allowing more processes::allowing more processes
least-the cpu utilization::least-the cpu utilization
memory requirements exceed::memory requirements exceed
exceed the total::exceed the total
total available physical::total available physical
memory such processes::memory such processes
run in virtual::run in virtual
memory if total::memory if total
total memory requirements::total memory requirements
exceed the capacity::exceed the capacity
capacity of physical::capacity of physical
pages from memory::pages from memory
memory to free::memory to free
pages various page-replacement::pages various page-replacement
replacement is easy::replacement is easy
easy to program::easy to program
program but suffers::program but suffers
suffers from belady::suffers from belady
anomaly optimal page::anomaly optimal page
page replacement requires::page replacement requires
replacement requires future::replacement requires future
future knowledge lru::future knowledge lru
knowledge lru replacement::knowledge lru replacement
approximation of optimal::approximation of optimal
implement most page-replacement::implement most page-replacement
approximations of lru::approximations of lru
replacement in addition::replacement in addition
policy is needed::policy is needed
suggesting local page::suggesting local page
local page replacement::local page replacement
suggesting global replacement::suggesting global replacement
replacement the working-set::replacement the working-set
working-set model assumes::working-set model assumes
assumes that processes::assumes that processes
execute in localities::execute in localities
localities the working::localities the working
allocated enough frames::allocated enough frames
current working set::current working set
providing enough frames::providing enough frames
process to avoid::process to avoid
thrashing may require::thrashing may require
require process swapping::require process swapping
swapping and schedulil::swapping and schedulil
systems provide features::systems provide features
features for memory::features for memory
memory mappil1g files::memory mappil1g files
treated as routine::treated as routine
routine memory access::routine memory access
access the win32::access the win32
win32 api implements::win32 api implements
api implements shared::api implements shared
implements shared memory::implements shared memory
memory through memory::memory through memory
mappil1g files kernel::mappil1g files kernel
files kernel processes::files kernel processes
processes typically req1.1ire::processes typically req1.1ire
typically req1.1ire memory::typically req1.1ire memory
allocated using pages::allocated using pages
contiguous the buddy::contiguous the buddy
memory to kernel::memory to kernel
processes in units::processes in units
results in fragmentation::results in fragmentation
fragmentation slab allocators::fragmentation slab allocators
slab allocators assign::slab allocators assign
allocators assign kernel::allocators assign kernel
assign kernel data::assign kernel data
kernel data structures::kernel data structures
structures to caches::structures to caches
pages with slab::pages with slab
addition to reqmnng::addition to reqmnng
solve the major::solve the major
problems of page::problems of page
replacement and frame::replacement and frame
paging systern requires::paging systern requires
segment where memory::segment where memory
system using figure::system using figure
draw a tree::draw a tree
requests are allocated::requests are allocated
bytes next modify::bytes next modify
modify the tree::modify the tree
releases of memory::releases of memory
memory perform coalescing::memory perform coalescing
virtual and physical::virtual and physical
addresses with 256-byte::addresses with 256-byte
pages the list::pages the list
equivalent physical addresses::equivalent physical addresses
addresses in hexadecimal::addresses in hexadecimal
hexadecimal all numbers::hexadecimal all numbers
algorithm should minimize::algorithm should minimize
achieve this minimization::achieve this minimization
minimization by distributing::minimization by distributing
heavily used pages::heavily used pages
frame a counter::frame a counter
counter a define::counter a define
define a page-replacement::define a page-replacement
idea specifically address::idea specifically address
address these problems::address these problems
counters increased iii::counters increased iii
page faults occur::page faults occur
four page frames::four page frames
optimal pagereplacement strategy::optimal pagereplacement strategy
string in part::string in part
cpu utilization paging::cpu utilization paging
utilization paging disk::utilization paging disk
improve cpu utilization::improve cpu utilization
cpu utilization explain::cpu utilization explain
explain your answers::explain your answers
answers a install::answers a install
install a faster::install a faster
cpu b install::cpu b install
install a bigger::install a bigger
bigger paging disk::bigger paging disk
disk c increase::disk c increase
multiprogramming d decrease::multiprogramming d decrease
install more main::install more main
n1.enl0ry f install::n1.enl0ry f install
faster hard disk::faster hard disk
disk or multiple::disk or multiple
controllers with multiple::controllers with multiple
multiple hard disks::multiple hard disks
disks g add::disks g add
algorithms h increase::algorithms h increase
demand-paged computer system::demand-paged computer system
fixed at four::fixed at four
four the system::four the system
measured to determine::measured to determine
disk the results::disk the results
multiprogramming be increased::multiprogramming be increased
increased to increase::increased to increase
increase the cpu::increase the cpu
helping a cpu::helping a cpu
percent ; disk::percent ; disk
percent b cpu::percent b cpu
percent c cpu::percent c cpu
access and transfer::access and transfer
table in main::table in main
microsecond per memory::microsecond per memory
page table takes::page table takes
takes two accesses::takes two accesses
accesses to improve::accesses to improve
added an associative::added an associative
memory that reduces::memory that reduces
associative memory assume::associative memory assume
effective memory access::effective memory access
view of thread::view of thread
states is ready::states is ready
ready and waiting::ready and waiting
i.e is waiting::i.e is waiting
assuming a thread::assuming a thread
explain your answer::explain your answer
thread change state::thread change state
thread state diagram::thread state diagram
diagram for exercise::diagram for exercise
generates a tlb::generates a tlb
reference is resolved::reference is resolved
discuss the hardware::discuss the hardware
hardware support required::hardware support required
page reference string::page reference string
faults would occur::faults would occur
first unique pages::first unique pages
pages will cost::pages will cost
cost one fault::cost one fault
fault each lru::fault each lru
lru replacement fifo::lru replacement fifo
replacement fifo replacement::replacement fifo replacement
fifo replacement optimal::fifo replacement optimal
replacement optimal replacement::replacement optimal replacement
system that allocates::system that allocates
scheme what modifications::scheme what modifications
memory system provide::memory system provide
provide this functionality::provide this functionality
frequently used page-replacement::frequently used page-replacement
page-replacement algorithm generates::page-replacement algorithm generates
algorithm generates fewer::algorithm generates fewer
generates fewer page::generates fewer page
fewer page faults::fewer page faults
recently used page-replacement::recently used page-replacement
algorithm also discuss::algorithm also discuss
circumstances the opposite::circumstances the opposite
circumstances do page::circumstances do page
faults occur describe::faults occur describe
describe the actions::describe the actions
machine provides instructions::machine provides instructions
access memory locations::access memory locations
indirect addressing scheme::indirect addressing scheme
scheme what sequence::scheme what sequence
faults is ilccurred::faults is ilccurred
indirect memory-load operation::indirect memory-load operation
per-process frame allocation::per-process frame allocation
frame allocation technique::frame allocation technique
support for user-level::support for user-level
user-level and kernellevel::user-level and kernellevel
threads the mapping::threads the mapping
multithreaded process consist::multithreaded process consist
feature what hardware::feature what hardware
support is required::support is required
required to implement::required to implement
implement this feature::implement this feature
paged memory system::paged memory system
system with pages::system with pages
pages of size::pages of size
process that manipulates::process that manipulates
manipulates the matrix::manipulates the matrix
resides in page::resides in page
faults are generated::faults are generated
replacement and assuming::replacement and assuming
assuming that page::assuming that page
system detect thrashing::system detect thrashing
eliminate this problem::eliminate this problem
monitoring the rate::monitoring the rate
pointer is moving::pointer is moving
fast b pointer::fast b pointer
algorithm for resident::algorithm for resident
recently used pages::recently used pages
pool is managed::pool is managed
recently used replacement::recently used replacement
replacement policy answer::replacement policy answer
free space generated::free space generated
newly requested page::newly requested page
resident page set::resident page set
free-france pool managed::free-france pool managed
managed to make::managed to make
number of resident::number of resident
pages is set::pages is set
object type assuming::object type assuming
cache per object::cache per object
done to address::done to address
address this scalability::address this scalability
memory the page::memory the page
table is held::table is held
held in registers::held in registers
registers it takes::registers it takes
milliseconds to service::milliseconds to service
page is modified::page is modified
replaced is modified::replaced is modified
maximum acceptable page-fault::maximum acceptable page-fault
acceptable page-fault rate::acceptable page-fault rate
segmentation is similar::segmentation is similar
similar to paging::similar to paging
variable-sized pages define::variable-sized pages define
define two segment-replacement::define two segment-replacement
two segment-replacement algorithms::two segment-replacement algorithms
segment-replacement algorithms based::segment-replacement algorithms based
based on fifo::based on fifo
fifo and lru::fifo and lru
lru pagereplacement schemes::lru pagereplacement schemes
pagereplacement schemes remember::pagereplacement schemes remember
leave enough consecutive::leave enough consecutive
segment consider strategies::segment consider strategies
strategies for systems::strategies for systems
systems where segments::systems where segments
relocated and strategies::relocated and strategies
techniques and structures::techniques and structures
structures are good::structures are good
answers a stack::answers a stack
stack b hashed::stack b hashed
hashed symbol table::hashed symbol table
table c sequential::table c sequential
search d binary::search d binary
search e pure::search e pure
code f vector::code f vector
operations a indirection::operations a indirection
requesting the page::requesting the page
page must block::page must block
block while waiting::block while waiting
brought from disk::brought from disk
disk into physical::disk into physical
physical memory assume::physical memory assume
exists a process::exists a process
mapping of user::mapping of user
threads to kernel::threads to kernel
user thread incurs::user thread incurs
fault while accessing::fault while accessing
accessing its stack::accessing its stack
user user threads::user user threads
user threads belonging::user threads belonging
process first starts::process first starts
first starts execution::first starts execution
characterize the page::characterize the page
rate c assume::rate c assume
free memory identify::free memory identify
identify some options::identify some options
options system designers::options system designers
designers could choose::designers could choose
handle this situation::handle this situation
referenced an address::referenced an address
address in virtual::address in virtual
virtual memory describe::virtual memory describe
describe a scenario::describe a scenario
scenario can occur::scenario can occur
page fault tlb::page fault tlb
fault tlb miss::fault tlb miss
miss and page::miss and page
fault tlb hit::fault tlb hit
hit and page::hit and page
bytes the computer::bytes the computer
bytes of physical::bytes of physical
memory the virtual::memory the virtual
implemented by paging::implemented by paging
bytes a user::bytes a user
user process generates::user process generates
generates the virtual::generates the virtual
physical location distinguish::physical location distinguish
distinguish between software::distinguish between software
software and hardware::software and hardware
list the costs::list the costs
costs to exceed::costs to exceed
exceed the benefits::exceed the benefits
illustrates the problem::illustrates the problem
problem with restarting::problem with restarting
restarting the move::restarting the move
move character instruction::move character instruction
regions are overlapping::regions are overlapping
define the working-set::define the working-set
effect of setting::effect of setting
number of active::number of active
processes currently executing::processes currently executing
two working sets::two working sets
representing code explain::representing code explain
examine each page::examine each page
discard that page::discard that page
lru or second-chance::lru or second-chance
write a program::write a program
program that implements::program that implements
implements the fifo::implements the fifo
lru page-replacement algorithms::lru page-replacement algorithms
page-replacement algorithms presented::page-replacement algorithms presented
generate a random::generate a random
random pagereference string::random pagereference string
string where page::string where page
page numbers range::page numbers range
apply the random::apply the random
random page-reference string::random page-reference string
record the number::record the number
page faults incurred::page faults incurred
implement the replacement::implement the replacement
frames can vary::frames can vary
assume that demand::assume that demand
integer sequence c11::integer sequence c11
problems the first::problems the first
first catalan numbers::first catalan numbers
formula generating c11::formula generating c11
design two programs::design two programs
programs that communicate::programs that communicate
communicate with shared::communicate with shared
api as outlined::api as outlined
outlined in section::outlined in section
9.7.2 the producer::9.7.2 the producer
process will generate::process will generate
generate the catalan::generate the catalan
sequence and write::sequence and write
read and output::read and output
output the sequence::output the sequence
sequence from shared::sequence from shared
passed an integer::passed an integer
numbers to produce::numbers to produce
command line means::command line means
means the producer::means the producer
generate the first::generate the first
first five catalan::first five catalan
paging was first::paging was first
first used iil::first used iil
iil the atlas::iil the atlas
manchester university muse::manchester university muse
university muse computer::university muse computer
early demand-paging system::early demand-paging system
system was multics::system was multics
researchers to observe::researchers to observe
fifo replacement strategy::fifo replacement strategy
strategy may produce::strategy may produce
anomaly that bears::anomaly that bears
demonstrated that stack::demonstrated that stack
subject to belady::subject to belady
anomaly the optimal::anomaly the optimal
optimal replacement algorithm::optimal replacement algorithm
algorithm was presented::algorithm was presented
optimal by mattson::optimal by mattson
allocation ; prieve::allocation ; prieve
prieve and fabry::prieve and fabry
presented an optimal::presented an optimal
algorithm for situations::algorithm for situations
allocation can vary::allocation can vary
vary the enl::vary the enl
enl lanced clock::enl lanced clock
lanced clock algorithm::lanced clock algorithm
algorithm was discussed::algorithm was discussed
discussed by carr::discussed by carr
carr and hennessy::carr and hennessy
model was developed::model was developed
developed by denning::developed by denning
model were presented::model were presented
presented by denning::presented by denning
scheme for monitoring::scheme for monitoring
monitoring the page-fault::monitoring the page-fault
rate was developed::rate was developed
developed by wulf::developed by wulf
applied this technique::applied this technique
burroughs bssoo computer::burroughs bssoo computer
bssoo computer system::bssoo computer system
computer system wilson::computer system wilson
presented several algoritluns::presented several algoritluns
algoritluns for dynamic::algoritluns for dynamic
memory allocation jolmstone::memory allocation jolmstone
jolmstone and wilson::jolmstone and wilson
described various memory-fragmentation::described various memory-fragmentation
issues buddy system::issues buddy system
buddy system memory::buddy system memory
system memory allocators::system memory allocators
allocators were described::allocators were described
described in knowlton::described in knowlton
peterson and norman::peterson and norman
discussed the slab::discussed the slab
bonwick and adams::bonwick and adams
extended the discussion::extended the discussion
discussion to multiple::discussion to multiple
processors other memory-fitting::processors other memory-fitting
found in stephenson::found in stephenson
survey of memory-allocation::survey of memory-allocation
found in wilson::found in wilson
solomon and russinovich::solomon and russinovich
russinovich and solomon::russinovich and solomon
described how windows::described how windows
windows implements virtual::windows implements virtual
virtual memory mcdougall::virtual memory mcdougall
mcdougall and mauro::mcdougall and mauro
discussed virtual memory::discussed virtual memory
memory in solaris::memory in solaris
solaris virtual memory::solaris virtual memory
techniques in linux::techniques in linux
linux and bsd::linux and bsd
bsd were described::bsd were described
described by bovet::described by bovet
ganapathy and schimmel::ganapathy and schimmel
discussed operating system::discussed operating system
operating system support::operating system support
page sizes ortiz::page sizes ortiz
described virtual memory::described virtual memory
real-time embedded operating::real-time embedded operating
embedded operating system::embedded operating system
operating system jacob::operating system jacob
implementations of virtual::implementations of virtual
architectures a companion::architectures a companion
described the hardware::described the hardware
implementation of virtual::implementation of virtual
including the ultrasparc::including the ultrasparc
small to accommodate::small to accommodate
data and programs::data and programs
system must provide::system must provide
provide secondary storage::provide secondary storage
storage to back::storage to back
back up main::back up main
main memory modern::main memory modern
memory modern computer::memory modern computer
systems use disks::systems use disks
primary on-line storage::primary on-line storage
on-line storage medium::on-line storage medium
medium for information::medium for information
mechanism for on-line::mechanism for on-line
disks a file::disks a file
collection of related::collection of related
related information defined::related information defined
creator the files::creator the files
files are mapped::files are mapped
system onto physical::system onto physical
physical devices files::physical devices files
organized into directories::organized into directories
directories for ease::directories for ease
aspects some devices::aspects some devices
transfer a character::transfer a character
randomly some transfer::randomly some transfer
read-only or read-write::read-only or read-write
read-write they vary::read-write they vary
greatly in speed::greatly in speed
slowest major component::slowest major component
provide a wide::provide a wide
range of functionality::range of functionality
functionality to applications::functionality to applications
control all aspects::control all aspects
devices one key::devices one key
provide the simplest::provide the simplest
system because devices::system because devices
cpu scheduling::cpu scheduling
share memory::share memory
manage memory::manage memory
memorymanagement algorithms::memorymanagement algorithms
primitive bare-machine::primitive bare-machine
bare-machine approach::bare-machine approach
segmentation strategies::segmentation strategies
disadvantages selection::disadvantages selection
memory-management method::memory-management method
specific system::specific system
system depends::system depends
hardware design::hardware design
algorithms require::algorithms require
require hardware::require hardware
hardware support::hardware support
recent designs::recent designs
operating system::operating system
detailed description::detailed description
organizing memory::organizing memory
memory hardware::memory hardware
memory-management techniques::memory-management techniques
including paging::including paging
intel pentium::intel pentium
pure segmentation::pure segmentation
modern computer::modern computer
computer system::computer system
system memory::system memory
memory consists::memory consists
large array::large array
cpu fetches::cpu fetches
fetches instructions::fetches instructions
program counter::program counter
additional loading::additional loading
specific memory::specific memory
memory addresses::memory addresses
typical instruction-execution::typical instruction-execution
instruction-execution cycle::instruction-execution cycle
first fetches::first fetches
mernory unit::mernory unit
unit sees::unit sees
instruction counter::instruction counter
literal addresses::literal addresses
ignore hozu::ignore hozu
program generates::program generates
memory address::memory address
addresses generated::addresses generated
running program::running program
managing memory::managing memory
coverage includes::coverage includes
basic hardware::basic hardware
hardware issues::hardware issues
symbolic memory::symbolic memory
actual physical::actual physical
physical addresses::physical addresses
linking code::linking code
shared libraries::shared libraries
hardware main::hardware main
main memory::main memory
registers built::registers built
access directly::access directly
machine instructions::machine instructions
disk addresses::disk addresses
direct-access storage::direct-access storage
storage devices::storage devices
cpu clock::cpu clock
decode instructions::decode instructions
perform simple::perform simple
simple operations::simple operations
register contents::register contents
clock tick::clock tick
memory bus::memory bus
bus completing::bus completing
memory access::memory access
data required::data required
memory accesses::memory accesses
fast memory::fast memory
process base::process base
limit process::limit process
limit register::limit register
register define::register define
logical address::logical address
address space::address space
memory buffer::memory buffer
speed differential::speed differential
relative speed::relative speed
physical memory::physical memory
correct operation::correct operation
user processes::user processes
protect user::protect user
separate memory::separate memory
memory space::memory space
legal addresses::legal addresses
base holds::base holds
smallest legal::smallest legal
legal physical::legal physical
base register::base register
register holds::register holds
legally access::legally access
cpu hardware::cpu hardware
hardware compare::hardware compare
address generated::address generated
user mode::user mode
program executing::program executing
access operating-system::access operating-system
operating-system memory::operating-system memory
memory results::memory results
fatal error::fatal error
scheme prevents::scheme prevents
user program::user program
data structures::data structures
limit registers::limit registers
special privileged::special privileged
privileged instruction::privileged instruction
privileged instructions::privileged instructions
kernel mode::kernel mode
system executes::system executes
prevents user::prevents user
user programs::user programs
unrestricted access::unrestricted access
load users::load users
system monitor-addressing::system monitor-addressing
monitor-addressing error::monitor-addressing error
error memory::error memory
memory figure::memory figure
hardware address::hardware address
address protection::address protection
modify parameters::modify parameters
system calls::system calls
address binding::address binding
program resides::program resides
binary executable::binary executable
executable file::executable file
process depending::process depending
memory management::memory management
execution form::execution form
normal procedure::normal procedure
input queue::input queue
accesses instructions::accesses instructions
process terminates::process terminates
user process::user process
computer starts::computer starts
first address::first address
approach affects::approach affects
optional-before bein.g::optional-before bein.g
steps addresses::steps addresses
source program::source program
symbolic addresses::symbolic addresses
relocatable addresses::relocatable addresses
lin.kage editor::lin.kage editor
turn bind::turn bind
absolute addresses::absolute addresses
generated compiler::generated compiler
compiler code::compiler code
starting location::starting location
ms-dos .com-format::ms-dos .com-format
.com-format programs::.com-format programs
final binding::final binding
starting address::starting address
user code::user code
changed value::changed value
value execution::value execution
memory segment::memory segment
special hardware::special hardware
general-purpose operating::general-purpose operating
operating systems::operating systems
major portion::major portion
multistep processing::multistep processing
logical versus::logical versus
physical address::physical address
load-time address-binding::load-time address-binding
address-binding methods::address-binding methods
methods generate::methods generate
identical logical::identical logical
execution-time addressbinding::execution-time addressbinding
addressbinding scheme::addressbinding scheme
scheme results::scheme results
virtual address::virtual address
logical addresses::logical addresses
execution-time address-binding::execution-time address-binding
address-binding scheme::address-binding scheme
address spaces::address spaces
spaces differ::spaces differ
run-time mapping::run-time mapping
hardware device::hardware device
dynamic relocation::dynamic relocation
relocation register::relocation register
register sections::register sections
simple mmu::simple mmu
mmu scheme::mmu scheme
base-register scheme::base-register scheme
scheme described::scheme described
address location::address location
ms-dos operating::ms-dos operating
system running::system running
relocation registers::relocation registers
running processes::running processes
real physical::real physical
indirect load::indirect load
program deals::program deals
memory-mapping hardware::memory-mapping hardware
hardware converts::hardware converts
execution-time binding::execution-time binding
final location::final location
referenced memory::referenced memory
base valuer::base valuer
user generates::user generates
process runs::process runs
separate physical::separate physical
proper memory::proper memory
dynamic loading::dynamic loading
entire program::entire program
memory-space utilization::memory-space utilization
relocatable load::relocatable load
load format::load format
main program::main program
calling routine::calling routine
relocatable linking::relocatable linking
linking loader::linking loader
desired routine::desired routine
address tables::address tables
loaded routine::loaded routine
unused routine::unused routine
large amounts::large amounts
occurring cases::occurring cases
error routines::error routines
total program::total program
program size::program size
special support::special support
method operating::method operating
providing library::providing library
library routines::library routines
dynamic linking::dynamic linking
libraries figure::libraries figure
systems support::systems support
system language::system language
language libraries::language libraries
object module::object module
binary program::binary program
program image::program image
system libraries::system libraries
language subroutine::language subroutine
subroutine libraries::subroutine libraries
language library::language library
routines referenced::routines referenced
executable image::executable image
requirement wastes::requirement wastes
disk space::disk space
libraryroutine reference::libraryroutine reference
small piece::small piece
memory-resident library::memory-resident library
library routine::library routine
needed routine::needed routine
program loads::program loads
stub replaces::stub replaces
code segment::code segment
library execute::library execute
library code::library code
library updates::library updates
bug fixes::bug fixes
gain access::gain access
incompatible versions::incompatible versions
version information::version information
version number::version number
library version::library version
programs linked::programs linked
older library::older library
multiple processes::multiple processes
continued execution::continued execution
multiprogramming environment::multiprogramming environment
round-robin cpu-scheduling::round-robin cpu-scheduling
cpu-scheduling algorithm::cpu-scheduling algorithm
quantum expires::quantum expires
memory manager::memory manager
cpu scheduler::cpu scheduler
process finishes::process finishes
swap processes::swap processes
reasonable amounts::reasonable amounts
swapping policy::swapping policy
priority-based scheduling::priority-based scheduling
scheduling algorithms::scheduling algorithms
higher-priority process::higher-priority process
process arrives::process arrives
lower-priority process::lower-priority process
backing store::backing store
store main::store main
occupied previously::occupied previously
swapping requires::swapping requires
fast disk::fast disk
accommodate copies::accommodate copies
memory images::memory images
direct access::direct access
system maintains::system maintains
scheduler decides::scheduler decides
dispatcher checks::dispatcher checks
free memory::free memory
memory region::memory region
dispatcher swaps::dispatcher swaps
desired process::desired process
reloads registers::reloads registers
transfers control::transfers control
selected process::selected process
swapping system::swapping system
fairly high::fairly high
standard hard::standard hard
hard disk::hard disk
transfer rate::transfer rate
actual transfer::actual transfer
memory takes::memory takes
seconds assuming::seconds assuming
average latency::average latency
total swap::total swap
milliseconds notice::milliseconds notice
major part::major part
total transfer::total transfer
memory swapped::memory swapped
resident operating::resident operating
system taking::system taking
maximum size::maximum size
seconds required::seconds required
reducing swap::reducing swap
system informed::system informed
memory requirements::memory requirements
dynamic memory::dynamic memory
issue system::issue system
request memory::request memory
release memory::release memory
changing memory::changing memory
completely idle::completely idle
user memory::user memory
swapped assume::swapped assume
out process::out process
main solutions::main solutions
operating-system buffers::operating-system buffers
buffers transfers::buffers transfers
process memory::process memory
head seeks::head seeks
secondary-storage structure::secondary-storage structure
swap space::swap space
file system::file system
standard swapping::standard swapping
reasonable memory-management::reasonable memory-management
memory-management solution::memory-management solution
solution modified::solution modified
modified versions::modified versions
unix swapping::unix swapping
threshold amount::threshold amount
memory swapping::memory swapping
reduced memory::reduced memory
advanced memory-management::advanced memory-management
memory-management methods-ran::memory-management methods-ran
methods-ran multiple::methods-ran multiple
large processes::large processes
modified version::modified version
microsoft windows::microsoft windows
supports concurrent::supports concurrent
concurrent execution::concurrent execution
insufficient main::insufficient main
full swapping::full swapping
swapped-out process::swapped-out process
process remains::process remains
user selects::user selects
run subsequent::run subsequent
subsequent versions::subsequent versions
microsoft operating::microsoft operating
advanced mmu::advanced mmu
mmu features::mmu features
virtual memory::virtual memory
main menlory::main menlory
section explains::section explains
common method::common method
contiguous memory::contiguous memory
memory allocation::memory allocation
low memory::low memory
high memory::high memory
major factor::major factor
factor affecting::factor affecting
interrupt vector::interrupt vector
system resides::system resides
queue waiting::queue waiting
single contiguous::single contiguous
contiguous section::contiguous section
memory mapping::memory mapping
discussing memory::discussing memory
register contaitls::register contaitls
smallest physical::smallest physical
mmu maps::mmu maps
mapped address::mapped address
scheduler selects::scheduler selects
dispatcher loads::dispatcher loads
correct values::correct values
context switch::context switch
running process::running process
relocation-register scheme::relocation-register scheme
change dynamically::change dynamically
buffer space::buffer space
device drivers::device drivers
device driver::device driver
operating-system service::operating-system service
transient operating-system::transient operating-system
operating-system code::operating-system code
program execution::program execution
simplest methods::simplest methods
allocating memory::allocating memory
divide memory::divide memory
addressing error::addressing error
error figure::error figure
supportfor relocation::supportfor relocation
free partition::free partition
method described::method described
fixed-partition scheme::fixed-partition scheme
batch environments::batch environments
ideas presented::ideas presented
time-sharing environment::time-sharing environment
table indicating::table indicating
large block::large block
system takes::system takes
allocated memory::allocated memory
allocated space::allocated space
block sizes::block sizes
scheduling algorithm::scheduling algorithm
algorithm memory::algorithm memory
processes untit::processes untit
smaller memory::smaller memory
memory blocks::memory blocks
sizes scattered::sizes scattered
system searches::system searches
arriving process::arriving process
adjacent holes::adjacent holes
larger hole::larger hole
processes waiting::processes waiting
recombined memory::recombined memory
waiting processes::waiting processes
free hole::free hole
first fit::first fit
fit allocate::fit allocate
first hole::first hole
previous first-fit::previous first-fit
first-fit search::first-fit search
search ended::search ended
smallest hole::smallest hole
entire list::entire list
strategy produces::strategy produces
smallest leftover::smallest leftover
leftover hole::leftover hole
hole worst::hole worst
worst fit::worst fit
largest hole::largest hole
largest leftover::largest leftover
smaller leftover::smaller leftover
best-fit approach::best-fit approach
approach simulations::approach simulations
storage utilization::storage utilization
generally faster::generally faster
best-fit strategies::best-fit strategies
allocation suffer::allocation suffer
external fragmentation::external fragmentation
fragmentation exists::fragmentation exists
total memory::total memory
large number::large number
small holes::small holes
fragmentation problem::fragmentation problem
worst case::worst case
small pieces::small pieces
big free::big free
free block::free block
best-fit strategy::best-fit strategy
problem depending::problem depending
total amount::total amount
memory storage::memory storage
average process::average process
process size::process size
major problem::major problem
statistical analysis::statistical analysis
allocated blocks::allocated blocks
memory fragmentation::memory fragmentation
multiple-partition allocation::multiple-partition allocation
allocation scheme::allocation scheme
bytes suppose::bytes suppose
process requests::process requests
requested block::requested block
general approach::general approach
fixed-sized blocks::fixed-sized blocks
allocate memory::allocate memory
units based::units based
block size::block size
memory allocated::memory allocated
requested memory::requested memory
internal memory::internal memory
memory contents::memory contents
free nlemory::free nlemory
block compaction::block compaction
relocation requires::relocation requires
base address::base address
simplest compaction::simplest compaction
compaction algorithm::compaction algorithm
holes move::holes move
large hole::large hole
external-fragmentation problem::external-fragmentation problem
complementary techniques::complementary techniques
techniques achieve::techniques achieve
memory-management scheme::memory-management scheme
noncontiguous paging::noncontiguous paging
paging avoids::paging avoids
considerable problem::considerable problem
fitting memory::fitting memory
memory chunks::memory chunks
varying sizes::varying sizes
backin.g store::backin.g store
memorymanagement schemes::memorymanagement schemes
problem arises::problem arises
code fragments::code fragments
data residing::data residing
fragmentation problems::fragmentation problems
problems discussed::problems discussed
earlier methods::earlier methods
address foooo::address foooo
table figure::table figure
paging hardware::paging hardware
64-bit microprocessors::64-bit microprocessors
basic method::basic method
implementing paging::implementing paging
paging involves::paging involves
involves breaking::involves breaking
logical memory::logical memory
memory frames::memory frames
san1.e size::san1.e size
page number::page number
page table::page table
page offset::page offset
memory unit::memory unit
paging model::paging model
page size::page size
frame size::frame size
computer architecture::computer architecture
size makes::size makes
addressing units::addressing units
address designate::address designate
low-order bits::low-order bits
bits designate::bits designate
table frame::table frame
frame number::frame number
number page::number page
table logical::table logical
32-byte memory::32-byte memory
4-byte pages::4-byte pages
paging scheme::paging scheme
free frame::free frame
internal fragmentation::internal fragmentation
fragmentation notice::fragmentation notice
page boundaries::page boundaries
last frame::last frame
frame allocated::frame allocated
completely full::completely full
entire frame::entire frame
one-half page::one-half page
consideration suggests::consideration suggests
small page::small page
page sizes::page sizes
page-table entry::page-table entry
pages increases::pages increases
amount data::amount data
data sets::data sets
larger today::larger today
larger page::larger page
support multiple::support multiple
multiple page::multiple page
data stored::data stored
pages researchers::pages researchers
developing support::developing support
variable on-the-fly::variable on-the-fly
on-the-fly page::on-the-fly page
32-bit entry::32-bit entry
physical page::physical page
page frames::page frames
4-byte entries::4-byte entries
process requires::process requires
first page::first page
loaded injo::loaded injo
allocated frames::allocated frames
important aspect::important aspect
clear separation::clear separation
program views::program views
views memory::views memory
single space::single space
address-translation hardware::address-translation hardware
system notice::system notice
access memory::access memory
addressing memory::addressing memory
table includes::table includes
process owns::process owns
allocation details::allocation details
physical memory-which::physical memory-which
memory-which frames::memory-which frames
total frames::total frames
data structure::data structure
frame table::frame table
page frame::page frame
free-frame list::free-frame list
new-process page::new-process page
free frames::free frames
processes operate::processes operate
user space::user space
user makes::user makes
system call::system call
address manually::address manually
cpu dispatcher::cpu dispatcher
hardware page::hardware page
cpu paging::cpu paging
storing page::storing page
page tables::page tables
register values::register values
process control::process control
control block::control block
user registers::user registers
correct hardware::correct hardware
page-table values::page-table values
stored user::stored user
user page::user page
hardware implementation::hardware implementation
simplest case::simplest case
high-speed logic::high-speed logic
paging-address translation::paging-address translation
translation efficient::translation efficient
paging map::paging map
major consideration::major consideration
dispatcher reloads::dispatcher reloads
registers instructions::registers instructions
page-table registers::page-table registers
memory map::memory map
address consists::address consists
fast registers::fast registers
contemporary computers::contemporary computers
table changing::table changing
changing page::changing page
tables requires::tables requires
memory location::memory location
access location::access location
first index::first index
ptbr offset::ptbr offset
number fori::number fori
task requires::task requires
actual address::actual address
desired place::desired place
standard solution::standard solution
fastlookup hardware::fastlookup hardware
hardware cache::hardware cache
high-speed memory::high-speed memory
tlb consists::tlb consists
associative memory::associative memory
keys simultaneously::keys simultaneously
value field::value field
page-table entries::page-table entries
percent longer::percent longer
unmapped memory::unmapped memory
memory reference::memory reference
replacement replacement::replacement replacement
replacement policies::replacement policies
policies range::policies range
tlb entries::tlb entries
kernel code::kernel code
tlbs store::tlbs store
tlb entry::tlb entry
address-space protection::address-space protection
tlb attempts::tlb attempts
virtual page::virtual page
page numbers::page numbers
process matches::process matches
tlb miss::tlb miss
providing address-space::providing address-space
processes simultaneously::processes simultaneously
separate asids::separate asids
executing process::executing process
wrong translation::wrong translation
translation information::translation information
tlb hit::tlb hit
hit tlb::hit tlb
miss page::miss page
virtual addresses::virtual addresses
invalid physical::invalid physical
addresses left::addresses left
previous process::previous process
80-percent hit::80-percent hit
hit ratio::hit ratio
desired page::desired page
mapped-memory access::mapped-memory access
access takes::access takes
first access::first access
desired byte::desired byte
effective access::effective access
40-percent slowdown::40-percent slowdown
98-percent hit::98-percent hit
increased hit::increased hit
hit rate::hit rate
rate produces::rate produces
percent slowdown::percent slowdown
protection memory::protection memory
memory protection::memory protection
paged environment::paged environment
protection bits::protection bits
correct frame::correct frame
frame nuncber::frame nuncber
read-only page::read-only page
hardware trap::hardware trap
memory-protection violation::memory-protection violation
finer level::finer level
create hardware::create hardware
execute-only protection::execute-only protection
separate protection::separate protection
illegal attempts::illegal attempts
additional bit::additional bit
space illegal::space illegal
illegal addresses::illegal addresses
valid -invalid::valid -invalid
-invalid bit::-invalid bit
system sets::system sets
disallow access::disallow access
page suppose::page suppose
14-bit address::14-bit address
situation shown::situation shown
valid-invalid bit::valid-invalid bit
flee operating::flee operating
invalid page::invalid page
page reference::page reference
program extends::program extends
illegal howeve1::illegal howeve1
address range::address range
small fraction::small fraction
valuable memory::valuable memory
systems provide::systems provide
provide hardware::provide hardware
table value::table value
valid range::valid range
process failure::process failure
error trap::error trap
shared pages::shared pages
common code::common code
text editor::text editor
editor consists::editor consists
data space::data space
editor-each page::editor-each page
large page::large page
data page::data page
page reentrant::page reentrant
reentrant code::reentrant code
non-self-modifying code::non-self-modifying code
data storage::data storage
processes wilt::processes wilt
table maps::table maps
physical copy::physical copy
data pages::data pages
total space::total space
space required::space required
significant savings::significant savings
shared -compilers::shared -compilers
window systems::window systems
run-time libraries::run-time libraries
database systems::database systems
read-only nature::read-only nature
shared code::shared code
shared memory::shared memory
paging environment::paging environment
interprocess corrununication::interprocess corrununication
systems implement::systems implement
implement shared::implement shared
pages organizing::pages organizing
numerous benefits::numerous benefits
physical pages::physical pages
common techniques::common techniques
hierarchical paging::hierarchical paging
computer systems::computer systems
large logical::large logical
excessively large::excessively large
32-bit logical::32-bit logical
entry consists::entry consists
simple solution::simple solution
smaller pieces::smaller pieces
two-level paging::two-level paging
paging algorithm::paging algorithm
table memory::table memory
two-level page-table::two-level page-table
page-table scheme::page-table scheme
number consisting::number consisting
offset consisting::offset consisting
10-bit page::10-bit page
outer page::outer page
address-translation method::address-translation method
address translation::address translation
translation works::translation works
vax architecture::vax architecture
architecture supports::architecture supports
32-bit machine::32-bit machine
equal sections::equal sections
section represents::section represents
high-order bits::high-order bits
bits represent::bits represent
logical page::logical page
page outer::page outer
two-level 32-bit::two-level 32-bit
32-bit paging::32-bit paging
paging architecture::paging architecture
leave partitions::leave partitions
partitions unused::partitions unused
section page::section page
section number::section number
one-level page::one-level page
vax process::vax process
vax pages::vax pages
user-process page::user-process page
64-bit logical::64-bit logical
table consists::table consists
iml.er page::iml.er page
large table::large table
32-bit processors::32-bit processors
added flexibility::added flexibility
three-level paging::three-level paging
scheme suppose::scheme suppose
standard-size pages::standard-size pages
64-bit address::64-bit address
2nd outer::2nd outer
sti11234 bytes::sti11234 bytes
four-level paging::four-level paging
second-level outer::second-level outer
64-bit ultrasparc::64-bit ultrasparc
prohibitive number::prohibitive number
accessesto translate::accessesto translate
64-bit architectures::64-bit architectures
hierarchical page::hierarchical page
considered inappropriate::considered inappropriate
hashed page::hashed page
common approach::common approach
handling address::handling address
hash value::hash value
hash table::hash table
linked list::linked list
handle collisions::handle collisions
element consists::element consists
mapped page::mapped page
algorithm works::algorithm works
first element::first element
subsequent entries::subsequent entries
table refers::table refers
single page::single page
single page-table::single page-table
multiple physical-page::multiple physical-page
physical-page frames::physical-page frames
frames clustered::frames clustered
clustered page::clustered page
memory references::memory references
inverted page::inverted page
virtual hash::virtual hash
table representation::table representation
processes reference::processes reference
reference pages::reference pages
address entry::address entry
value directly::value directly
real page::real page
page stored::page stored
real memory::real memory
table compare::table compare
standard page::standard page
operation inverted::operation inverted
address-space identifier::address-space identifier
spaces mapping::spaces mapping
memory storing::memory storing
identifier ensures::identifier ensures
frame examples::frame examples
tables include::tables include
simplified version::simplified version
i11verted page::i11verted page
system consists::system consists
process-id assumes::process-id assumes
memory page::memory page
address figure::address figure
reference occurs::reference occurs
memory subsystem::memory subsystem
illegal address::illegal address
address access::address access
scheme decreases::scheme decreases
memory needed::memory needed
lookups occur::lookups occur
few-page-table entries::few-page-table entries
table adds::table adds
reference requires::reference requires
memory reads-one::memory reads-one
hash-table entry::hash-table entry
performance improvement::performance improvement
difficulty implementing::difficulty implementing
memory shared::memory shared
multiple virtual::multiple virtual
process sharing::process sharing
standard method::standard method
page entry::page entry
simple technique::simple technique
mapped result::mapped result
page faults::page faults
linear array::linear array
users prefer::users prefer
view memory::view memory
variable-sized segments::variable-sized segments
data elements::data elements
math library::math library
n1.ain program::n1.ain program
elements occupy::elements occupy
variable length::variable length
subroutine symbol::subroutine symbol
symbol table::symbol table
program elements::program elements
first statement::first statement
seventh stack::seventh stack
stack frame::stack frame
frame entry::frame entry
user view::user view
user specifies::user specifies
single address::single address
segn lent::segn lent
lent number::lent number
constructs segments::constructs segments
segments reflecting::segments reflecting
input program::input program
separate segments::separate segments
global variables::global variables
segment table::segment table
segmentation hardware::segmentation hardware
memory libraries::memory libraries
assign.ed separate::assign.ed separate
segment numbers::segment numbers
two-dimensional address::two-dimensional address
one-dimensional sequence::one-dimensional sequence
twodimensional user-defined::twodimensional user-defined
user-defined addresses::user-defined addresses
one-dimensional physical::one-dimensional physical
segment base::segment base
segment limit::segment limit
segment resides::segment resides
limit specifies::limit specifies
segment number::segment number
logical addressing::logical addressing
addressing attempt::addressing attempt
base-limit register::base-limit register
register pairs::register pairs
segments numbered::segments numbered
separate entry::separate entry
beginning address::beginning address
subroutine segment::subroutine segment
segment1 symbol::segment1 symbol
program segment::program segment
limit base::limit base
bytes long::bytes long
architectures provide::architectures provide
pentium architecture::pentium architecture
complete description::complete description
memory-management structure::memory-management structure
major ideas::major ideas
linux address::linux address
pentium systems::pentium systems
cpu generates::cpu generates
segmentation unit::segmentation unit
unit produces::unit produces
linear address::linear address
paging unit::paging unit
turn generates::turn generates
paging units::paging units
units form::units form
memory-management unit::memory-management unit
pentium segmentation::pentium segmentation
maximum number::maximum number
logical-address space::logical-address space
first partition::first partition
partition consists::partition consists
processes information::processes information
gdt consists::gdt consists
8-byte segment::8-byte segment
segment descriptor::segment descriptor
detailed information::detailed information
base location::base location
16-bit number::16-bit number
32-bit number::32-bit number
segment registers::segment registers
microprogram registers::microprogram registers
cache lets::cache lets
pentium avoid::pentium avoid
segment register::segment register
register points::register points
limit information::limit information
address validity::address validity
memory fault::memory fault
32-bit linear::32-bit linear
unit turns::unit turns
pentium paging::pentium paging
paging schence::paging schence
address-translation scheme::address-translation scheme
scheme shown::scheme shown
pentium address::pentium address
address offset::address offset
segmentation detail::segmentation detail
bits reference::bits reference
outernlost page::outernlost page
pentium terms::pentium terms
page directory::page directory
cr3 register::cr3 register
current process::current process
directory entry::directory entry
entry points::entry points
page pointed::page pointed
size flag::size flag
which-if setindicates::which-if setindicates
directory points::directory points
directory page::directory page
page figure::page figure
pentium page::pentium page
invalid bit::invalid bit
disk location::disk location
linux operating::linux operating
limited support::limited support
kernel data::kernel data
user data::user data
task-state segment::task-state segment
default ldt::default ldt
ldt segment::ldt segment
processes running::processes running
segment descriptors::segment descriptors
global descriptor::global descriptor
descriptor table::descriptor table
hardware context::hardware context
context switches::context switches
segment selector::segment selector
selector includes::selector includes
2-bit field::2-bit field
hardware platforms::hardware platforms
threelevel paging::threelevel paging
paging strategy::paging strategy
global directory::global directory
directory middle::directory middle
middle directory::middle directory
address varies::address varies
lglobal directory::lglobal directory
directory cr3::directory cr3
cr3 __,.c__::cr3 __,.c__
__,.c__ ___::__,.c__ ___
___ __l::___ __l
__l register::__l register
directory figure::directory figure
linux offset::linux offset
offset page::offset page
three-level model::three-level model
-the cr3::-the cr3
tss segments::tss segments
tasks involved::tasks involved
switch memory-management::switch memory-management
memory-management algorithms::memory-management algorithms
systems range::systems range
simple single-user::simple single-user
single-user system::single-user system
system approach::system approach
paged segmentation::paged segmentation
important determinant::important determinant
hardware provided::hardware provided
contiguous allocation::contiguous allocation
memory-management strategies::memory-management strategies
simple base::simple base
register pair::register pair
multiple-partition schemes::multiple-partition schemes
mapping tables::mapping tables
address map::address map
map performance::map performance
memory-management algorithm::memory-management algorithm
address increases::address increases
simple systems::simple systems
logical address-operations::logical address-operations
fast paging::fast paging
mapping table::mapping table
performance degradation::performance degradation
acceptable level::acceptable level
level fragmentation::level fragmentation
multiprogrammed system::multiprogrammed system
higher level::higher level
multiprogramming level::multiprogramming level
reduce memory::reduce memory
memory waste::memory waste
fragmentation systems::fragmentation systems
fixed-sized allocation::fixed-sized allocation
allocation units::allocation units
single-partition scheme::single-partition scheme
variable-sized allocation::variable-sized allocation
multiple-partition scheme::multiple-partition scheme
fragmentation relocation::fragmentation relocation
compaction compaction::compaction compaction
compaction involves::compaction involves
consideration requires::consideration requires
compact storage::compact storage
storage swapping::storage swapping
swapping swapping::swapping swapping
intervals determined::intervals determined
cpu-scheduling policies::cpu-scheduling policies
share code::share code
users sharing::users sharing
small packets::small packets
shared sharing::shared sharing
limited amount::limited amount
shared programs::shared programs
read -only::read -only
simple run-time::simple run-time
run-time checks::run-time checks
common programming::common programming
programming errors::programming errors
memory organization::memory organization
organization schemes::organization schemes
pure paging::pure paging
execution allocation::execution allocation
heap segments::heap segments
intel address-translation::intel address-translation
complicated memory::complicated memory
memory translation::memory translation
address-translation system::address-translation system
reentrant module::reentrant module
segmented pagil::segmented pagil
table scheme::table scheme
large address::large address
paging system::paging system
table stored::table stored
reference takes::reference takes
paged memory::paged memory
add tlbs::add tlbs
page-table references::page-table references
effective memory::effective memory
tlbs takes::tlbs takes
compare paging::compare paging
memory required::memory required
translation structures::translation structures
instruction fetch::instruction fetch
data fetch::data fetch
baselimit register::baselimit register
instruction base-limit::instruction base-limit
users discuss::users discuss
generating binaries::generating binaries
object code::object code
individual modules::individual modules
linkage editor::linkage editor
combine multiple::combine multiple
multiple object::multiple object
object modules::object modules
single program::single program
program bilcary::program bilcary
editor change::editor change
memory-binding tasks::memory-binding tasks
memory operations::memory operations
program executes::program executes
memory-load operation::memory-load operation
memory partitions::memory partitions
worst-fit algorithms::worst-fit algorithms
algorithms place::algorithms place
place processes::place processes
algorithm makes::algorithm makes
system supports::system supports
conventional single-level::conventional single-level
single-level page::single-level page
address references::address references
decimal numbers::decimal numbers
program binaries::program binaries
data segment::data segment
program variables::program variables
program starts::program starts
lower virtual::lower virtual
base length::base length
sharing segments::sharing segments
linked segmentation::linked segmentation
segmentation system::segmentation system
static linking::static linking
32-bit virtual::32-bit virtual
size write::size write
command line::command line
data type::data type
unsigned data::unsigned data
data types::data types
dynamic storage::dynamic storage
storage allocation::storage allocation
simulation results::simulation results
fit knuth::fit knuth
50-percent rule::50-percent rule
atlas system::atlas system
storage manager::storage manager
hardware aspects::hardware aspects
mmus talluri::mmus talluri
discusses page::discusses page
spaces alternative::spaces alternative
alternative approaches::alternative approaches
enforcing memory::enforcing memory
tlb fang::tlb fang
evaluate support::evaluate support
large pages::large pages
pages tanenbaum::pages tanenbaum
discusses intel80386::discusses intel80386
intel80386 paging::intel80386 paging
paging memory::paging memory
ultrasparcare described::ultrasparcare described
lim1x systems::lim1x systems
entire process::entire process
major advantage::major advantage
memory abstracts::memory abstracts
uniform array::uniform array
technique frees::technique frees
frees programmers::frees programmers
memory-storage limitations::memory-storage limitations
share files::share files
efficient mechanism::efficient mechanism
process creation::process creation
decrease performance::decrease performance
demand paging::demand paging
memory system::memory system
page-replacement algorithms::page-replacement algorithms
working-set model::working-set model
algorithms outlined::algorithms outlined
basic requirement::basic requirement
first approach::first approach
entire logical::entire logical
special precautions::special precautions
extra work::extra work
real programs::real programs
programs shows::programs shows
unusual error::unusual error
error conditions::error conditions
errors seldom::errors seldom
executed arrays,lists::executed arrays,lists
assembler symbol::assembler symbol
average program::average program
u.s government::u.s government
government computers::government computers
write programs::write programs
large virtual::large virtual
programming task::programming task
task page::task page
memory memory::memory memory
diagram showing::diagram showing
cpu utilization::cpu utilization
swap user::swap user
run faster::run faster
user involves::user involves
smaller physical::smaller physical
memory makes::memory makes
process refers::process refers
process begins::process begins
logical address-say::logical address-say
memorymanagement unit::memorymanagement unit
logical pages::logical pages
memory note::memory note
successive function::successive function
function calls::function calls
large blank::large blank
blank space::blank space
stack grows::stack grows
include holes::include holes
sparse address::sparse address
segments grow::segments grow
link libraries::link libraries
shared objects::shared objects
page sharing::page sharing
shared object::shared object
process considers::process considers
actual pages::actual pages
libraries reside::libraries reside
memory enables::memory enables
enables processes::enables processes
memory recall::memory recall
process processes::process processes
system calt::system calt
these-and other-benefits::these-and other-benefits
paging shared::paging shared
pages shared::pages shared
shared library::shared library
library figure::library figure
executable program::executable program
memory suppose::memory suppose
select loading::select loading
executable code::executable code
alternative strategy::alternative strategy
load pages::load pages
memory systems::memory systems
demand-paged virtual::demand-paged virtual
demand-paging system::demand-paging system
processes reside::processes reside
secondary memory::secondary memory
lazy swapper::lazy swapper
large contiguous::large contiguous
contiguous address::contiguous address
term swapper::term swapper
technically incorrect::technically incorrect
swapper manipulates::swapper manipulates
entire processes::entire processes
individual pages::individual pages
paging program::paging program
memory swap::memory swap
contiguous disk::contiguous disk
basic concepts::basic concepts
pager guesses::pager guesses
pager brings::pager brings
memory pages::memory pages
bit scheme::bit scheme
page invalid::page invalid
process executes::process executes
accesses pages::accesses pages
execution proceeds::execution proceeds
valid-invalid frame::valid-invalid frame
frame bit::frame bit
memory dod::memory dod
odd figure::odd figure
memory operating::memory operating
system reference::system reference
store trap::store trap
trap restart::trap restart
restart instruction::restart instruction
instruction page::instruction page
table reset::table reset
reset page::reset page
missing page::missing page
page fault::page fault
page marked::page marked
internal table::internal table
invalid memory::invalid memory
disk operation::disk operation
allocated frame::allocated frame
disk read::disk read
extreme case::extreme case
instruction pointer::instruction pointer
non-memory-resident page::non-memory-resident page
process continues::process continues
instruction execution::instruction execution
causing multiple::causing multiple
unacceptable system::unacceptable system
system performance::system performance
processes shows::processes shows
programs tend::programs tend
reasonable performance::reasonable performance
support demand::support demand
entry invalid::entry invalid
special value::special value
memory holds::memory holds
high-speed disk::high-speed disk
swap device::swap device
swap-space allocation::swap-space allocation
crucial requirement::crucial requirement
condition code::condition code
interrupted process::interrupted process
fault occurs::fault occurs
three-address instruction::three-address instruction
repeated work::repeated work
complete instruction::complete instruction
major difficulty::major difficulty
difficulty arises::difficulty arises
ibm system::ibm system
move character::move character
page boundary::page boundary
partially done::partially done
destination blocks::destination blocks
blocks overlap::blocks overlap
source block::source block
microcode computes::microcode computes
relevant pages::relevant pages
temporary registers::temporary registers
overwritten locations::overwritten locations
trap occurs::trap occurs
action restores::action restores
restores memory::restores memory
architectural problem::architectural problem
problem resulting::problem resulting
adding paging::adding paging
existing architecture::existing architecture
difficulties involved::difficulties involved
involved paging::involved paging
non-demand-paging environment::non-demand-paging environment
fault represents::fault represents
fatal errm::fatal errm
fault means::fault means
additional page::additional page
process restarted::process restarted
paging demand::paging demand
demand-paged memory::demand-paged memory
relevant page::relevant page
desired word::desired word
nrr access::nrr- access
system save::system save
process state::process state
fault check::fault check
disk issue::disk issue
read request::read request
device seek::device seek
disk correct::disk correct
memory wait::memory wait
interrupted instruction::interrupted instruction
maintain cpu::maintain cpu
page-fault service::page-fault service
service routine::service routine
major components::major components
page-fault interrupt::page-fault interrupt
interrupt read::interrupt read
page restart::page restart
careful coding::careful coding
typical hard::typical hard
total paging::total paging
including hardware::including hardware
paging device::paging device
average page-fault::average page-fault
reasonable level::reasonable level
page-fault rate::page-fault rate
slowing process::slowing process
process execution::process execution
execution dramatically::execution dramatically
additional aspect::additional aspect
space disk::space disk
larger blocks::larger blocks
file lookups::file lookups
indirect allocation::indirect allocation
allocation methods::allocation methods
paging throughput::paging throughput
entire file::entire file
file image::file image
process startup::process startup
performing demand::performing demand
demand pages::demand pages
needed pages::needed pages
subsequent paging::subsequent paging
systems attempt::systems attempt
binary files::binary files
files demand::files demand
page replacement::page replacement
store howeve1::store howeve1
pages include::pages include
method appears::method appears
good compromise::good compromise
including solaris::including solaris
bsd unix::bsd unix
first instruction::first instruction
rapid process::rapid process
created process::created process
physical figure::physical figure
modifies page::modifies page
call creates::call creates
child process::child process
pages belonging::pages belonging
child processes::child processes
processes invoke::processes invoke
copy-on-write pages::copy-on-write pages
process writes::process writes
shared page::shared page
process attempts::process attempts
pages set::pages set
copied page::copied page
page belonging::page belonging
parent process::parent process
copy-on-write technique::copy-on-write technique
unmodified pages::unmodified pages
processes note::processes note
child copy-on-write::child copy-on-write
common technique::common technique
including windows::including windows
copyon write::copyon- write
free page::free page
free pages::free pages
managed operating::managed operating
zero-fill-on-demand pages::zero-fill-on-demand pages
previous contents::previous contents
variation ofthe::variation ofthe
ofthe fork::ofthe fork
system call-vfork::system call-vfork
altered pages::altered pages
process calls::process calls
calls exec::calls exec
pages takes::pages takes
takes place::takes place
efficient method::efficient method
implement unix::implement unix
unix command-line::unix command-line
command-line shell::command-line shell
shell interfaces::shell interfaces
earlier discussion::earlier discussion
first referenced::first referenced
ten pages::ten pages
paging saves::paging saves
forty frames::forty frames
ten frames::ten frames
higher cpu::higher cpu
data set::data set
sixty frames::sixty frames
holding program::holding program
program pages::program pages
pages buffers::pages buffers
considerable amount::considerable amount
memory-placement algorithms::memory-placement algorithms
algorithms deciding::algorithms deciding
significant challenge::significant challenge
systems allocate::systems allocate
fixed percentage::fixed percentage
valid-invalid pc::valid-invalid pc--
replacement over-allocation::replacement over-allocation
memory manifests::memory manifests
system determines::system determines
throughput users::throughput users
paged system-paging::paged system-paging
common solution::common solution
basic page::basic page
replacement page::replacement page
replacement takes::replacement takes
freed frame::freed frame
process faulted::process faulted
include page::include page
disk find::disk find
page-replacement algorithnc::page-replacement algorithnc
victim frame::victim frame
frame tables::frame tables
tables restart::tables restart
process notice::process notice
page transfers::page transfers
modify bit::modify bit
read-only pages::read-only pages
binary code::binary code
modified frame::modified frame
enormous virtual::enormous virtual
user addresses::user addresses
longer constrained::longer constrained
twenty pages::twenty pages
replacement algorithm::replacement algorithm
major problems::major problems
implement demand::implement demand
demand develop::demand develop
replaced designing::replaced designing
important task::important task
slight improvements::slight improvements
demand-paging methods::demand-paging methods
methods yield::methods yield
large gains::large gains
replacement scheme::replacement scheme
lowest page-fault::lowest page-fault
generate reference::generate reference
reference strings::reference strings
random-number generator::random-number generator
choice produces::choice produces
entire address::entire address
fault page::fault page
first reference::first reference
address sequence::address sequence
reference string::reference string
frames figure::frames figure
versus number::versus number
page-replacement algorithm::page-replacement algorithm
faults decreases::faults decreases
reference strillg::reference strillg
strillg considered::strillg considered
faultsone fault::faultsone fault
eleven faults::eleven faults
frames increases::frames increases
faults drops::faults drops
minimal level::minimal level
memory increases::memory increases
fifo page::fifo page
simplest page-replacement::simplest page-replacement
fifo replacement::fifo replacement
algorithm associates::algorithm associates
oldest page::oldest page
chosen notice::chosen notice
fifo queue::fifo queue
initially empty::initially empty
empty frames::empty frames
replaces page::replaces page
fifteen faults::fifteen faults
faults altogether::faults altogether
fifo page-replacement::fifo page-replacement
page replaced::page replaced
initialization module::initialization module
longer needed::longer needed
works correctly::works correctly
active page::active page
bad replacement::bad replacement
replacement choice::replacement choice
choice increases::choice increases
slows process::slows process
incorrect execution::incorrect execution
string versus::string versus
frames notice::frames notice
unexpected result::unexpected result
early research::early research
investigators noticed::investigators noticed
optimal page::optimal page
longest period::longest period
page-fault curve::page-fault curve
algorithm guarantees::algorithm guarantees
pagefault rate::pagefault rate
fixed number::fixed number
sample reference::sample reference
optimal page-replacement::optimal page-replacement
optimal replacement::optimal replacement
fifo algorithm::fifo algorithm
irt fact::irt fact
future knowledge::future knowledge
similar situation::similar situation
sjf cpu-schedulin.g::sjf cpu-schedulin.g
cpu-schedulin.g algorithm::cpu-schedulin.g algorithm
optimal algorithm::optimal algorithm
comparison studies::comparison studies
algorithm reference::algorithm reference
lru page::lru page
key distinction::key distinction
opt algorithms::opt algorithms
backward versus::backward versus
versus forward::versus forward
opt algorithm::opt algorithm
recent past::recent past
lru replacement::lru replacement
replacement associates::replacement associates
lru chooses::lru chooses
lru algorithm::lru algorithm
applying lru::applying lru
algorithm produces::algorithm produces
produces twelve::produces twelve
twelve faults::twelve faults
faults notice::faults notice
replacement sees::replacement sees
algorithm replaces::algorithm replaces
lru policy::lru policy
implement lru::implement lru
lru page-replacement::lru page-replacement
substantial hardware::substantial hardware
hardware assistance::hardware assistance
frames defined::frames defined
time-of-use field::time-of-use field
logical clock::logical clock
clock register::clock register
ti1ne-of-use field::ti1ne-of-use field
last reference::last reference
scheme requires::scheme requires
considered stack::considered stack
implementing lru::implementing lru
head pointer::head pointer
tail pointer::tail pointer
pointer removing::pointer removing
pointer points::pointer points
microcode implementations::microcode implementations
stack algorithm::stack algorithm
referenced pages::referenced pages
standard tlb::standard tlb
tlb registers::tlb registers
recent page::recent page
page references::page references
clock fields::clock fields
lru-approximation page::lru-approximation page
sufficient hardware::sufficient hardware
true lru::true lru
pagereplacement algorithms::pagereplacement algorithms
reference bit::reference bit
reference bits::reference bits
page referenced::page referenced
approximate lru::approximate lru
additional-reference-bits algorithm::additional-reference-bits algorithm
additional ordering::additional ordering
ordering information::ordering information
regular intervals::regular intervals
8-bit byte::8-bit byte
timer interrupt::timer interrupt
interrupt transfers::interrupt transfers
system shifts::system shifts
high-order bit::high-order bit
low-order bit::low-order bit
8-bit shift::8-bit shift
shift registers::shift registers
shift register::shift register
register value::register value
history register::history register
8-bit bytes::8-bit bytes
unsigned integers::unsigned integers
lowest number::lowest number
replaced notice::replaced notice
smallest value::smallest value
fifo method::fifo method
history included::history included
second-chance algorithm::second-chance algorithm
basic algorithm::basic algorithm
second-chance replacement::second-chance replacement
pages reference::pages reference
pages bits::pages bits
bits bits::bits bits
circular queue::circular queue
bit set::bit set
clock algorithm::clock algorithm
pointer advances::pointer advances
victim page::victim page
position notice::position notice
pointer cycles::pointer cycles
replacement second-chance::replacement second-chance
replacement degenerates::replacement degenerates
ordered pair::ordered pair
-best page::-best page
page belongs::page belongs
page encountered::page encountered
lowest nonempty::lowest nonempty
nonempty class::nonempty class
class notice::class notice
major difference::major difference
simpler clock::simpler clock
give preference::give preference
counting-based page::counting-based page
algorithm requires::algorithm requires
smallest count::smallest count
large reference::large reference
reference count::reference count
initial phase::initial phase
large count::large count
average usage::average usage
usage count::usage count
lfu replacement::lfu replacement
approxinlate opt::approxinlate opt
opt replacement::opt replacement
page-buffering algorithms::page-buffering algorithms
specific page-replacement::specific page-replacement
written out::written out
free-frame pool::free-frame pool
modified pages::modified pages
modified page::modified page
scheme increases::scheme increases
frame contents::frame contents
free-frame buffer::free-frame buffer
early versions::early versions
bit correctly::bit correctly
unix system::unix system
pagereplacement algorithm::pagereplacement algorithm
penalty incurred::penalty incurred
wrong victim::wrong victim
applications accessing::applications accessing
accessing data::accessing data
memory perform::memory perform
perform worse::perform worse
system provided::system provided
buffering applications::buffering applications
implementing algorithms::implementing algorithms
data warehouses::data warehouses
frequently perform::frequently perform
massive sequential::massive sequential
sequential disk::sequential disk
disk reads::disk reads
older pages::older pages
sequential reads::sequential reads
systems give::systems give
special programs::special programs
disk partition::disk partition
large sequential::large sequential
sequential array::sequential array
logical blocks::logical blocks
file-system data::file-system data
raw disk::raw disk
termed raw::termed raw
filesystem services::filesystem services
file locking::file locking
space allocation::space allocation
file names::file names
directories note::directories note
special-purpose storage::special-purpose storage
storage services::storage services
raw partition::raw partition
applications perform::applications perform
regular file-system::regular file-system
file-system services::file-system services
fixed amount::fixed amount
memory composed::memory composed
pure demand::pure demand
process started::process started
started execution::started execution
in-memory pages::in-memory pages
process terminated::process terminated
simple strategy::simple strategy
system allocate::system allocate
table space::table space
support user::support user
user paging::user paging
frames reserved::frames reserved
page swap::page swap
taking place::taking place
basic strategy::basic strategy
minimum number::minimum number
total number::total number
frames involves::frames involves
involves performance::involves performance
frames allocated::frames allocated
process decreases::process decreases
rate increases::rate increases
executing ilcstruction::executing ilcstruction
single ilcstruction::single ilcstruction
memory-reference instructions::memory-reference instructions
mernory reference::mernory reference
one-level indirect::one-level indirect
indirect addressing::indirect addressing
load instruction::load instruction
indirect reference::indirect reference
paging requires::paging requires
move instruction::move instruction
pdp-11 includes::pdp-11 includes
addressing modes::addressing modes
indirect references::indirect references
mvc instruction::mvc instruction
storage location::storage location
case occurs::case occurs
execute instruction::execute instruction
worst-case scenario::worst-case scenario
scenario occurs::scenario occurs
computer architectures::computer architectures
multiple levels::multiple levels
16-bit word::16-bit word
15-bit address::15-bit address
1-bit indirect::1-bit indirect
indirect indicator::indirect indicator
simple load::simple load
indirect address::indirect address
entire virtual::entire virtual
first indirection::first indirection
indirection occurs::indirection occurs
successive irtdirection::successive irtdirection
excessive indirection::excessive indirection
limitation reduces::limitation reduces
significant choice::significant choice
frame allocation::frame allocation
allocation algorithms::allocation algorithms
equal share::equal share
leftover frames::leftover frames
buffer pool::buffer pool
differing amounts::differing amounts
small student::small student
student process::student process
interactive database::interactive database
ncinimum number::ncinimum number
frames required::frames required
tl1e instruction::tl1e instruction
instruction set::instruction set
proportional allocation::proportional allocation
processes share::processes share
level decreases::level decreases
departed process::departed process
remaining processes::remaining processes
processes notice::processes notice
high-priority process::high-priority process
low-priority process::low-priority process
low-priority processes::low-priority processes
frames depends::frames depends
relative sizes::relative sizes
global versus::global versus
local allocation::local allocation
important factor::important factor
processes competing::processes competing
broad categories::broad categories
local global::local global
global replacement::global replacement
replacement frame::replacement frame
local replacement::local replacement
replacement requires::replacement requires
process select::process select
high-priority processes::high-priority processes
select frames::select frames
replacement strategy::replacement strategy
process depends::process depends
paging behavior::paging behavior
external circuntstances::external circuntstances
generally results::generally results
greater system::greater system
system throughput::system throughput
non-uniform memory::non-uniform memory
multiple cpus::multiple cpus
memory faster::memory faster
performance differences::performance differences
system boards::system boards
system busses::system busses
high-speed network::high-speed network
network connections::network connections
system systems::system systems
access times::access times
motherboard managing::motherboard managing
affect performance::affect performance
numa systems::numa systems
treat memory::treat memory
modify memory::modify memory
scheduling system::scheduling system
minimum latency::minimum latency
system board::system board
scheduler track::scheduler track
last cpu::last cpu
process ran::process ran
previous cpu::previous cpu
memory-management system::memory-management system
allocate frames::allocate frames
process close::process close
improved cache::improved cache
cache hits::cache hits
decreased memory::decreased memory
running threads::running threads
threads scheduled::threads scheduled
case solaris::case solaris
solaris solves::solaris solves
lgroup gathers::lgroup gathers
close cpus::close cpus
lgroups based::lgroups based
groups solaris::groups solaris
nearby lgroups::nearby lgroups
resources needed::resources needed
memory latency::memory latency
hit rates::hit rates
process falls::process falls
number required::number required
remaining pages::remaining pages
provision introduces::provision introduces
swap-out level::swap-out level
intermediate cpu::intermediate cpu
support pages::support pages
quickly page-fault::quickly page-fault
replacing pages::replacing pages
high paging::high paging
paging activity::paging activity
thrashing thrashing::thrashing thrashing
thrashing results::thrashing results
severe performance::severe performance
performance problems::performance problems
actual behavior::actual behavior
early paging::early paging
paging systems::paging systems
system monitors::system monitors
monitors cpu::monitors cpu
global page-replacement::global page-replacement
replaces pages::replaces pages
process enters::process enters
taking frames::taking frames
faulting processes::faulting processes
pagin.g device::pagin.g device
swap pages::swap pages
ready queue::ready queue
queue empties::queue empties
processes wait::processes wait
utilization decreases::utilization decreases
scheduler sees::scheduler sees
decreasing cpu::decreasing cpu
longer queue::longer queue
utilization drops::utilization drops
throughput plunges::throughput plunges
increases tremendously::increases tremendously
effective m.emory-access::effective m.emory-access
multiprogramming increases::multiprogramming increases
thrashing sets::thrashing sets
drops sharply::drops sharply
increase cpu::increase cpu
process starts::process starts
starts thrashing::starts thrashing
multiprogramming figure::multiprogramming figure
average service::average service
longer average::longer average
average queue::average queue
prevent thtashing::prevent thtashing
working-set strategy::working-set strategy
approach defines::approach defines
locality model::locality model
model states::model states
function call::function call
local variables::local variables
process leaves::process leaves
program structure::program structure
basic memory::basic memory
reference structure::reference structure
structure note::structure note
unstated principle::unstated principle
caching discussions::caching discussions
useless suppose::useless suppose
current locality::current locality
memory-reference pattern::memory-reference pattern
working set::working set
set depends::set depends
entire locality::entire locality
reference table::reference table
pages touched::pages touched
important property::important property
working-set size::working-set size
total demand::total demand
extra frames::extra frames
working-set sizes::working-set sizes
sizes increases::sizes increases
system selects::system selects
suspended process::suspended process
strategy prevents::strategy prevents
prevents thrashing::prevents thrashing
keeping track::keeping track
working-set window::working-set window
moving window::moving window
reference appears::reference appears
oldest reference::oldest reference
reference drops::reference drops
fixed-interval timer::fixed-interval timer
reference-bit values::reference-bit values
current reference::current reference
in-memory bits::in-memory bits
set note::set note
reference occurred::reference occurred
history bits::history bits
frequent interrupts::frequent interrupts
correspondingly higher::correspondingly higher
page-fault frequency::page-fault frequency
control thrashilcg::control thrashilcg
direct approach::direct approach
specific problem::specific problem
prevent thrashilcg::prevent thrashilcg
thrashilcg thrashing::thrashilcg thrashing
high page-fault::high page-fault
lower bounds::lower bounds
actual page-fault::actual page-fault
rate exceeds::rate exceeds
upper limit::upper limit
rate falls::rate falls
lower limit::lower limit
prevent thrashing::prevent thrashing
rate ilccreases::rate ilccreases
freed frames::freed frames
page-fault rates::page-fault rates
sequential read::sequential read
standard system::standard system
file access::file access
access requires::access requires
disk access::disk access
memory techniques::memory techniques
techniques discussed::techniques discussed
routine memory::routine memory
significant performance::significant performance
performance increases::performance increases
working sets::working sets
page faultrates::page faultrates
set ofa::set ofa
ofa process::ofa process
code sections::code sections
sections move::sections move
sufficient memory::sufficient memory
tbe page-fault::tbe page-fault
general behavior::general behavior
fault rate::fault rate
rate working::rate working
rate occurs::rate occurs
process moves::process moves
rate rises::rate rises
lower rate::lower rate
span oftime::span oftime
thenext peak::thenext peak
peak represents::peak represents
basic mechanism::basic mechanism
mechanism memory::mechanism memory
disk block::disk block
initial access::initial access
file proceeds::file proceeds
ordinary demand::ordinary demand
page-sized portion::page-sized portion
page-sized chunk::page-sized chunk
subsequent reads::subsequent reads
simplifying file::simplifying file
manipulate files::manipulate files
involve disk::involve disk
file mapped::file mapped
physical file::physical file
memory-mapped data::memory-mapped data
provide memory::provide memory
systems choose::systems choose
ordinary system::ordinary system
kernel address::kernel address
solaris treats::solaris treats
allowing file::allowing file
efficient memory::efficient memory
subsystem multiple::subsystem multiple
data writes::data writes
processes modify::processes modify
earlier discussions::earlier discussions
memory-mapped sections::memory-mapped sections
sharing process::sharing process
process points::process points
physical memory-the::physical memory-the
memory-the page::memory-the page
memory sharing::memory sharing
memory-mapping system::memory-mapping system
copy-on-write functionality::copy-on-write functionality
allowing processes::allowing processes
read-only mode::read-only mode
disk file::disk file
file figure::file figure
memory-mapped files::memory-mapped files
files process::files process
memory-mapped file::memory-mapped file
shared data::shared data
processes involved::processes involved
mutual exclusion::mutual exclusion
exclusion described::exclusion described
linux systems::linux systems
posix-compliant shmget::posix-compliant shmget
systems calls::systems calls
mapping files::mapping files
communicating processes::communicating processes
memorymapped file::memorymapped file
file serves::file serves
illustrate support::illustrate support
win32 api::win32 api
general outline::general outline
memorymapped files::memorymapped files
api involves::api involves
first creating::first creating
file mapping::file mapping
mapped file::mapped file
file represents::file represents
shared-menwry object::shared-menwry object
enable communication::enable communication
producer process::producer process
shared-memory object::shared-memory object
memory-mapping features::memory-mapping features
shared m.emory::shared m.emory
consumer process::consumer process
process opens::process opens
message written::message written
opened file::opened file
file handle::file handle
include windows.h::include windows.h
include stdio.h::include stdio.h
stdio.h int::stdio.h int
int main::int main
int argc::int argc
char argv::char argv
handle hfile::handle hfile
lpvoid lpmapaddress::lpvoid lpmapaddress
file null::file null
security open_always::security open_always
file file_attribute_normal::file file_attribute_normal
file attributes::file attributes
attributes null::attributes null
template hmapfile::template hmapfile
handle null::handle null
security pagejreadwrite::security pagejreadwrite
mapped pages::mapped pages
map entire::map entire
memory object::memory object
object lpmapaddress::object lpmapaddress
object handle::object handle
handle filejmap_all_access::handle filejmap_all_access
mapped view::mapped view
memory sprintf::memory sprintf
memory message::memory message
producer writing::producer writing
api -the::api -the
-the entire::-the entire
program shown::program shown
error checking::error checking
code brevity::code brevity
sharedobj ect::sharedobj ect
shared-memory segment::shared-memory segment
named object::named object
passed values::passed values
entire mapping::entire mapping
handle hmapfile::handle hmapfile
access false::access false
file object::file object
memory printf::memory printf
read message::read message
consumer reading::consumer reading
bringing pages::bringing pages
fm1ction returns::fm1ction returns
message shared::message shared
program illustrating::program illustrating
process establishes::process establishes
existii1g named::existii1g named
message thatwas::message thatwas
processes remove::processes remove
programming exercise::programming exercise
controller includes::controller includes
includes registers::includes registers
hold commands::hold commands
data transfers::data transfers
convenient access::convenient access
device registers::device registers
registers reads::registers reads
fast response::fast response
video controllers::video controllers
n1.emory location::n1.emory location
location displaying::location displaying
displaying text::displaying text
memory-mapped locations::memory-mapped locations
parallel ports::parallel ports
connect modems::connect modems
cpu transfers::cpu transfers
transfers data::transfers data
long string::long string
memory-mapped serial::memory-mapped serial
serial port1::serial port1
cpu writes::cpu writes
data byte::data byte
data register::data register
control register::control register
device takes::device takes
data transfer::data transfer
process running::process running
user rnode::user rnode
rnode requests::rnode requests
pages scattered::pages scattered
explained earlier::explained earlier
single byte::single byte
entire page::entire page
frame kernel::frame kernel
free-memory pool::free-memory pool
ordinary user-mode::ordinary user-mode
user-mode processes::user-mode processes
primary reasons::primary reasons
kernel requests::kernel requests
requests memory::requests memory
minimize waste::minimize waste
subject kernel::subject kernel
pages allocated::pages allocated
contiguous physical::contiguous physical
hardware devices::hardware devices
devices interact::devices interact
physical memory-without::physical memory-without
memory interface-and::memory interface-and
require memory::require memory
memory residing::memory residing
contiguous pages::contiguous pages
kernel processes::kernel processes
buddy system::buddy system
slab allocation::slab allocation
system tbe::system tbe
tbe buddy::tbe buddy
system allocates::system allocates
allocates memory::allocates memory
fixed-size segment::fixed-size segment
segment consisting::segment consisting
pages memory::pages memory
satisfies requests::satisfies requests
units sized::units sized
highest power::highest power
next-highest power::next-highest power
segment allocated::segment allocated
adjacent buddies::adjacent buddies
larger segments::larger segments
kernel releases::kernel releases
original256-kb segment::original256-kb segment
obvious drawback::obvious drawback
allocated segments::allocated segments
allocated unit::allocated unit
system allocation::system allocation
allocating kernel::allocating kernel
kernel memory::kernel memory
single cache::single cache
unique kernel::unique kernel
structure -for::structure -for
separate cache::separate cache
representing process::representing process
process descriptors::process descriptors
file objects::file objects
cache represents::cache represents
cache representing::cache representing
representing semaphores::representing semaphores
semaphores stores::semaphores stores
stores instances::stores instances
semaphore objects::semaphore objects
descriptors stores::descriptors stores
process descriptor::process descriptor
descriptor objects::descriptor objects
figure shows::figure shows
kernel objects::kernel objects
respective caches::respective caches
slab-allocation algorithm::slab-allocation algorithm
store kernel::store kernel
cache depends::cache depends
free object::free object
object assigned::object assigned
slab allocator::slab allocator
object representing::object representing
type struct::type struct
struct task_struct::struct task_struct
linux kernel::linux kernel
kernel creates::kernel creates
task_struct object::task_struct object
objects slabs::objects slabs
objects figure::objects figure
free partial::free partial
slab consists::slab consists
free objects::free objects
partial slab::partial slab
empty slab::empty slab
empty slabs::empty slabs
main benefits::main benefits
fragmentation fragn::fragmentation fragn
fragn entation::fragn entation
allocator returns::allocator returns
exact amount::exact amount
object memory::object memory
memory requests::memory requests
aging memory::aging memory
allocating-and releasing-memory::allocating-and releasing-memory
time-consuming process::time-consuming process
subsequent requests::subsequent requests
general-purpose nature::general-purpose nature
user-mode memory::user-mode memory
solaris linux::solaris linux
kernel adopted::kernel adopted
major decisions::major decisions
allocation policy::allocation policy
obvious property::obvious property
situation results::situation results
initial locality::initial locality
high level::high level
initial paging::initial paging
small files::small files
process prepaging::process prepaging
pages brought::pages brought
saved page::saved page
unnecessary pages::unnecessary pages
prepaging loses::prepaging loses
prepaging wins::prepaging wins
existing machine::existing machine
machine seldom::machine seldom
sizes page::sizes page
invariably powers::invariably powers
size increases::size increases
active process::active process
desirable memory::desirable memory
smaller pages::smaller pages
memory starting::memory starting
final page::final page
assuming independence::assuming independence
transfer times::transfer times
times transfer::times transfer
amount transferred::amount transferred
size howeve1::size howeve1
dwarf transfer::dwarf transfer
bytes latency::bytes latency
transfer doubling::transfer doubling
sam.e amount::sam.e amount
smaller page::smaller page
match program::match program
program locality::program locality
fault generates::fault generates
large amount::large amount
overhead needed::overhead needed
saving registers::saving registers
updating tables::updating tables
sector size::sector size
table size::table size
historical trend::historical trend
first edition::first edition
system concepts::system concepts
upper bound::upper bound
common page::common page
modern systems::modern systems
tlb reach::tlb reach
tlb recall::tlb recall
tlb refers::tlb refers
address translations::address translations
power hungry::power hungry
hungry related::hungry related
similar metric::similar metric
reach refers::reach refers
entries multiplied::entries multiplied
resolving memory::resolving memory
memory-intensive applications::memory-intensive applications
prove insufficient::prove insufficient
page size-say::page size-say
kb-we quadruple::kb-we quadruple
ultrasparc supports::ultrasparc supports
supports page::supports page
pages sizes::pages sizes
64-entry tlb::64-entry tlb
solaris ranges::solaris ranges
solaris maps::solaris maps
pages solaris::pages solaris
size providing::size providing
providing support::providing support
sizes requires::sizes requires
system -not::system -not
entry managing::entry managing
performance howeve1::performance howeve1
reach offset::reach offset
performance costs::performance costs
recent trends::recent trends
softwaremanaged tlbs::softwaremanaged tlbs
operating-system support::operating-system support
alpha architectures::alpha architectures
architectures employ::architectures employ
software-managed tlbs::software-managed tlbs
pentium manage::pentium manage
tables section::tables section
page management::page management
virtual-to-physical address::virtual-to-physical address
physical frame::physical frame
tables reduce::tables reduce
complete information::complete information
referenced page::referenced page
memory demand::memory demand
process page::process page
external page::external page
traditional per-process::traditional per-process
per-process page::per-process page
tables negate::tables negate
memory n1.anager::memory n1.anager
special case::special case
case requires::case requires
careful handling::careful handling
page-lookup processing::page-lookup processing
structure demand::structure demand
paged nature::paged nature
underlying demand::underlying demand
stored row::stored row
stored data::stored data
row takes::row takes
preceding code::preceding code
code zeros::code zeros
careful selection::careful selection
programming structures::programming structures
increase locality::increase locality
good locality::good locality
scatter references::scatter references
bad locality::bad locality
weighted factors::weighted factors
factors include::factors include
include search::include search
search speed::search speed
sigicificant effect::sigicificant effect
paging separating::paging separating
separating code::separating code
generating reentrant::generating reentrant
code means::code means
code pages::code pages
modified clean::modified clean
clean pages::clean pages
placing routines::placing routines
page routines::page routines
bin-packing problem::bin-packing problem
operations research::operations research
variable-sized load::variable-sized load
load segments::load segments
fixed-sized pages::fixed-sized pages
interpage references::interpage references
programming language::programming language
pointers tend::pointers tend
randomize access::randomize access
object-oriented programs::object-oriented programs
poor locality::poor locality
situation occurs::situation occurs
usb storage::usb storage
storage device::storage device
process issues::process issues
waiting process::waiting process
paged out::paged out
request advances::request advances
device queue::device queue
common solutions::common solutions
extra copying::extra copying
high overhead::high overhead
lock bit::lock bit
usual locked::usual locked
locked pages::locked pages
unlocked figure::unlocked figure
lock bits::lock bits
operating-system kernel::operating-system kernel
fault caused::fault caused
bit involves::bit involves
normal page::normal page
process faults::process faults
faults selecting::faults selecting
system reads::system reads
process waits::process waits
system sees::system sees
perfect replacement::perfect replacement
policy decision::policy decision
effort spent::effort spent
prevent replacement::prevent replacement
brought-in page::brought-in page
faulting process::faulting process
situation occur::situation occur
locked frame::locked frame
user doing::user doing
locking multiuser::locking multiuser
multiuser systems::multiuser systems
locking hints::locking hints
individual process::individual process
solaris implement::solaris implement
clustering handles::clustering handles
handles page::handles page
faultil1.g page::faultil1.g page
faulting page::faulting page
working-set minimum::working-set minimum
working-set maximum::working-set maximum
manager maintains::manager maintains
threshold value::threshold value
manager allocates::manager allocates
working-set rnaximum::working-set rnaximum
rnaximum incurs::rnaximum incurs
local page-replacement::local page-replacement
page-replacement policy::page-replacement policy
memory falls::memory falls
automatic working-set::automatic working-set
working-set trimming::working-set trimming
trimming works::trimming works
manager removes::manager removes
removes pages::removes pages
process reaches::process reaches
allocated pages::allocated pages
free-page-frame list::free-page-frame list
sufficient free::sufficient free
algorithm discussed::algorithm discussed
multiprocessor x86::multiprocessor x86
x86 systems::x86 systems
require invalidatil::require invalidatil
look-aside buffer::look-aside buffer
thread incurs::thread incurs
kernel assigns::kernel assigns
faulting thread::faulting thread
sufficient amount::sufficient amount
parameter-zotsfree-that represents::parameter-zotsfree-that represents
begin paging::begin paging
lotsfree parameter::lotsfree parameter
kernel checks::kernel checks
pages falls::pages falls
pageout starts::pageout starts
pageout process::pageout process
algorithm described::algorithm described
scanning pages::scanning pages
process works::process works
front hand::front hand
clock scans::clock scans
back hand::back hand
clock examines::clock examines
free list::free list
modified solaris::modified solaris
solaris maintains::solaris maintains
cache list::cache list
invalid contents::invalid contents
contents pages::contents pages
pageout algorithm::pageout algorithm
scanning occurs::scanning occurs
slowscan pages::slowscan pages
default value::default value
total physical::total physical
withfastscan set::withfastscan set
system parameter::system parameter
fastscan cll::fastscan cll
slowscan minfree::slowscan minfree
minfree desfree::minfree desfree
desfree amount::desfree amount
solaris page::solaris page
page scanner::page scanner
value depends::value depends
process checks::process checks
checks memory::checks memory
desfree free::desfree free
30-second average::30-second average
kernel begins::kernel begins
swapping processes::swapping processes
swapped processes::swapped processes
long periods::long periods
recent releases::recent releases
solaris kernel::solaris kernel
provided enhancements::provided enhancements
enhancement involves::enhancement involves
recognizing pages::recognizing pages
libraries pages::libraries pages
scannerare skipped::scannerare skipped
page-scanning process::page-scanning process
enhancement concerns::enhancement concerns
concerns distinguishing::concerns distinguishing
distinguishing pages::distinguishing pages
physical menlory::physical menlory
increasing cpu::increasing cpu
frees application::frees application
application programmers::application programmers
memory availability::memory availability
share system::share system
efficient type::efficient type
paging pure::paging pure
kernel consults::kernel consults
entire memory::entire memory
memory image::memory image
and-in theory::and-in theory
requirements exceed::requirements exceed
processes run::processes run
replace pages::replace pages
anomaly optimal::anomaly optimal
knowledge lru::knowledge lru
frame-allocation policy::frame-allocation policy
needed allocation::needed allocation
local page::local page
model assumes::model assumes
processes execute::processes execute
avoid thrashing::avoid thrashing
require process::require process
process swapping::process swapping
provide features::provide features
memory mappil1g::memory mappil1g
mappil1g files::mappil1g files
api implements::api implements
implements shared::implements shared
files kernel::files kernel
req1.1ire memory::req1.1ire memory
physically contiguous::physically contiguous
fragmentation slab::fragmentation slab
slab allocators::slab allocators
allocators assign::allocators assign
assign kernel::assign kernel
proper design::proper design
paging systern::paging systern
systern requires::systern requires
prep aging::prep aging
tree illustrating::tree illustrating
bytes request::bytes request
followilcg releases::followilcg releases
perform coalescing::perform coalescing
bytes release::bytes release
256-byte pages::256-byte pages
small number::small number
smallest counter::smallest counter
basic idea::basic idea
initial value::initial value
counters increased::counters increased
increased iii::increased iii
counters decreased::counters decreased
faults occur::faults occur
optimal pagereplacement::optimal pagereplacement
pagereplacement strategy::pagereplacement strategy
time-measured utilizations::time-measured utilizations
utilization paging::utilization paging
paging disk::paging disk
improve cpu::improve cpu
utilization explain::utilization explain
faster cpu::faster cpu
bigger paging::bigger paging
main n1.enl0ry::main n1.enl0ry
faster hard::faster hard
multiple controllers::multiple controllers
multiple hard::multiple hard
hard disks::hard disks
page-fetch algorithms::page-fetch algorithms
demand-paged computer::demand-paged computer
determine utilization::determine utilization
paging helping::paging helping
disk utilization::disk utilization
average access::average access
milliseconds addresses::milliseconds addresses
table takes::table takes
reduces access::reduces access
memory assume::memory assume
simplified view::simplified view
thread states::thread states
running state::running state
thread change::thread change
change state::change state
state figure::state figure
thread state::thread state
state diagram::state diagram
address reference::address reference
support required::support required
replacement algorithms::replacement algorithms
frames remember::frames remember
first unique::first unique
unique pages::unique pages
replacement fifo::replacement fifo
replacement optimal::replacement optimal
allocates pages::allocates pages
system provide::system provide
discuss situations::discuss situations
algorithm generates::algorithm generates
fewer page::fewer page
opposite holds::opposite holds
occur describe::occur describe
memory locations::memory locations
addressing scheme::addressing scheme
indirect memory-load::indirect memory-load
per-process frame::per-process frame
allocation technique::allocation technique
kernellevel threads::kernellevel threads
kernel thread::kernel thread
user thread::user thread
multithreaded process::multithreaded process
process consist::process consist
thread explain::thread explain
copy-on-write feature::copy-on-write feature
two-dimensional array::two-dimensional array
small process::small process
matrix resides::matrix resides
array-initialization loops::array-initialization loops
system detect::system detect
detect thrashing::detect thrashing
candidate page::candidate page
moving fast::moving fast
moving slow::moving slow
resident pages::resident pages
pages assume::pages assume
replacement policy::replacement policy
policy answer::policy answer
free space::free space
space generated::space generated
requested page::requested page
page exists::page exists
resident page::resident page
page set::page set
free-france pool::free-france pool
pool managed::pool managed
make space::make space
system degenerate::system degenerate
object type::object type
type assuming::type assuming
scalability issue::scalability issue
empty frame::empty frame
replaced page::replaced page
nanoseconds assume::nanoseconds assume
acceptable page-fault::acceptable page-fault
variable-sized pages::variable-sized pages
pages define::pages define
segment-replacement algorithms::segment-replacement algorithms
algorithms based::algorithms based
lru pagereplacement::lru pagereplacement
pagereplacement schemes::pagereplacement schemes
schemes remember::schemes remember
consecutive locations::consecutive locations
needed segment::needed segment
segments cam::segments cam
programming techniques::programming techniques
demand-paged environment::demand-paged environment
good explain::good explain
hashed symbol::hashed symbol
sequential search::sequential search
binary search::binary search
pure code::pure code
vector operations::vector operations
process requesting::process requesting
user-level threads::user-level threads
user threads::user threads
kernel threads::kernel threads
user user::user user
threads belonging::threads belonging
memory explain::memory explain
starts execution::starts execution
memory identify::memory identify
options system::options system
system designers::system designers
memory describe::memory describe
fault tlb::fault tlb
process generates::process generates
system establishes::system establishes
physical location::physical location
hardware operations::hardware operations
computing system::computing system
benefits list::benefits list
character instruction::character instruction
destination regions::destination regions
small value::small value
high value::high value
representing data::representing data
representing code::representing code
code explain::code explain
paged system::paged system
last examination::last examination
algorithms presented::algorithms presented
random pagereference::random pagereference
pagereference string::pagereference string
numbers range::numbers range
random page-reference::random page-reference
page-reference string::page-reference string
faults incurred::faults incurred
algorithm implement::algorithm implement
catalan numbers::catalan numbers
integer sequence::integer sequence
sequence c11::sequence c11
treeenumeration problems::treeenumeration problems
first catalan::first catalan
formula generating::formula generating
generating c11::generating c11
catalan sequence::catalan sequence
integer parameter::integer parameter
line means::line means
manchester university::manchester university
university muse::university muse
muse computer::muse computer
early demand-paging::early demand-paging
first researchers::first researchers
stack algorithms::stack algorithms
fixed allocation::fixed allocation
enl lanced::enl lanced
lanced clock::lanced clock
burroughs bssoo::burroughs bssoo
bssoo computer::bssoo computer
system wilson::system wilson
allocation jolmstone::allocation jolmstone
issues buddy::issues buddy
memory allocators::memory allocators
multiple processors::multiple processors
memory-fitting algorithms::memory-fitting algorithms
memory-allocation strategies::memory-allocation strategies
windows implements::windows implements
memory mcdougall::memory mcdougall
discussed operating::discussed operating
system support::system support
sizes ortiz::sizes ortiz
embedded operating::embedded operating
system jacob::system jacob
compared implementations::compared implementations
pentium architectures::pentium architectures
companion article::companion article
ultrasparc part::ultrasparc part
secondary storage::secondary storage
memory modern::memory modern
primary on-line::primary on-line
on-line storage::on-line storage
storage medium::storage medium
programs residing::programs residing
related information::related information
information defined::information defined
physical devices::physical devices
devices files::devices files
computer vary::computer vary
devices transfer::devices transfer
transfer data::transfer data
slowest major::slowest major
major component::major component
device variation::device variation
wide range::wide range
key goal::key goal
simplest interface::simplest interface
performance bottleneck::performance bottleneck
chapter::chapter
showed::showed
cpu::cpu
shared::shared
set::set
processes::processes
result::result
scheduling::scheduling
improve::improve
utilization::utilization
speed::speed
computer::computer
response::response
users::users
realize::realize
increase::increase
performance::performance
memory::memory
share::share
discuss::discuss
ways::ways
manage::manage
memorymanagement::memorymanagement
algorithms::algorithms
vary::vary
primitive::primitive
bare-machine::bare-machine
approach::approach
paging::paging
segmentation::segmentation
strategies::strategies
advantages::advantages
disadvantages::disadvantages
selection::selection
memory-management::memory-management
method::method
specific::specific
system::system
depends::depends
factors::factors
hardware::hardware
design::design
require::require
support::support
recent::recent
designs::designs
closely::closely
integrated::integrated
operating::operating
provide::provide
detailed::detailed
description::description
organizing::organizing
techniques::techniques
including::including
intel::intel
pentium::pentium
supports::supports
pure::pure
central::central
operation::operation
modern::modern
consists::consists
large::large
array::array
words::words
bytes::bytes
address::address
fetches::fetches
instructions::instructions
value::value
program::program
counter::counter
additional::additional
loading::loading
storing::storing
addresses::addresses
typical::typical
instruction-execution::instruction-execution
cycle::cycle
first::first
instruction::instruction
decoded::decoded
operands::operands
fetched::fetched
executed::executed
results::results
stored::stored
back::back
mernory::mernory
unit::unit
sees::sees
stream::stream
generated::generated
indexing::indexing
indirection::indirection
literal::literal
data::data
ignore::ignore
hozu::hozu
generates::generates
interested::interested
sequence::sequence
running::running
begin::begin
discussion::discussion
covering::covering
issues::issues
pertinent::pertinent
managing::managing
coverage::coverage
includes::includes
overview::overview
basic::basic
binding::binding
symbolic::symbolic
actual::actual
physical::physical
distinction::distinction
logical::logical
conclude::conclude
section::section
dynamically::dynamically
linking::linking
code::code
libraries::libraries
8.1.1::8.1.1
main::main
registers::registers
built::built
processor::processor
storage::storage
access::access
directly::directly
machine::machine
arguments::arguments
disk::disk
execution::execution
direct-access::direct-access
devices::devices
moved::moved
operate::operate
generally::generally
accessible::accessible
clock::clock
cpus::cpus
decode::decode
perform::perform
simple::simple
operations::operations
register::register
contents::contents
rate::rate
tick::tick
accessed::accessed
transaction::transaction
bus::bus
completing::completing
cycles::cycles
cases::cases
stall::stall
required::required
complete::complete
executing::executing
situation::situation
intolerable::intolerable
frequency::frequency
accesses::accesses
remedy::remedy
add::add
fast::fast
process::process
soa::soa
lj.o::lj.o
base::base
1go::1go
limit::limit
figure::figure
define::define
space::space
buffer::buffer
accommodate::accommodate
differential::differential
described::described
1.8.3::1.8.3
concerned::concerned
relative::relative
accessing::accessing
ensure::ensure
correct::correct
protect::protect
user::user
addition::addition
protection::protection
provided::provided
implemented::implemented
outline::outline
implementation::implementation
make::make
separate::separate
ability::ability
determine::determine
range::range
legal::legal
two::two
illustrated::illustrated
holds::holds
smallest::smallest
specifies::specifies
size::size
legally::legally
inclusive::inclusive
accomplished::accomplished
compare::compare
mode::mode
attempt::attempt
operating-system::operating-system
trap::trap
treats::treats
fatal::fatal
error::error
scheme::scheme
prevents::prevents
accidentally::accidentally
deliberately::deliberately
modifying::modifying
structures::structures
loaded::loaded
special::special
privileged::privileged
kernel::kernel
executes::executes
load::load
change::change
programs::programs
changing::changing
unrestricted::unrestricted
provision::provision
monitor-addressing::monitor-addressing
dump::dump
out::out
case::case
errors::errors
modify::modify
parameters::parameters
calls::calls
8.1.2::8.1.2
resides::resides
binary::binary
executable::executable
file::file
brought::brought
depending::depending
management::management
waiting::waiting
form::form
normal::normal
procedure::procedure
select::select
input::input
queue::queue
eventually::eventually
terminates::terminates
declared::declared
systems::systems
reside::reside
part::part
starts::starts
affects::affects
steps-some::steps-some
optional-before::optional-before
bein.g::bein.g
represented::represented
steps::steps
source::source
count::count
compiler::compiler
typically::typically
bind::bind
relocatable::relocatable
beginning::beginning
module::module
lin.kage::lin.kage
editor::editor
loader::loader
turn::turn
absolute::absolute
mapping::mapping
classically::classically
done::done
step::step
compile::compile
krww::krww
starting::starting
location::location
start::start
extend::extend
recompile::recompile
ms-dos::ms-dos
.com-format::.com-format
bound::bound
generate::generate
final::final
delayed::delayed
reload::reload
incorporate::incorporate
changed::changed
segment::segment
run::run
work::work
discussed::discussed
8.1.3::8.1.3
general-purpose::general-purpose
11se::11se
major::major
portion::portion
devoted::devoted
showing::showing
bindings::bindings
effectively::effectively
discussing::discussing
multistep::multistep
processing::processing
versus::versus
commonly::commonly
referred::referred
unit-that::unit-that
memory-is::memory-is
compile-time::compile-time
load-time::load-time
address-binding::address-binding
methods::methods
identical::identical
execution-time::execution-time
addressbinding::addressbinding
differing::differing
virtual::virtual
interchangeably::interchangeably
text::text
in_::in_
spaces::spaces
differ::differ
run-time::run-time
device::device
choose::choose
accomplish::accomplish
dynamic::dynamic
relocation::relocation
sections::sections
illustrate::illustrate
mmu::mmu
generalization::generalization
base-register::base-register
added::added
relocated::relocated
mapped::mapped
80x86::80x86
family::family
processors::processors
four::four
real::real
create::create
pointer::pointer
store::store
manipulate::manipulate
addresses-all::addresses-all
number::number
indirect::indirect
deals::deals
memory-mapping::memory-mapping
converts::converts
referenced::referenced
determined::determined
reference::reference
made::made
types::types
max::max
ranger::ranger
tor::tor
valuer::valuer
thinks::thinks
runs::runs
locations::locations
concept::concept
proper::proper
8.1.4::8.1.4
entire::entire
execute::execute
limited::limited
obtain::obtain
memory-space::memory-space
dynancic::dynancic
routine::routine
routines::routines
format::format
call::call
calling::calling
checks::checks
desired::desired
menwry::menwry
update::update
tables::tables
reflect::reflect
control::control
passed::passed
newly::newly
advantage::advantage
unused::unused
amounts::amounts
needed::needed
handle::handle
infrequently::infrequently
occurring::occurring
total::total
smaller::smaller
responsibility::responsibility
programmer::programmer
providing::providing
library::library
implement::implement
8.1.5::8.1.5
shows::shows
language::language
treated::treated
object::object
combined::combined
image::image
contrast::contrast
similar::similar
postponed::postponed
feature::feature
subroutine::subroutine
facility::facility
include::include
copy::copy
requirement::requirement
wastes::wastes
stub::stub
included::included
libraryroutine::libraryroutine
small::small
piece::piece
locate::locate
memory-resident::memory-resident
present::present
loads::loads
replaces::replaces
reached::reached
incurring::incurring
cost::cost
extended::extended
updates::updates
bug::bug
fixes::fixes
replaced::replaced
version::version
automatically::automatically
relinked::relinked
gain::gain
incompatible::incompatible
versions::versions
information::information
decide::decide
minor::minor
retain::retain
increment::increment
compiled::compiled
affected::affected
incorporated::incorporated
linked::linked
installed::installed
continue::continue
older::older
unlike::unlike
requires::requires
protected::protected
entity::entity
check::check
multiple::multiple
elaborate::elaborate
8.4.4::8.4.4
temporarily::temporarily
continued::continued
assume::assume
multiprogramming::multiprogramming
environment::environment
round-robin::round-robin
cpu-scheduling::cpu-scheduling
algorithm::algorithm
quantum::quantum
expires::expires
manager::manager
swap::swap
finished::finished
freed::freed
meantime::meantime
scheduler::scheduler
allocate::allocate
slice::slice
finishes::finishes
swapped::swapped
ideally::ideally
ready::ready
reschedule::reschedule
reasonable::reasonable
computing::computing
swaps::swaps
variant::variant
swapping::swapping
policy::policy
priority-based::priority-based
higher-priority::higher-priority
arrives::arrives
service::service
lower-priority::lower-priority
backing::backing
roll::roll
occupied::occupied
previously::previously
restriction::restriction
dictated::dictated
assembly::assembly
easily::easily
computed::computed
copies::copies
images::images
direct::direct
maintains::maintains
consisting::consisting
decides::decides
dispatcher::dispatcher
free::free
region::region
reloads::reloads
transfers::transfers
selected::selected
context-switch::context-switch
fairly::fairly
high::high
idea::idea
standard::standard
hard::hard
transfer::transfer
50mb::50mb
100-mb::100-mb
takes::takes
seconds::seconds
assuming::assuming
average::average
latency::latency
milliseconds::milliseconds
notice::notice
proportional::proportional
amount::amount
resident::resident
taking::taking
maximum::maximum
3gb::3gb
this-say::this-say
compared::compared
simply::simply
reducing::reducing
effective::effective
informed::informed
requirements::requirements
issue::issue
request::request
release::release
inform::inform
constrained::constrained
completely::completely
idle::idle
concern::concern
pending::pending
i::NNP
asynchronously::asynchronously
i::-NONE-
buffers::buffers
queued::queued
busy::busy
belongs::belongs
solutions::solutions
problem::problem
occur::occur
assumption::assumption
mentioned::mentioned
earlier::earlier
head::head
seeks::seeks
explanation::explanation
postpone::postpone
secondary-storage::secondary-storage
structure::structure
covered::covered
allocated::allocated
chunk::chunk
solution::solution
modified::modified
found::found
modification::modification
unix::unix
disabled::disabled
threshold::threshold
halted::halted
reduced::reduced
fully::fully
a.6::a.6
early::early
pcs-which::pcs-which
lacked::lacked
sophistication::sophistication
advanced::advanced
methods-ran::methods-ran
prime::prime
microsoft::microsoft
windows::windows
concurrent::concurrent
insufficient::insufficient
full::full
preempt::preempt
swapped-out::swapped-out
remains::remains
selects::selects
subsequent::subsequent
features::features
pcs::pcs
explore::explore
cover::cover
menlory::menlory
efficient::efficient
explains::explains
common::common
contiguous::contiguous
allocation::allocation
divided::divided
partitions::partitions
place::place
low::low
factor::factor
affecting::affecting
decision::decision
interrupt::interrupt
vector::vector
programmers::programmers
development::development
contained::contained
single::single
8.3.1::8.3.1
contaitls::contaitls
maps::maps
adding::adding
values::values
context::context
switch::switch
checked::checked
relocation-register::relocation-register
flexibility::flexibility
desirable::desirable
situations::situations
drivers::drivers
driver::driver
purposes::purposes
transient::transient
8.3.2::8.3.2
simplest::simplest
allocating::allocating
divide::divide
fixed-sized::fixed-sized
partition::partition
degree::degree
addressing::addressing
supportfor::supportfor
originally::originally
ibm::ibm
mft::mft
longer::longer
fixed-partition::fixed-partition
mvt::mvt
primarily::primarily
batch::batch
environments::environments
ideas::ideas
presented::presented
applicable::applicable
time-sharing::time-sharing
table::table
indicating::indicating
parts::parts
initially::initially
considered::considered
block::block
holes::holes
sizes::sizes
enter::enter
put::put
account::account
determining::determining
compete::compete
releases::releases
fill::fill
list::list
order::order
untit::untit
finally::finally
satisfied::satisfied
-that::-that
hole::hole
hold::hold
wait::wait
skip::skip
met::met
generat::generat
blocks::blocks
comprise::comprise
scattered::scattered
searches::searches
split::split
arriving::arriving
returned::returned
adjacent::adjacent
merged::merged
larger::larger
point::point
recombined::recombined
satisfy::satisfy
demands::demands
instance::instance
general::general
concerns::concerns
fit::fit
big::big
searching::searching
previous::previous
first-fit::first-fit
search::search
ended::ended
stop::stop
find::find
ordered::ordered
strategy::strategy
produces::produces
leftover::leftover
worst::worst
largest::largest
sorted::sorted
best-fit::best-fit
simulations::simulations
shown::shown
terms::terms
decreasing::decreasing
faster::faster
8.3.3::8.3.3
fragmentation::fragmentation
suffer::suffer
external::external
removed::removed
broken::broken
pieces::pieces
exists::exists
fragmented::fragmented
severe::severe
wasted::wasted
affect::affect
end::end
piece-the::piece-the
top::top
bottom::bottom
matter::matter
statistical::statistical
analysis::analysis
reveals::reveals
optimization::optimization
lost::lost
one-third::one-third
unusable::unusable
property::property
internal::internal
multiple-partition::multiple-partition
18,464::18,464
suppose::suppose
requests::requests
18,462::18,462
requested::requested
left::left
overhead::overhead
track::track
substantially::substantially
avoiding::avoiding
break::break
units::units
based::based
slightly::slightly
difference::difference
numbers::numbers
goal::goal
shuffle::shuffle
nlemory::nlemory
compaction::compaction
static::static
moving::moving
move::move
direction::direction
producing::producing
expensive::expensive
external-fragmentation::external-fragmentation
permit::permit
noncontiguous::noncontiguous
allowing::allowing
complementary::complementary
achieve::achieve
permits::permits
avoids::avoids
solves::solves
considerable::considerable
fitting::fitting
chunks::chunks
varying::varying
backin.g::backin.g
schemes::schemes
introduction::introduction
suffered::suffered
arises::arises
fragments::fragments
residing::residing
fmmd::fmmd
problems::problems
connection::connection
slower::slower
impossible::impossible
forms::forms
foooo::foooo
f1111::f1111
page::page
1---------1::1---------1
traditionally::traditionally
handled::handled
integrating::integrating
64-bit::64-bit
microprocessors::microprocessors
8.4.1::8.4.1
implementing::implementing
involves::involves
breaking::breaking
harnes::harnes
pages::pages
frames::frames
san1.e::san1.e
index::index
offset::offset
model::model
frame::frame
defined::defined
power::power
architecture::architecture
makes::makes
translation::translation
easy::easy
wordst::wordst
high-order::high-order
bits::bits
designate::designate
low-order::low-order
displacement::displacement
concrete::concrete
minuscule::minuscule
show::show
view::view
noticed::noticed
32-byte::32-byte
4-byte::4-byte
happen::happen
coincide::coincide
boundaries::boundaries
last::last
2,048::2,048
72,766::72,766
1,086::1,086
resulting::resulting
byte::byte
independent::independent
expect::expect
one-half::one-half
consideration::consideration
suggests::suggests
involved::involved
page-table::page-table
entry::entry
increases::increases
transferred::transferred
grown::grown
sets::sets
today::today
kernels::kernels
solaris::solaris
researchers::researchers
developing::developing
variable::variable
on-the-fly::on-the-fly
long::long
32-bit::32-bit
entries::entries
expressed::expressed
examined::examined
injo::injo
important::important
aspect::aspect
clear::clear
separation::separation
views::views
fact::fact
reconciled::reconciled
address-translation::address-translation
translated::translated
hidden::hidden
controlled::controlled
definition::definition
unable::unable
owns::owns
aware::aware
details::details
memory-which::memory-which
free-frame::free-frame
new-process::new-process
produce::produce
parameter::parameter
buffe1::buffe1
translate::translate
map::map
manually::manually
8.4.2::8.4.2
told::told
dedicated::dedicated
high-speed::high-speed
logic::logic
paging-address::paging-address
nlust::nlust
efficiency::efficiency
dec::dec
pdp-11::pdp-11
satisfactory::satisfactory
sncall::sncall
contemporary::contemporary
computers::computers
million::million
machines::machines
feasible::feasible
points::points
ptbr::ptbr
fori::fori
task::task
slowed::slowed
delay::delay
circumstances::circumstances
resort::resort
fastlookup::fastlookup
cache::cache
bc.1her::bc.1her
tlb::tlb
associative::associative
key::key
tag::tag
item::item
keys::keys
simultaneously::simultaneously
field::field
numbering::numbering
1,024::1,024
immediately::immediately
percent::percent
unmapped::unmapped
obtained::obtained
quickly::quickly
replacement::replacement
policies::policies
recently::recently
lru::lru
random::random
tlbs::tlbs
meaning::meaning
wired::wired
asid::asid
uniquely::uniquely
identifies::identifies
address-space::address-space
attempts::attempts
resolve::resolve
ensures::ensures
matches::matches
asids::asids
match::match
miss::miss
erased::erased
wrong::wrong
hit::hit
valid::valid
incorrect::incorrect
invalid::invalid
percentage::percentage
times::times
80-percent::80-percent
ratio::ratio
means::means
nanoseconds::nanoseconds
mapped-memory::mapped-memory
fail::fail
weight::weight
probability::probability
40-percent::40-percent
slowdown::slowdown
memory-access::memory-access
98-percent::98-percent
increased::increased
impact::impact
8.4.3::8.4.3
paged::paged
bit::bit
read-write::read-write
read-only::read-only
nuncber::nuncber
verify::verify
writes::writes
write::write
memory-protection::memory-protection
violation::violation
expand::expand
finer::finer
level::level
execute-only::execute-only
kind::kind
combination::combination
illegal::illegal
trapped::trapped
attached::attached
-invalid::-invalid
disallow::disallow
14-bit::14-bit
valid-invalid::valid-invalid
10,468::10,468
2,287::2,287
---------::----------
flee::flee
created::created
extends::extends
howeve1::howeve1
references::references
classified::classified
2-kb::2-kb
reflects::reflects
rarely::rarely
fraction::fraction
wasteful::wasteful
valuable::valuable
length::length
failure::failure
test::test
possibility::possibility
sharing::sharing
8,000::8,000
three-page::three-page
editor-each::editor-each
simplify::simplify
-being::-being
reentrant::reentrant
non-self-modifying::non-self-modifying
wilt::wilt
kb-a::kb-a
significant::significant
savings::savings
heavily::heavily
-compilers::-compilers
window::window
database::database
sharable::sharable
nature::nature
correctness::correctness
enforce::enforce
threads::threads
recall::recall
interprocess::interprocess
corrununication::corrununication
numerous::numerous
benefits::benefits
structuring::structuring
8.5.1::8.5.1
hierarchical::hierarchical
excessively::excessively
consist::consist
4mb::4mb
contiguously::contiguously
division::division
two-level::two-level
10-bit::10-bit
outer::outer
works::works
vax::vax
variation::variation
equal::equal
represents::represents
represent::represent
partitioning::partitioning
manner::manner
leave::leave
designates::designates
one-level::one-level
8mb::8mb
reduce::reduce
main-memory::main-memory
user-process::user-process
iml.er::iml.er
conveniently::conveniently
obvious::obvious
avoid::avoid
giving::giving
three-level::three-level
standard-size::standard-size
daunting::daunting
2nd::2nd
sti11234::sti11234
four-level::four-level
second-level::second-level
ultrasparc::ultrasparc
levels::levels
paging-a::paging-a
prohibitive::prohibitive
accessesto::accessesto
architectures::architectures
inappropriate::inappropriate
8.5.2::8.5.2
hashed::hashed
handling::handling
hash::hash
elements::elements
collisions::collisions
element::element
fields::fields
searched::searched
matching::matching
favorable::favorable
proposed::proposed
refers::refers
mappings::mappings
physical-page::physical-page
clustered::clustered
8.5.3::8.5.3
inverted::inverted
slot::slot
validity::validity
representation::representation
natural::natural
calculate::calculate
located::located
drawbacks::drawbacks
millions::millions
consume::consume
solve::solve
depicts::depicts
identifier::identifier
examples::examples
powerpc::powerpc
describe::describe
simplified::simplified
i11verted::i11verted
triple::triple
process-id::process-id
page-number::page-number
pair::pair
assumes::assumes
role::role
occurs::occurs
pagenumber::pagenumber
subsystem::subsystem
found-say::found-say
i-then::i-then
attempted::attempted
decreases::decreases
lookups::lookups
alleviate::alleviate
one-or::one-or
few-page-table::few-page-table
adds::adds
reads-one::reads-one
hash-table::hash-table
consulted::consulted
offering::offering
improvement::improvement
difficulty::difficulty
technique::technique
faults::faults
unavoidable::unavoidable
differentiation::differentiation
8.6.1::8.6.1
linear::linear
people::people
prefer::prefer
collection::collection
variable-sized::variable-sized
segments::segments
ordering::ordering
writing::writing
procedures::procedures
functions::functions
objects::objects
arrays::arrays
stacks::stacks
variables::variables
modules::modules
talk::talk
stack::stack
math::math
n1.ain::n1.ain
caring::caring
occupy::occupy
sqrt::sqrt
function::function
intrinsically::intrinsically
symbol::symbol
purpose::purpose
identified::identified
begim1.ing::begim1.ing
statement::statement
seventh::seventh
quantities::quantities
partitioned::partitioned
invisible::invisible
simplicity::simplicity
numbered::numbered
segn::segn
lent::lent
tuple::tuple
segment-number::segment-number
constructs::constructs
reflecting::reflecting
global::global
heap::heap
thread::thread
assign.ed::assign.ed
assign::assign
8.6.2::8.6.2
two-dimensional::two-dimensional
one-dimensional::one-dimensional
twodimensional::twodimensional
user-defined::user-defined
effected::effected
startilcg::startilcg
essentially::essentially
base-limit::base-limit
pairs::pairs
begins::begins
segment1::segment1
14001---1::14001---1
1-----1::1-----1
--1::--1
f--------1::f--------1
tooo::tooo
give::give
linux::linux
equivalent::equivalent
8.7.1::8.7.1
logical-address::logical-address
private::private
ldt::ldt
gdt::gdt
8-byte::8-byte
descriptor::descriptor
selector::selector
16-bit::16-bit
word::word
question::question
addressed::addressed
microprogram::microprogram
descriptors::descriptors
lets::lets
read::read
formed::formed
fault::fault
turns::turns
8.7.2::8.7.2
4-kb::4-kb
schence::schence
detail::detail
outernlost::outernlost
directory::directory
cr3::cr3
current::current
indexed::indexed
innermost::innermost
0-11::0-11
pointed::pointed
flag::flag
which-if::which-if
setindicates::setindicates
4-mb::4-mb
bypassing::bypassing
cr3::cr3-
registe::registe
pointing::pointing
demand::demand
8.7.3::8.7.3
illustration::illustration
designed::designed
variety::variety
processors::processors-
segmentationlinux::segmentationlinux
rely::rely
minimally::minimally
task-state::task-state
tss::tss
default::default
switches::switches
noted::noted
2-bit::2-bit
limlx::limlx
recognizes::recognizes
platforms::platforms
plausible::plausible
adopted::adopted
threelevel::threelevel
middle::middle
highlights::highlights
varies::varies
apply::apply
lglobal::lglobal
__,.c__::__,.c__
___::___
__l::__l
-just::-just
-the::-the
saved::saved
restored::restored
tasks::tasks
multiprogrammed::multiprogrammed
single-user::single-user
determinant::determinant
legality::legality
possibly::possibly
checking::checking
efficiently::efficiently
software::software
combinations::combinations
aspects::aspects
comparing::comparing
considerations::considerations
sufficient::sufficient
single::single-
complex::complex
address-operations::address-operations
degraded::degraded
degradation::degradation
acceptable::acceptable
higher::higher
packing::packing
waste::waste
single-partition::single-partition
shifting::shifting
compact::compact
intervals::intervals
copied::copied
increasing::increasing
packets::packets
carefully::carefully
-only::-only
programming::programming
explain::explain
organization::organization
respect::respect
translatil::translatil
complicated::complicated
manufacturer::manufacturer
sharil::sharil
easier::easier
segmented::segmented
pagil::pagil
preferable::preferable
finding::finding
convert::convert
separated::separated
fetch::fetch
baselimit::baselimit
generating::generating
binaries::binaries
individual::individual
linkage::linkage
combine::combine
bilcary::bilcary
bindmg::bindmg
facilitate::facilitate
memory-binding::memory-binding
performed::performed
memory-load::memory-load
worst-fit::worst-fit
mechanism::mechanism
belong::belong
512mb::512mb
conventional::conventional
single-level::single-level
1-kb::1-kb
offsets::offsets
decimal::decimal
structured::structured
fixed::fixed
allowed::allowed
grow::grow
lower::lower
significance::significance
0,430::0,430
1,10::1,10
2,500::2,500
3,400::3,400
4,112::4,112
requiring::requiring
decincal::decincal
command::command
line::line
output::output
type::type
encourage::encourage
unsigned::unsigned
knuth::knuth
simulation::simulation
superior::superior
50-percent::50-percent
rule::rule
credited::credited
designers::designers
atlas::atlas
kilburn::kilburn
howarth::howarth
dennis::dennis
supported::supported
multics::multics
organick::organick
daley::daley
article::article
chang::chang
mergen::mergen
jacob::jacob
mudge::mudge
hennessy::hennessy
patterson::patterson
caches::caches
mmus::mmus
talluri::talluri
discusses::discusses
alternative::alternative
approaches::approaches
enforcing::enforcing
studied::studied
wahbe::wahbe
1993a::1993a
chase::chase
bershad::bershad
thorn::thorn
dougan::dougan
tedmiques::tedmiques
fang::fang
evaluate::evaluate
tanenbaum::tanenbaum
intel80386::intel80386
architectures-such::architectures-such
pentiunl::pentiunl
ultrasparcare::ultrasparcare
1998a::1998a
lim1x::lim1x
bovet::bovet
cesati::cesati
tend::tend
tecrucique::tecrucique
abstracts::abstracts
extremely::extremely
uniform::uniform
separating::separating
viewed::viewed
frees::frees
memory-storage::memory-storage
limitations::limitations
files::files
creation::creation
decrease::decrease
carelessly::carelessly
examine::examine
complexity::complexity
concepts::concepts
page-replacement::page-replacement
principles::principles
working-set::working-set
outlined::outlined
meeting::meeting
ease::ease
precautions::precautions
extra::extra
m.ust::m.ust
unfortunate::unfortunate
limits::limits
examination::examination
unusual::unusual
conditions::conditions
seldom::seldom
practice::practice
arrays,lists::arrays,lists
assembler::assembler
room::room
3,000::3,000
symbols::symbols
options::options
u.s::u.s
government::government
balance::balance
budget::budget
years::years
partially::partially
confer::confer
simplifying::simplifying
diagram::diagram
sance::sance
throughput::throughput
turnaround::turnaround
benefit::benefit
perceived::perceived
worry::worry
concentrate::concentrate
programmed::programmed
address-say::address-say
0-and::0-and
organized::organized
assigned::assigned
note::note
upward::upward
similarly::similarly
downward::downward
successive::successive
blank::blank
grows::grows
sparse::sparse
beneficial::beneficial
filled::filled
dynam.ically::dynam.ically
link::link
leads::leads
considers::considers
enables::enables
communicate::communicate
fork::fork
calt::calt
speeding::speeding
these-and::these-and
other-benefits::other-benefits
option::option
problent::problent
ultimately::ultimately
demand-paged::demand-paged
demanded::demanded
demand-paging::demand-paging
secondary::secondary
lazy::lazy
swapper::swapper
viewing::viewing
term::term
technically::technically
manipulates::manipulates
pager::pager
9.2.1::9.2.1
guesses::guesses
brings::brings
reading::reading
distinguish::distinguish
n1.emory::n1.emory
usuat::usuat
marked::marked
depicted::depicted
marking::marking
effect::effect
guess::guess
right::right
proceeds::proceeds
dod::dod
jtb::jtb
odd::odd
restart::restart
reset::reset
bring::bring
missing::missing
translating::translating
causing::causing
straightforward::straightforward
terminate::terminate
schedule::schedule
interrupted::interrupted
extreme::extreme
non-memory-resident::non-memory-resident
continues::continues
faulting::faulting
theoretically::theoretically
unacceptable::unacceptable
fortunately::fortunately
behavior::behavior
exceedingly::exceedingly
9.6.1::9.6.1
mark::mark
swap-space::swap-space
crucial::crucial
save::save
state::state
condition::condition
meet::meet
fetching::fetching
operand::operand
worst-case::worst-case
three-address::three-address
content::content
placing::placing
sum::sum
decoding::decoding
repeated::repeated
repetition::repetition
mvc::mvc
character::character
ncove::ncove
overlapping::overlapping
destination::destination
straddles::straddles
boundary::boundary
overlap::overlap
solved::solved
microcode::microcode
computes::computes
ends::ends
occm::occm
relevant::relevant
temporary::temporary
overwritten::overwritten
written::written
action::action
restores::restores
started::started
architectural::architectural
existing::existing
illustrates::illustrates
difficulties::difficulties
transparent::transparent
true::true
non-demand-paging::non-demand-paging
errm::errm
restarted::restarted
9.2.2::9.2.2
significantly::significantly
compute::compute
denoted::denoted
ranges::ranges
close::close
zero-that::zero-that
ttp::ttp
nrr::nrr-
deterncine::deterncine
serviced::serviced
seek::seek
optional::optional
receive::receive
completed::completed
restore::restore
resume::resume
arrangement::arrangement
maintain::maintain
page-fault::page-fault
faced::faced
tlu::tlu
components::components
careful::careful
coding::coding
hundred::hundred
microseconds::microseconds
page-switch::page-switch
remember::remember
device-service::device-service
device-queueing::device-queueing
memoryaccess::memoryaccess
8,000,000::8,000,000
7,999,800::7,999,800
1,000::1,000
due::due
fewer::fewer
399,990::399,990
slowing::slowing
dramatically::dramatically
copying::copying
startup::startup
performing::performing
serves::serves
appears::appears
good::good
compromise::compromise
bsd::bsd
demandpaging::demandpaging
bypass::bypass
rapid::rapid
minimizes::minimizes
modifies::modifies
thatthe::thatthe
creates::creates
child::child
duplicate::duplicate
parent::parent
worked::worked
creating::creating
duplicating::duplicating
belonging::belonging
invoke::invoke
exec::exec
unnecessary::unnecessary
copy-on-write::copy-on-write
figures::figures
portions::portions
nl.apping::nl.apping
unmodified::unmodified
process1::process1
process2::process2
nwdified::nwdified
arked::arked
duplicated::duplicated
copyon::copyon-
managed::managed
zem-fhl-on-den::zem-fhl-on-den
1and::1and
zero-fill-on-demand::zero-fill-on-demand
zeroed-out::zeroed-out
erasing::erasing
ofthe::ofthe
call-vfork::call-vfork
operates::operates
differently::differently
vfork::vfork
suspended::suspended
altered::altered
visible::visible
resumes::resumes
ork::ork
caution::caution
intended::intended
command-line::command-line
shell::shell
interfaces::interfaces
assumed::assumed
strictly::strictly
accurate::accurate
ten::ten
half::half
saves::saves
forty::forty
spare::spare
suddenly::suddenly
sixty::sixty
holding::holding
strain::strain
memory-placement::memory-placement
deciding::deciding
challenge::challenge
pc::pc--
r::r---
-------::---------
monitor::monitor
over-allocation::over-allocation
manifests::manifests
determines::determines
finds::finds
system-paging::system-paging
logically::logically
choice::choice
freeing::freeing
9.4.1::9.4.1
faulted::faulted
algorithnc::algorithnc
victim::victim
doubles::doubles
applies::applies
discarded::discarded
reduces::reduces
completes::completes
enormous::enormous
programnlers::programnlers
twenty::twenty
replacing::replacing
develop::develop
tceme::tceme
h::h
designing::designing
slight::slight
improvements::improvements
yield::yield
gains::gains
lowest::lowest
string::string
strings::strings
artificially::artificially
random-number::random-number
generator::generator
trace::trace
record::record
facts::facts
follow::follow
0100,0432,0101,0612,0102,0103,0104,0101,0611,0102,0103::0100,0432,0101,0612,0102,0103,0104,0101,0611,0102,0103
0104,0101,0610,0102,0103,0104,0101,0609,0102,0105::0104,0101,0610,0102,0103,0104,0101,0609,0102,0105
..0::..0
graph::graph
strillg::strillg
faultsone::faultsone
eleven::eleven
curve::curve
drops::drops
minimal::minimal
doing::doing
9.4.2::9.4.2
fifo::fifo
first-in::first-in
first-out::first-out
associates::associates
oldest::oldest
chosen::chosen
replace::replace
insert::insert
tail::tail
empty::empty
fifteen::fifteen
altogether::altogether
lmderstand::lmderstand
hand::hand
initialization::initialization
ago::ago
initialized::initialized
constant::constant
active::active
correctly::correctly
retrieve::retrieve
bad::bad
slows::slows
greater::greater
unexpected::unexpected
research::research
investigators::investigators
belady::belady
anomaly::anomaly
discovered::discovered
9.4.3::9.4.3
optimal::optimal
exist::exist
opt::opt
min::min
longest::longest
period::period
moj::moj
guarantees::guarantees
pagefault::pagefault
sample::sample
irt::irt
difficult::difficult
future::future
knowledge::knowledge
encountered::encountered
sjf::sjf
cpu-schedulin.g::cpu-schedulin.g
5.3.2::5.3.2
comparison::comparison
studies::studies
optimat::optimat
9.4.4::9.4.4
approximation::approximation
backward::backward
forward::forward
past::past
chooses::chooses
strangely::strangely
reverse::reverse
sis::sis
applying::applying
twelve::twelve
knowing::knowing
substantial::substantial
assistance::assistance
implementations::implementations
counters::counters
associate::associate
time-of-use::time-of-use
incremented::incremented
ti1ne-of-use::ti1ne-of-use
aintained::aintained
overflow::overflow
doubly::doubly
removing::removing
putting::putting
pointers::pointers
class::class
ack::ack
exhibit::exhibit
subset::subset
conceivable::conceivable
updating::updating
slow::slow
tolerate::tolerate
9.4.5::9.4.5
lru-approximation::lru-approximation
pagereplacement::pagereplacement
cleared::cleared
examining::examining
basis::basis
approximate::approximate
9.4.5.1::9.4.5.1
additional-reference-bits::additional-reference-bits
recording::recording
regular::regular
8-bit::8-bit
timer::timer
shifts::shifts
discarding::discarding
shift::shift
history::history
periods::periods
interpret::interpret
integers::integers
guaranteed::guaranteed
unique::unique
varied::varied
leaving::leaving
9.4.5.2::9.4.5.2
second-chance::second-chance
inspect::inspect
proceed::proceed
chance::chance
circular::circular
arrival::arrival
chances::chances
poi11ter::poi11ter
advances::advances
clears::clears
inserted::inserted
position::position
selecting::selecting
degenerates::degenerates
9.4.5.3::9.4.5.3
enhanced::enhanced
enhance::enhance
classes::classes
-best::-best
hut::hut
modified-not::modified-not
clean-probably::clean-probably
-probably::-probably
nonempty::nonempty
scan::scan
simpler::simpler
preference::preference
i::NNS
9.4.6::9.4.6
counting-based::counting-based
frequently::frequently
lfu::lfu
reason::reason
actively::actively
initial::initial
phase::phase
counts::counts
forming::forming
exponentially::exponentially
decaying::decaying
usage::usage
mfu::mfu
argument::argument
approxinlate::approxinlate
9.4.7::9.4.7
page-buffering::page-buffering
pool::pool
expansion::expansion
clean::clean
reused::reused
fronc::fronc
mistakenly::mistakenly
retrieved::retrieved
poor::poor
sirnple::sirnple
conjunction::conjunction
augmentation::augmentation
penalty::penalty
incurred::incurred
9.4.8::9.4.8
applications::applications
worse::worse
buffering::buffering
understand::understand
application::application
warehouses::warehouses
massive::massive
sequential::sequential
reads::reads
computations::computations
preserving::preserving
newer::newer
file-system::file-system
raw::raw
termed::termed
bypasses::bypasses
filesystem::filesystem
services::services
locking::locking
prefetching::prefetching
names::names
directories::directories
special-purpose::special-purpose
composed::composed
exhausted::exhausted
in-memory::in-memory
94th::94th
terminated::terminated
variations::variations
reserved::reserved
variants::variants
9.5.1::9.5.1
minimum::minimum
ilcstruction::ilcstruction
memory-reference::memory-reference
modes::modes
straddle::straddle
characters::characters
area::area
m.oved::m.oved
scenario::scenario
15-bit::15-bit
1-bit::1-bit
indicator::indicator
touched::touched
overcome::overcome
16levels::16levels
decremented::decremented
irtdirection::irtdirection
excessive::excessive
limitation::limitation
9.5.2::9.5.2
easiest::easiest
recognize::recognize
student::student
interactive::interactive
sense::sense
speaking::speaking
approximately::approximately
adjust::adjust
integer::integer
ncinimum::ncinimum
tl1e::tl1e
exceeding::exceeding
equally::equally
lose::lose
conversely::conversely
departed::departed
spread::spread
remaining::remaining
high-priority::high-priority
low-priority::low-priority
detriment::detriment
priorities::priorities
priority::priority
9.5.3::9.5.3
local::local
competing::competing
classify::classify
broad::broad
categories::categories
.no::.no
-cu::-cu
expense::expense
totally::totally
circuntstances::circuntstances
hinder::hinder
making::making
9.5.4::9.5.4
non-uniform::non-uniform
equal-or::equal-or
1.3.2::1.3.2
differences::differences
caused::caused
interconnected::interconnected
boards::boards
ranging::ranging
busses::busses
network::network
connections::connections
infiniband::infiniband
board::board
collectively::collectively
exception::exception
motherboard::motherboard
numa::numa
treat::treat
rnade::rnade
algorithmic::algorithmic
ran::ran
scheduled::scheduled
improved::improved
hits::hits
decreased::decreased
picture::picture
lgroup::lgroup
gathers::gathers
hierarchy::hierarchy
lgroups::lgroups
groups::groups
picks::picks
nearby::nearby
rest::rest
resources::resources
minimized::minimized
rates::rates
maximized::maximized
falls::falls
suspend::suspend
introduces::introduces
swap-in::swap-in
swap-out::swap-out
intermediate::intermediate
num.ber::num.ber
activity::activity
thrashing::thrashing
spending::spending
monitors::monitors
introducing::introducing
regard::regard
enters::enters
pagin.g::pagin.g
empties::empties
occurred::occurred
plunges::plunges
tremendously::tremendously
m.emory-access::m.emory-access
phenomenon::phenomenon
plotted::plotted
ilccreases::ilccreases
slowly::slowly
sharply::sharply
effects::effects
thrash::thrash
prevent::prevent
thtashing::thtashing
teclmiques::teclmiques
9.6.2::9.6.2
defines::defines
locality::locality
states::states
moves::moves
localities::localities
exit::exit
leaves::leaves
return::return
unstated::unstated
principle::principle
caching::caching
discussions::discussions
book::book
patterned::patterned
useless::useless
paramete1::paramete1
vrindovv::vrindovv
jjl::jjl
jlli111::jlli111
pattern::pattern
working::working
drop::drop
accuracy::accuracy
encompass::encompass
,2,5,6,7::,2,5,6,7
extrem.e::extrem.e
infinite::infinite
wss::wss
dis::dis
allocates::allocates
initiated::initiated
reallocated::reallocated
keeping::keeping
optimizes::optimizes
fixed-interval::fixed-interval
assum.e::assum.e
equals::equals
10,000::10,000
5,000::5,000
reference-bit::reference-bit
15,000::15,000
interval::interval
uncertainty::uncertainty
interrupts::interrupts
frequent::frequent
correspondingly::correspondingly
9.6.3::9.6.3
successful::successful
prepaging::prepaging
9.9.1::9.9.1
clumsy::clumsy
thrashilcg::thrashilcg
establish::establish
upper::upper
bounds::bounds
exceeds::exceeds
remove::remove
measure::measure
distributed::distributed
open::open
,read::,read
alternatively::alternatively
lead::lead
faultrates::faultrates
directrelationship::directrelationship
ofa::ofa
pver::pver
processis::processis
11.ot::11.ot
tbe::tbe
transition::transition
peaks::peaks
valleys::valleys
peak::peak
rises::rises
returning::returning
span::span
oftime::oftime
thenext::thenext
9.7.1::9.7.1
ordinary::ordinary
page-sized::page-sized
memory::memory-
opposed::opposed
involve::involve
necessarily::necessarily
imm.ediate::imm.ediate
synchronous::synchronous
periodically::periodically
closed::closed
memory-mapped::memory-mapped
ren::ren
loved::loved
memory-map::memory-map
mmap::mmap
opened::opened
memory-maps::memory-maps
concurrently::concurrently
memory-the::memory-the
functionality::functionality
j---r::j---r
-rl..-r::-rl..-r
-r::-r-
.....c.c::.....c.c
..----r::..----r
.l::.l-
coordinated::coordinated
mechanisms::mechanisms
achieving::achieving
mutual::mutual
exclusion::exclusion
3.4.1::3.4.1
achieved::achieved
posix-compliant::posix-compliant
shmget::shmget
shmat::shmat
3.5.1::3.5.1
communicating::communicating
memorymapped::memorymapped
win32::win32
api::api
9.7.2::9.7.2
establishing::establishing
shared-menwry::shared-menwry
enable::enable
communication::communication
producer::producer
shared-memory::shared-memory
message::message
m.emory::m.emory
consumer::consumer
opens::opens
consum.er::consum.er
createfile::createfile
returns::returns
createfilemapping::createfilemapping
established::established
establishes::establishes
mapviewdffile::mapviewdffile
windows.h::windows.h
stdio.h::stdio.h
int::int
argc::argc
char::char
argv::argv
hfile::hfile
hmapfile::hmapfile
lpvoid::lpvoid
lpmapaddress::lpmapaddress
temp.txt::temp.txt
genericjread::genericjread
generic_write::generic_write
null::null
security::security
open_always::open_always
file_attribute_normal::file_attribute_normal
attributes::attributes
template::template
pagejreadwrite::pagejreadwrite
sharedobject::sharedobject
filejmap_all_access::filejmap_all_access
sprintf::sprintf
unmapviewoffile::unmapviewoffile
closehandle::closehandle
eliminate::eliminate
brevity::brevity
named::named
sharedobj::sharedobj
ect::ect
passing::passing
subsection::subsection
openfilemapping::openfilemapping
file_map_all_access::file_map_all_access
false::false
inheritance::inheritance
mapviewoffile::mapviewoffile
printf::printf
bringing::bringing
fm1ction::fm1ction
ii1stance::ii1stance
illustrating::illustrating
existii1g::existii1g
ii1::ii1
thatwas::thatwas
exercise::exercise
9.7.3::9.7.3
1.2.1::1.2.1
controller::controller
commands::commands
convenient::convenient
devices1::devices1
video::video
controllers::controllers
screen::screen
displaying::displaying
serial::serial
parallel::parallel
ports::ports
connect::connect
modems::modems
printers::printers
kinds::kinds
send::send
port1::port1
signal::signal
polling::polling
watch::watch
constantly::constantly
looping::looping
poll::poll
receives::receives
rnode::rnode
maintained::maintained
populated::populated
explained::explained
granted::granted
however1::however1
free-memory::free-memory
user-mode::user-mode
primary::primary
reasons::reasons
result1::result1
conservatively::conservatively
minimize::minimize
subject::subject
interact::interact
memory-without::memory-without
interface-and::interface-and
physically::physically
buddy::buddy
slab::slab
9.8.1::9.8.1
fixed-size::fixed-size
power-of-2::power-of-2
allocator::allocator
satisfies::satisfies
sized::sized
appropriately::appropriately
rounded::rounded
highest::highest
16-kb::16-kb
buddies-which::buddies-which
-each::-each
buddies::buddies
64-kb::64-kb
buddiesbland::buddiesbland
br::br-
next-highest::next-highest
32-kb::32-kb
21-kb::21-kb
teclmique::teclmique
coalescing::coalescing
coalesce::coalesce
coalesced::coalesced
128-kb::128-kb
original256-kb::original256-kb
drawback::drawback
rounding::rounding
33-kb::33-kb
guarantee::guarantee
9.8.2::9.8.2
nwre::nwre
slabs::slabs
-for::-for
representing::representing
semaphores::semaphores
instantiations::instantiations
stores::stores
instances::instances
semaphore::semaphore
relationship::relationship
respective::respective
slab-allocation::slab-allocation
objects-which::objects-which
free-are::free-are
12-kb::12-kb
continguous::continguous
struct::struct
task_struct::task_struct
fulfill::fulfill
3-kb::3-kb
7-kb::7-kb
partial::partial
fragn::fragn
entation::entation
exact::exact
aging::aging
deallocated::deallocated
act::act
allocating-and::allocating-and
releasing-memory::releasing-memory
time-consuming::time-consuming
advance::advance
appeared::appeared
decisions::decisions
selections::selections
arise::arise
tin1.e::tin1.e
systerns-notably::systerns-notably
solaris-prepage::solaris-prepage
lack::lack
resumed::resumed
restarting::restarting
offer::offer
servicing::servicing
prepaged::prepaged
loses::loses
wins::wins
9.9.2::9.9.2
invariably::invariably
powers::powers
4,096::4,096
4,194,304::4,194,304
8,192::8,192
utilized::utilized
continuing::continuing
independence::independence
loss::loss
argue::argue
12.1.1::12.1.1
dwarf::dwarf
attributable::attributable
doubling::doubling
sam.e::sam.e
desire::desire
argues::argues
tall::tall
accurately::accurately
isolate::isolate
102,400::102,400
saving::saving
queueing::queueing
sector::sector
answer::answer
historical::historical
trend::trend
edition::edition
9.9.3::9.9.3
reach::reach
introduced::introduced
translations::translations
resolved::resolved
related::related
cheaply::cheaply
construct::construct
hungry::hungry
metric::metric
multiplied::multiplied
spend::spend
resolving::resolving
double::double
memory-intensive::memory-intensive
prove::prove
approacl1::approacl1
size-say::size-say
kb-we::kb-we
quadruple::quadruple
8-kb::8-kb
64-entry::64-entry
256mb::256mb
majority::majority
applications-such::applications-such
databases-to::databases-to
-not::-not
hardware-to::hardware-to
costs::costs
trends::trends
softwaremanaged::softwaremanaged
mips::mips
alpha::alpha
employ::employ
software-managed::software-managed
9.9.4::9.9.4
virtual-to-physical::virtual-to-physical
traditional::traditional
per-process::per-process
negate::negate
utility::utility
n1.anager::n1.anager
page-lookup::page-lookup
9.9.5::9.9.5
unaware::unaware
awareness::awareness
underlying::underlying
contrived::contrived
informative::informative
initialize::initialize
128-by-128::128-by-128
inti::inti
128j::128j
row::row
127j::127j
preceding::preceding
zeros::zeros
16,384::16,384
scatter::scatter
weighted::weighted
stage::stage
sigicificant::sigicificant
packed::packed
packaging::packaging
bin-packing::bin-packing
pack::pack
interpage::interpage
randomize::randomize
potentially::potentially
diminishing::diminishing
object-oriented::object-oriented
9.9.6::9.9.6
interlock::interlock
emory::emory
usb::usb
events::events
tape::tape
unacceptably::unacceptably
locked::locked
lock::lock
usual::usual
unlocked::unlocked
waits::waits
perfect::perfect
apparently::apparently
delaying::delaying
wasting::wasting
effort::effort
spent::spent
brought-in::brought-in
turned::turned
dispatched::dispatched
dangerous::dangerous
overuse::overuse
hurt::hurt
multiuser::multiuser
trusting::trusting
hints::hints
disregard::disregard
9.10.1::9.10.1
implements::implements
clustering::clustering
handles::handles
faultil1.g::faultil1.g
exceed::exceed
rnaximum::rnaximum
incurs::incurs
tactic::tactic
automatic::automatic
trimming::trimming
evaluating::evaluating
removes::removes
reaches::reaches
free-page-frame::free-page-frame
single-processor::single-processor
multiprocessor::multiprocessor
x86::x86
clearing::clearing
invalidatil::invalidatil
look-aside::look-aside
9.10.2::9.10.2
assigns::assigns
imperative::imperative
parameter-zotsfree-that::parameter-zotsfree-that
lotsfree::lotsfree
pageout::pageout
hands::hands
scanning::scanning
front::front
scans::scans
setting::setting
examines::examines
appending::appending
reclaimed::reclaimed
scam::scam
scanrate::scanrate
slowscan::slowscan
fastscan::fastscan
progresses::progresses
fasts::fasts
withfastscan::withfastscan
distance::distance
determil::determil
handspread::handspread
cll::cll
minfree::minfree
desfree::desfree
scanner::scanner
investigating::investigating
scam-ate::scam-ate
pass::pass
thousand::thousand
uncommon::uncommon
intention::intention
30-second::30-second
enhancements::enhancements
enhancement::enhancement
recognizing::recognizing
processes-even::processes-even
eligible::eligible
claimed::claimed
scannerare::scannerare
skipped::skipped
page-scanning::page-scanning
distinguishing::distinguishing
regularfiles::regularfiles
11.6.2::11.6.2
raise::raise
worrying::worrying
availability::availability
consults::consults
updated::updated
and-in::and-in
theory::theory
least-the::least-the
capacity::capacity
suffers::suffers
approximations::approximations
frame-allocation::frame-allocation
suggesting::suggesting
schedulil::schedulil
mappil1g::mappil1g
req1.1ire::req1.1ire
allocators::allocators
reqmnng::reqmnng
systern::systern
prep::prep
1,024-kb::1,024-kb
guide::guide
draw::draw
tree::tree
followilcg::followilcg
12-bit::12-bit
256-byte::256-byte
hexadecimal::hexadecimal
dash::dash
9ef::9ef
minimization::minimization
distributing::distributing
evenly::evenly
specifically::specifically
iii::iii
time-measured::time-measured
utilizations::utilizations
answers::answers
install::install
bigger::bigger
n1.enl0ry::n1.enl0ry
disks::disks
page-fetch::page-fetch
measured::measured
alternatives::alternatives
happening::happening
helping::helping
microsecond::microsecond
blocked::blocked
i.e::i.e
questions::questions
modifications::modifications
opposite::opposite
actions::actions
ilccurred::ilccurred
nonresident::nonresident
user-level::user-level
kernellevel::kernellevel
multithreaded::multithreaded
matrix::matrix
array-initialization::array-initialization
loops::loops
detect::detect
detects::detects
monitoring::monitoring
candidate::candidate
free-france::free-france
degenerate::degenerate
nt::nt
scale::scale
scalability::scalability
held::held
segment-replacement::segment-replacement
consecutive::consecutive
cam::cam
requesting::requesting
fault-that::fault-that
characterize::characterize
identify::identify
measures::measures
regions::regions
nonsuspended::nonsuspended
regularly::regularly
discard::discard
pagereference::pagereference
page-reference::page-reference
catalan::catalan
c11::c11
treeenumeration::treeenumeration
formula::formula
ell::ell
iil::iil
manchester::manchester
university::university
muse::muse
observe::observe
bears::bears
mattson::mattson
demonstrated::demonstrated
proved::proved
prieve::prieve
fabry::fabry
enl::enl
lanced::lanced
carr::carr
developed::developed
denning::denning
wulf::wulf
successfully::successfully
applied::applied
burroughs::burroughs
bssoo::bssoo
wilson::wilson
algoritluns::algoritluns
jolmstone::jolmstone
memory-fragmentation::memory-fragmentation
knowlton::knowlton
1965l::1965l
peterson::peterson
norman::norman
purdom::purdom
stigler::stigler
bonwick::bonwick
adams::adams
memory-fitting::memory-fitting
stephenson::stephenson
bays::bays
brent::brent
survey::survey
memory-allocation::memory-allocation
solomon::solomon
russinovich::russinovich
mcdougall::mcdougall
mauro::mauro
mckusick::mckusick
ganapathy::ganapathy
schimmel::schimmel
navarro::navarro
ortiz::ortiz
real-time::real-time
embedded::embedded
1998b::1998b
companion::companion
permanently::permanently
on-line::on-line
medium::medium
creator::creator
attach::attach
sequentially::sequentially
randomly::randomly
synchronously::synchronously
greatly::greatly
slowest::slowest
component::component
wide::wide
interface::interface
bottleneck::bottleneck
optimize::optimize
