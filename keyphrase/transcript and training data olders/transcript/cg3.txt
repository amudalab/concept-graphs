okay so last time we are talking about drawing a line right using raster graphics and what we looked at basically was a two algorithms one of them was dda and the other one was midpoint line algorithm (Refer Slide time 1:18 min)



right so the basic idea there was that we wanted to simplify the process to decide which point to plot next right and the strategy was that if i have a line given then i define a function form which is F xy which is nothing but the implicit form of the line ax plus by plus c equals to zero one i define a line using this representation right then the question we were trying to ask is that the midpoint between E and NE which are the candidates to be plotted ones i have plotted this point right how do i decide whether to plot E or NE right east or the north east point and it get reduced to the evaluation of the midpoint M for the function fxy all one needs to do is check the sign of this fxy right so substituting for M and decide whether this is below the line or above the line if it is greater than zero it is below if it is less than zero it is above the line and that in tern decide whether i should plot E or NE right if it is above the line that means i should plot E because E is closer to the line that is the main idea and similarly if it is below the line then NE is closer to the line therefore i should plot NE so and then we basically formed an algorithm(Refer Slide time 3:03 min)



by which this F xy which is actually acting as a decision variable decision function right how do we update this decision function for the next subsequent points to be plotted so there if i had plotted E then what is the evaluation i need to consider that is i would evaluate F xy at M prime right similarly if i plot NE then i would do the evaluation for M double prime right so that is the basis of the algorithm that why we call this as midpoint line algorithm so this was about drawing or plotting a line right so we move on to some other primitive let say iam interested in (Refer Slide time 4:07 min)



plotting this circle yes thats correct (question) right so see the idea here is that if iam able to address the problem of plotting or drawing line in one option that we figure out then we can actually do similar process for the other option right so the question was a what happen if i have to plot a line in a other option right so i can for instance change the role of x and y and keep the algorithm the same right that will take care of that if i have to plot a line in another option then i can do it okay so now we move on to let say drawing or plotting a circle right so as we know that the circle is represented in the form like x square plus y square equal to R square right ones again one can see the problem of plotting a line as the matter of let say i run through x value from zero to r right and obtain the value of y corresponding to the x value i gave from this equation i had plotted right just solving the equation right now what is the implication of that yah so the implication of that for instance if iam considering let say the first coordinates right so i start from here somewhere which is the point at zero arc right and these are the subsequent point which get plotted by using just solution of this equation right now what you observe here is that the sampling which i have in y right that is the the points which i plot from this point to this point the gaps keep increasing right that may not be a good strategy then i have to plot this primitives in some what uniform sample by right here by the sampling is somewhat changing then i go from let say from this point to this point right so now the issue is that can be device a mechanism by which we can avoid this right and one of the ways to see is that the something similar what we did in the case of line drawing right where we are treated the line let say given the fact that you know the slope of the line by the specification of two end points right can be break down this problem  in to let say half times right so the question is let say if i consider if i consider a plot of circle (Refer Slide time 7:24 min)



involocted in this case there is a point on the circle in second options right it is an interesting property the circle offers is that given this point xy to the value xy how many additional points i can know from this xy three three anybody else somebody saids number eight including this right because thats right so there are reflection to xy and there are also reflections to this then x is equal to y right so there exist (Refer Slide time 8:14 min)



what we call as eight way symmetry in case of given this point xy in this option i can know seven of the points right just by the value xy which indicate that if i plot the circle in this option i can plot the entire circle right so thats what we are going to look at right and let us say a we still want to use something similar to what we did in line drawing okay so we have a representation similar to the implicit representation of the line which was in terms ax plus by plus c close to the level here also we have an implicit representation in terms that x square plus y square is equal to r square which i can see as a (Refer Slide time 9:27 min)



F xy which is nothing but x square plus y square minus R square right and i still want to do this in a simple fashion where i just need to for instance take a sign this function to able to decide what should do i next right and this for instance or a given point xy if i have an evaluation of Fxy then it is equal to zero that means xy lies on the circle right if it is greater than zero i know that xy is outside the circle fine and if it is less than zero it is inside the circle thats what we want to explain and then ones again let say if i have a point plotted p xp yp then the candidate which need to be looked at the point E and the point SE right remember we are talking in the second option right okay so which in terms suggest that if i do an evaluation of that point M which is the midpoint we can SE and ME and try to answer this question on the value of F xy and just evaluate the sign of it indicates to me whether i should consider E or S okay fine thats what it is again in talking in terms of evaluation of the midpoint to this implicit function F xy so the straight forward extension to what we have seen in the case of lines okay so this is what we are obtaining (Refer Slide time 11:36 min)



that we evaluate FM and if it is less than zero and is inside the circle and being inside the circle means that the point E is closer to the circle therefore E should be plotted right we choose E and if it is greater than zero then M is outside the circle then we need to choose SE right okay so now we have the algorithm just the way we had line drawing we have circle drawing the only thing is i again we have to worry about how do we change this these (Refer Slide time 12:27 min)



right what is the update of these according whether we have plotted the E point or the south east point so once again we have the old d which was the evaluation of F M right which is nothing but xp plus one and yp minus half right so we just substitute that and if it is E which is plotted right which is from the evaluation of the fact is that the old is less than zero right we evaluate new d by that means what we are saying is that E was plotted right if E was plotted then i need to consider M prime for the subsequent evaluation fine thats what iam doing i get the new as FM prime which i just substitute x as xp plus two and y as yp minus half this is what it is right this is what i get by substituting and then i get the change in the which i call it as delta d as d new minus d old which comes out as two xp plus three right so similarly i can do this for when it is SE right exactly the same okay so then (Refer Slide time 14:24 min)



if it is SE that means d old is greater than zero so again the equality you consider in either of the cases and be consistence right so equality now has been consider as the SE so when it SE i do the evaluation of f with respect to M double prime right so this things i had consider SE for the point to be plotted therefore the midpoint which needs to be consider as M double prime so i evaluate d new through F M double prime and i substitute the corresponding xy values for M double prime and i obtain this and then again the change in the value of d which i obtain as d new minus d old comes out as two xp minus two yp plus five right so i have basically the basic steps which i need for the algorithm except that i still need to worry about what happens on the start the initial value obtain so what happens at the initial value of d (Refer Slide time 15:54 min)



so let say we are talking since in second option i start from the point which is at O R right so the next midpoint which need to be considered as one R minus half right i do just the evaluations for this midpoint F one R minus half and which gives me five by four minus R right okay so with this i have all the necessary steps to come out the algorithm to plot the circle in second option and using the symmetry of the circle i can plot the entire circle right thats what the algorithm looks like i start from x is equal to zero y is equal to R (Refer Slide time 17:01 min)



the d start is this right right pixel means i plot the pixel i draw the pixel at that location xy and this while is indicate that iam working in the second option right so if d is less than zero i consider the delta E for updating d right and i just change the value of x right and when it is otherwise then iam updating the through the delta se right which means that i plot the SE point right which is x is incremented by one y is decremented by one right and so on so thats the end so we have the algorithm  right now ones again this evaluation of d indicates that iam doing a real arithmetic right so may be i like to avoid that

okay so take that as an exercise there is a simpler actually a pointer to it is that if i have d is equal to five by four minus R right the question is that what happens if i just consider that d is equal to as one minus one another words iam defining let say some other d which i call it let say capital D which is small d minus one by four right does that affect the algorithm comparison would have here d less than zero will implies that capital D less than minus one by four does that change anything the fact that we are talking in term of incrementing by one every time it actually does it right so the algorithm remains in tact even if when i change this evaluations into one minus m right is that okay so now we are yes please we will do this comparison in capital d should be less than minus one micron no iam now just saying that thats what it implies if iam saying small d less than zero right but let say if i just say instead of d capital D less than minus one by four to let say capital d less than zero it doesnt really change anything right because the way iam going to increment right

okay now let we have now line algorithm circle drawing algorithm right now we can move on to some other primitives for instance let say more of the ellipse (Refer Slide time 20:44 min)



okay anything if we have some some implicit representation we can actually think in the similar way right so here we have the equation of the ellipse given as some x square over a square plus y square plus b square is equals to one so the only difference here is that i do not have this nice gateway symmetric which i had in case of circle right but i do have some property by which i can partition the computation right one instance if you look at one region here right here if i had a plotted point here then the next point which need to be consider as E and SE whereas in this region if i have a point this is plotted then i need to consider the point S which is the south and SE right and that is basically governed by the fact the slope of the curve right if i consider a tangent here right so when the this is the break when i have the slope is equal to minus one right or in other words i can also talk in terms of the gradient right which is the sort of easier to compute that fact that i have this representation in a implicit form right which is basically f xy and the gradient of f xy can be computed straight forward right

so again i can map the problem of plotting ellipse in a similar fashion the way i done it for circle right so this is what we have as let say the midpoint algorithm used in different primitives slot so the next thing which now you would like to talk about is this is about the drawing primitives are rasterization of primitives right next thing which we are going to talk about today is the clipping so we are now moving if you recall the rendering pipeline so we had the last process as the rasterization and just before that we need to perform clipping so what do you mean by clipping (Refer Slide time 23:50 min)


	
clipping is basically extraction of the primitives for the data you have inside a region which generally call it as the window so whatever comes in that window that what we are interested in okay which in turn means that we are looking at a scheme by which we can discard part of half fully the primitives which are outside the window so that what we mean by primitives fine now again we can look at in terms of the complexity of the primitives to answer this questions whether that primitive is inside or outside that window fine let say we talk about the smallest primitive which is a point so we are trying to answer this question whether the that point lies within between the region of interest of the window or it is outside that okay now for the purpose of the simplicity inconvenience let us assume that window is a rectangular window okay so there is no reason that window is already rectangular but let say for the purpose of simplicity we consider that  window to be a rectangular window fine we are looking at the question of whether a particular point is entirely within that window or its outside that window okay and typically the if we have a rectangular window we define the window through these point which are the lower bottom most left most point and the top most and right most point 

okay thats what we have now through this a given that i have a the coordinate of point in question as xy right the simpler evaluation of xy with respect to the extend of the window which are define in x and y i can answer the question just looking at whether x is greater than equal to xL and is less than xR equal and y is greater than or equal to yb and less than or equal to YT unable to answer this question whether the point is inside the window or not okay so with this we we can see easily that the point Q is inside and the point P is outside the window right so its a very simple thing obvious okay now we would move on to a slightly more complex primitive which is line okay (Refer Slide time 27:17 min)



so you want to perform clipping of line that means again looking at what portion if there is a portion to be removed or not right which is the outside the window okay now the question is that since i know how to clip a point that means to answer the question whether a point outside or inside the window can i extend that idea to answer the question whether a line is inside or outside the window if the frame is rectangular it is possible to say something anybody who contradict okay so obviously there are cases where this formulation allows me to do the clipping of line for instance in this case let say this point is out this point is out this point is out this point is out right and i can perhaps say that this is inside this is outside

okay but what happens to this okay the first thing of course there is a point which is inside so when iam talking about the point clipping to be used  in the context of line clipping iam basically considering the end points of that so iam trying to answer the question with respect to the end points of the line and then see whatever answer i get for the end points can i declare that the line is inside or outside okay so clearly these cases where one of the point terms out to be inside and one of the point terms out to be outside i have to do something more right i cant say that the line is rejected or line is accepted similarly for this but here is this case with the two end point turn out to be the outside the window right if i do the evaluation in the manner which we have seen but the line is not outside the window completely okay that suggest that i cannot simply the point clipping to do line clipping i need to do something more about it but then may be first of all i may be interested in devising a mechanism through which i can let say the reject or accept certain simple cases and do necessary further evaluation if need being right may be the first pass could be search that i have the mechanism by which i can suggest this is not possible to be inside or this is completely inside right so thats  what we are trying to look at first so in fact sutherland  (Refer Slide time 30:41 min)



cohen cohen and sutherland they introduced a clipping algorithm so ones again there is at a junction of the window to be rectangular right and if you look at if you extend this window and defining the adjoining zones to the window right and then decide from the fact that where the particular line lies in the zones round that window then may be you can answer this question whether i should consider the line which is inside or outside right for instance if i have this two points which are in the same zone here and which turns out to be outside the window i have a way to say that the line is outside is in it and similarly when i have this two end points inside this then i have way to say yes the line is inside fine what are we trying to do it trying to assign a some sort of a scheme by which we have the notion of this zones around this window and then we do the evaluation of the end points with respect to the zones 

okay now is there a way by which we can assign a certain representation by which we capture this nodes (question) okay so here is the suggestion he is saying that since we have the extend of that window then we can define this zones in terms of comparing with respect to the extends of this window these zones right thats okay what iam also interested in is that a some coding scheme in which i assign some code to this window or the zone or zones of the window right which actually gives me a very easy way of checking or comparing about the end points whether they are outside or inside or which side or which zone right in another words iam trying to assign some code to various zones i have around this window and as well for the window right so what are we trying to say that there is this line right and all i need to answer is that things which are above this line there are out if they are below this line they are end with respect to this line similar question is answer to with respect to this line the similar question is answer with respect to this line the similar question is answer with respect to this line so all iam saying is a one bit on and off with respect to these four edges of the window is in so i can have some kind of a code four bit code is in it which would decide about the various zones i have including the window right thats what they did cohen and sutherland is exactly they did it so they came out with this four bit code (Refer Slide time 34:49 min)



right indicating the zone of the end points with respect to the windows right so i have a for instance i may designate zero zero zero saying that this is my window right and this bit is on for the region which is about the window this bit is on for the region which is right to the window and so on right okay so now i can have the complete coding scheme for all the zones right okay so thats what i have (Refer Slide time 35:40 min)



right so this is basically a combination of a the fact that it is left to the window and above the window thats why there are two bits which are on fine so we now have a coding scheme which we can designate to the end points of the line by which we locate the point basically end points of the line in various source right now the question comes that how do i decide whether i can reject a line easily or i can accept a line easily (question) okay so so some operations bit wise operation can actually guide us to this so the simple acceptance is rather easy right the two end points have to have zero zero zero right so thats it basically an example of (Refer Slide time 37:04 min)



trivially accept right the two end points have the end code as all bits zero fine this fairly easy okay now suggestion is given that some bit wise operation actually indicate to me what should i do for rejecting a line and thats what we are looking at so we have a mechanism by which we trivially accept a line and similarly we trying to find a mechanism by which we trivially reject a line bit wise AND wonderful okay thats exactly we are looking at so if i do logical AND (Refer Slide time 37:55 min)



right and if it doesnt turn out to be all zero then then i have a trivially reject case zero right okay so these are the cases where i can consider a trivially rejection fine now we have a case where we call that as a potentially visible (Refer Slide time 38:30 min)



potentially visible means this logical AND operations is zero right so if it is potentially visible we have these cases right so now if we have such cases so this demands something extra right so this demands something extra (Refer Slide time 39:23 min)



so what do we do if you have now something extra to do we can actually do the simple strategy where we can divide this into this into segments right the line in question which is potentially visible is subdivided into segment and then apply trivially acceptance of rejection tests to the segments right so for instance in this case this if this is the division of the segments then i can then find out that BD segment would get trivially rejected where as A B segments will get trivially accepted so we need to some subdivision of the line and keep performing this trivially rejections and acceptance operation (question) yes there are various ways in which one can look at it one may be z you just have a fixed subdividing strategy right which could be just divided by two and then keep doing in those segments right so what you are having eventually is some sort of a fragmentation of these lines okay and then each fragmented in term gets tested right okay so and here one need to be just precaution is that you can choose any order of the edges you have but be consistence to it okay so that basically gives you the entire algorithm for cohen and sutherland so very very simple algorithm extremely simple so if you look at its a very simple but still very popular algorithm (Refer Slide time 41:53 min)



because from the fact that this is junction of rectangular window is relevant right in most applications we have the windows are rectangular right so that is why it is still popular though with this limitation right now if one wants to extends this idea of clipping using encoding the different zones you can extend this idea to three d clip right all you saying is that there is a there is a three d volume right and each face of this volumes basically acting as the edge of the window we had in two case right so the test which will need to perform with respect to a plane but it is exactly the same distance right and what is the size of the bit code you would get six because you are going to answer this question with respect to each face of this orthographic one right so the size of the bit code we have is six okay so similarly if you had a window which is at triangle in a two d case all you need is how many bits three 

okay this is very simple but elegant way of doing clipping okay so next time what we are going to look at is try to relax this limitation of rectangular region and come out with a with an algorithm of clipping where the reason of the window is not necessarily rectangular (question) but no the constrain which we will which will impose the region is convex right so you understand what convex is right so so we will elaborate on it even about the convexity of the polygon or the region right how do we determine that and then talk about clipping of line with respect to convex lens right so see so the question is how do we find out the point of intersection with respect to edge of the window is in it so see you have the the size of the window defined in terms of the extend of the window right you have this xL YB xR yT right that always define this equations of edges just a matter of substituting this of checking the value of XY with respect to this right so you have the equation of edges you have the equation of line the fact you have the end points right we can find intersection no here i have not talked address the issue of integer address matrix this is a real arithmetic okay we stopped here thank you

Transcriptor name: Karthick.D
Proof reader name:


	 	 
