
so a last time we discussed about the two basic overview of let say graphics as a system one was the rendering pipe line (Refer Slide time 1:08 min)



where we looked at the various processing units which are required from converting it three dimensional scene to a two d image we also looked at the various components in the graphics system which are also shown here basically we have the input devices the processor which is the cpu and now a days we also have the gpu the different kinds of memory so this all thing is basically a the processing hardware in conjunction to that we have what we call us the frame buffer which basically acts as an interface between the processing units and the output disk plane so in this frame buffer what we have is a discrete the grid representation of the raster or the screen so we can basically conserve this to be as an array of pixels where we define the resolution the special resolution of the pixels in area as a number of pixels and the depth in terms of the number of bits per pixel so we actually looked at closely the interface between the frame buffer and the output display in particular CRT last time and we also looked at the possibility of enhancing let say the depth by introducing lookup table which increases the resolution and depth of pixels so let me also give you some list of devices which are possible can be used for input devices (Refer Slide time 3:20 min)



so one can actually think of input devices in two ways one which are physical devices so physical meaning as the observe the devices of the kind keyboard mouse tablet etcetera so these are the physical devices which we use for a giving input to the system and there is also a notion of logical devices so logical devices are basically pertain to the kind of functions which we want to associate as an interface to the program right its a high level interface to the user program so typically if you look at the logical devices we generally use or locator this is we want to locate the position of a point right so its a locator device and the typical physical device which  is associated to the locator device as a logical devices the tablet so if you have seen tablet tablet is nothing but a pad we have a stylus which defines some sort of cross here on the top of the tablet and thereby gives the position of a point on that pad so one can also use other devices but tablet seems to be some kind of a natural choice for locator device

so similarly valuator valuator is a device which gives a returns if floating value so this is some thing similar to as we use the regulator to control the speed of the fan so this is what we are using evaluator as you just returns a real value which we can use it for controlling the program then there is the device suspect device or a selection device so one of the natural choices for a pick devices could be a light pen this is a popular seen now as a device which is associated to the pdi s then we have choice device so these are the device like buttons all the function keys so they just make a choice of annexure right on and off and then there is a string device which unable to see you to give an input as alpha numeric input in the form of a string so the natural choice for such a device is the keyboard and there is also some sort of three d input devices like a space ball or three d mouse or a data glove which can also be used for the purpose of giving input or manipulating the program in a graphics system right so what i would suggest is that all of you look at as a reading assignment (Refer Slide time 6:32 min)


 
from a either a foley van dam book chapter four or hearn and baker chapter two so this basically cover the graphic hardware as a system and elaborates further on work we have discuss in terms of graphics system now what we continue on is the raster graphics process so if you recall the pipe line (Refer Slide time 7:00 min)



the rendering pipe line the last processing unit was rasterization where we wanted to convert the two d scene which was mostly available in a continues representation to a discrete representation which is in terms of pixels or the rasters of the display devices right so that process is rasterization or pixelization or we also referred to as scan conversion so we are going to look at this process in terms of drawings algorithms for  various primitives so we consider the simpler primitives first which is drawing a line right so we have a line as a continues line given to as and what we would like to map it to is to a raster device which is collection of pixels right so let us say when we treat this line drawing algorithm (Refer Slide time 8:11 min)



we have the specification of the line in terms of the two n points x one y one and x two y two so this are the two end points given to us which in tern define the line so we can always represent this line in the slope and the intercept form this is y is equal to mx plus b where m can be computed as dy by dx given as y two minus y one over x two minus x one which is nothing but delta y by delta x okay so now given the slope and the initial point let say x one y one one can think off devising an algorithm to draw the line intercepted by x one y one x two y two right so all it is basically suggesting is that if you traverse from x one y one in the direction of the slope and the pixel you encounter you basically draw them or paint them so this is also called as the digital differential analyzer as DDA coming from the its application from the earlier engineering mechanical engineering or other engineering disciplines so all we are looking at is this differentiation of a in the form of dy by dx which is given as the slope of the line and we want to use this information to be able to plot the line fine 

okay so now all it is saying is that a for any point xi yi i can write line passing through this point the next point which could let say xi plus one yi plus one this also satisfies the equation of the line and now this xi plus one basically can be written in terms of xi plus delta x right so my point yi plus one can be written in this form okay so if you look at the process which is involved in the drawing of a line basically is that given this point is already drawn or plotted you would like to answer the question whether to plot this point or that point right and that is basically determined by this m right so now (Refer Slide time 11:09 min)



if i assume delta x which is saying that i make an increment in x by one which is valid in the case when we are doing the rasterization we go one pixel by one pixel then all we are saying is that the x are going to be incremented by one therefore xi plus one equals to xi plus one right this is the delta x and yi plus one would be nothing but yi plus m right so this is straight coming from the equation of the line so now i can think of devising a complete algorithm where i start from let say point x one y one and i can compute m and knowing m and i can decide what pixels to drawn right fine okay so the algorithm would be something like this (Refer Slide time 12:23 min )



you have y is equal to y one to start with okay and we traverse from x one to x two that covers the entire range of the line right and let us say we assume that an is less than one therefore we are talking when the line is in the first talk time okay so we change x y one every time and beside what point to plot that means whether two increment why are not depending on what m is fine so what we are saying is we write pixel at position x and take a round of y right where y gets incremented by m this is the simple application of the equation of the line okay so at any instance of time for the plot of the line we have xi round yi fine okay so this involves an operation like around which may not be a desirable operation you want to have is requiring floating point or semantics for instance right so other thing is that (Refer Slide time 13:56 min)



as for as treating the various octants so want we had given the algorithm for m is less than or equal to one that is the line is in first octants now if i have the line in second option that means m is greater than one right so the line looks like some thing like this all i need to do is exchange the role of x and y so the algorithm basically doesnt change all i need to do is change the role of x and y right so i can treat line in any option okay i have basically algorithm for a line drawing in an any option okay now this was the basic idea of using the information of the slope to be able to plot this line and as i said that  this require the operation as some sort of round operation which one may want to avoid so now the question is can we avoid such a such an operation okay so if you look at the problem in the following fashion that is given this point already plotted let say okay and again let say  we talking about the line to be in the first option then we are trying to answer the question that when i increase the x right by increase the x by one whether to plot this point or that point right this are the only two candidates which one can plot once we have already drawn this point  right so if i device a mechanism by which i can decide in some efficient way to decide whether this point is to drawn or that point has to be drawn thats what iam looking at right and let say we want to avoid floating point are a symmetric so now the question is can we do it so lets lets try to further see this (Refer Slide time 16:45 min)


as i try to elaborate here so what i said is the following see this is the point which we have plotted right we assume that this is the point which has been already plotted now we have to answer the question whether iam going to plot this point E which is east of this point or iam going to plot this which is north east point of this point okay and iam trying to look at an efficient method by which i take this decision whether to plot this or this and so let see iam assume that the line is in first option fine so now if i consider the mid point which is between E and NE the location of this point point M with respect to the line does it decade to me whether i should consider the point E or i should consider the point NE right because if you see this point M if i terms out to be below this line then this any point need to be run because it indicate that NE is actually closer to the line 

okay so so basically we are going to look at whether this point is closer or that point is closer so if is on beside below the line then NE is the point to be plotted similarly if M is above the line right in that case E is to be plotted right because that is closer to the line makes sense so then it biased on to answering the question that the mid point m whether it lies below the line or it lies above the line thus all we try to answer and if we are able to answer this question efficiently then we have a way to decide which point to plot next and right in fact this is a very powerful thing and if you try to further extend this idea of looking at which side of the line the point is in three d then we are looking at let say if i consider instead of this line a plane then we are looking at the situation whether a particular point is in the front of the plane or at the back of the plane and thats a very useful tool to be able to answer many questions in the context of computer graphics so its a very useful technique and often we we actually talk in terms of half plane in side so half planes are suggesting you are on one half space of the plane right so now let us see how do we device this (Refer Slide time 20:28 min)



so if i consider the line as some implicit function something like fxy goes to zero right and then if it terns out that the evaluation of this fxy gives me the indication whether the point is below the line or above the line or even on the line right for instance when fxy goes to zero it suggest that xy is on the line it satisfies that function if fxy is greater than zero then xy is below the line similarly if fxy is less than zero then xy is above the line so all it boils on to is basically the evaluation of this function fxy for xy right if i have an implicit representation of a line then all i need to do is evaluate that as a function and get the answer whether that gives you greater than zero or less then zero and that gives me the answer whether the particular point is below the line or above the line right now if you consider an implicit representation of the line (Refer Slide time 21:56 min)



which is nothing but here fxy is equal to ax plus by plus c goes to zero right so thats an implicit form of the line right so again let say if i consider the line in the first option so thereby m is between zero and one and the slope and interception representation of the line is y is equal to dy over dx x plus B then i can all this map the coefficients a b c here right i just right this in a similar fashion xdy minus ydx plus bdx is equal to zero that gives me a is equal to dy b is equal to minus dx and c is equal to bdx right so these two are basically equivalent i can always right line in either of this forms okay so this actually give me the evaluation of the coefficients abc which i can compute from the input of the line right so for instance iam giving the two end points of the line so i should be able to compute the necessary coefficient which iam using for the evaluation of fxy right so thats what preciously it is helping for so now once i have this implicit representation then now the question becomes that i would perform an evaluation of this F (Refer Slide time 23:56 min)



which is to see whether the mid point m is below the line or above the line right so basically that is to say that i have a decision variable d let say which is nothing but substituting the corresponding xy values for the point m that is xp plus one and yp plus one by two if i was given that the point xp yp is the point which has been plotted last fine so as for as the decision variable d is concern now again going back to the implicit representation of the line as fxy now i can have substuting the xy as xp plus one and yp plus half effectively i get d is equal to like this a xp plus one plus b times yp plus half plus c now if i see that d is greater than M then d is greater than zero if i see that d is greater than zero then M is below the line then i would choose the north east point to be plotted this point okay so M is below the line i choose this point similarly when d is less than zero that is M is above the line then i will choose E point to be plotted here right so basically evaluation of the sine of the d determine whether i should plot E or NE (Refer Slide time 26:13 min)


okay now lets try  to see the further development of the algorithm now let say after doing the evaluation of FM which give you the result whether to plot E or NE right ones you have decided whether you are going to plot E or NE then you are going to do further evaluation for either M prime or M double prime right if you have plotted E then the point to be considered the mid point to be considered is going to be M prime and if you have plotted NE then the mid point which needs to be consider is M double prime so thats what i try to do i compute the new d the new decision variable which is the evaluation of F xy for M prime right which is basically M prime is nothing but with respect to xp yp it is xp plus two in x and yp plus half so thats what i do i substitute xy as xp plus two and yp plus half in my implicit form of the line and compute the d new thats what d new is and i had computed earlier d old right which was the evaluation of M as this a xp plus one plus b yp plus half plus c now if i take the difference of d new and d old it gives me a delta a change in d when i had considered that E was to be drawn when E was to be drawn the change in d is given as d new minus d old which is nothing but a or dy 

okay so what is the motivation of computing this delta the motivation of computing this delta is primarily to see the updation of d so you would be basically looking at the new instance of d every time you have plotted a point what change had happen to d fine and that would depend on the fact whether you have chosen to draw the east point or the north east point so this delta basically gives you the change in d now similarly i can conduct the computation when i had plotted NE so instead of E i have plotted NE what will be the change in d right so thats what i do so if the point NE was plotted the new d involves the evaluation of fxy for M double prime thats what i do here so this is an evaluation of FM double prime where i substitute for x is xp plus two and for y yp plus three by two right so we are looking at again with respect to this xp yp thats where my m double prime is right so if i substitute this as x by two fxy i get d new as this a xp plus two plus b yp plus three by two plus c and the d old as earlier computed was a xp plus one plus b yp plus half plus c right so again i take the difference to obtain the delta which is the  change in d when NE was chosen the point to be plotted last fine so this delta again gives me an updation of d if i had plotted the point NE what is the change in d i would have right so this delta NE gives me d new minus d old which is nothing but a plus b and which again can be written in terms of dy minus dx okay so what all i have done is basically i have set the ways to do the computation of d which i call it as the decision variable and also the respective change is i would have to do depending on whether i have plotted the east point or the north east point last so that basically sets up whatever is required for the algorithm of the line drawing okay so the entire algorithm may look like something (Refer Slide time 32:15 min)



like this so before actually we do this we need to worry about something what happens at the start (Refer Slide time 32:18 min)



so i have to do is the start of this algorithm right the start of the algorithm basically means that i have plotted or i know that a point lies as the n point to the line okay so i need to do in a evaluation of what will happen to the d which is my decision variable when i start which basically biased onto doing the competition of F at x not plus one and y not plus half so right its  actually if you see that at this point been (Refer Slide time 33:06 min)



a plotted point and this is x not y not right so d start would be this the evaluation of this point right so thats what we are trying to do here so the d start is basically evaluation of x not plus one y not plus half right which comes as this a x not plus one plus b y not plus half plus c which is the implicit form of the line now if you further simplify this you get this d start as a x not plus b y not plus c plus a plus b by two now if you observe this term a x not plus b y not plus c this is nothing but the equation of the line we had ax plus by plus c for the point x not y not and the fact that x not y not lies on the line right this whole expression becomes zero because it is on the line therefore it satisfies that fxy is equal to zero right so what becomes d start as d start is nothing now but a plus b by two 

okay so now if i substitute for a and b in terms of dy and dx from the slope intercept representation of the line then i have this as dy minus dx by two so what you observe here is that  when i compute d start which is now dy minus dx by two there is a division operation right so dx by d two so this may further require floating point operation if i dont do any thing else anything about it so let see if i want to avoid this division what should i do so if you look at the evaluation (Refer Slide time 35:40 min)



where d is coming from is basically from F xy which was ax plus by plus c right now if i instead of considering just ax plus by plus c if i consider two times ax plus by plus c it doesnt change anything right so the benefit of that that is that i would avoid this division by two right and do the corresponding changes to whatever we had computed for instances the data and the d s keeping in mind the new evaluation function as twice ax plus by plus c is it clear right because evaluation of this r fxy as a xy  plus by plus c doesnt  really change in terms of what we are deciding for the decision variable and the corresponding datas of  those decision variables so now with this d start computed and the redefinition of f xy the entire algorithm would look like this so what do i have i have dx computed from the exponent x two which are the two end points x of the two end points similarly dy as y two minus y one so dx and dy basically computed directly from x one y one and x two y two

okay the d start we have just seen is two dy minus dx right so without multiplying by two it was dy minus dx by two right so we further normalize by this by multiplying by two and we get d start as two dy minus dx and the corresponding deltas so the delta E which was earlier computed as dy and now with the modified f xy as twice dx plus dy plus c gives you the delta Es two dy similarly delta NE is now two times dy minus dx okay so correspondingly we change all the evaluations so delta E and delta NE also change so now if the start point is say x one y one then i assign x as x one and y as y one and then span all the values of x to be able to plot the line right so here i write pixel xy so right pixel is nothing but a command for drawing a point at that a particular location for it is either plot pixel or write pixel or whatever you want to use and then i run into this loop from x less than x two remember we are looking at line in the first act so that is why iam changing x and then decide whether to change y or not okay so now while x is less than x two i have the decision variable d and all i need to do is look at the sine of that d see whether it is less than or equal to zero or bigger than zero right so this equality sign can be either a commutated in this or in the else part so i could have also have written as d less than zero and then the else part would have taken greater than or equal to zero but i need to be consistence right so let us say i include this equality in this that means whenever it happens to be equal i plot accordingly the east part right so if i have the d less than or equal to zero the update to d is through delta E that is i just change in a x right so the next point to be plotted is just forward in x no change in y right the east point which i plot and accordingly i update the d is just by a constant term now and if it is else that means i have to plot the north east point where in i would need to change x as well as y so i increment x by y and i also increment y by one and accordingly i change the decision variable d with the delta value as delta NE okay  right now you can see and appreciate that why did we required this d delta E and delta NE 

so this was primarily do the updates of the d appropriately and it terms out that these delta E and delta NE are constants and do not depend on x and y when you are running in this loop right so this way i can basically plot the entire line between x one y one and x two y two and you also observe that the computation which it needs to perform or all integer arithmetic right so there is no floating point operation needed so this particular algorithm which is called as midpoint line algorithm midpoint because of the fact that midpoint is assisting in the process of evaluating what point to draw in the line or this is very close to which is very popularly known in computer graphics is the bresenhams algorithm so bresenhams algorithm and midpoint algorithm they are very very similar so what we have seen here is drawing of a line one can now think of doing the drawing of other primitives which are slightly more complex so for instance one can talk about drawing a circle drawing an ellipse and things like that right next time what we are going to look at is how do we plot a circle and let say a keeping the frame work of midpoint evaluation so what we have done in the case of line drawing we are trying to ask a certain question in term of which point to plot by doing an evaluation of a midpoint so can we use the similar idea and do the plot of the circle okay right thank you


Transcriptor name: Karthick.D
Proof reader name:

