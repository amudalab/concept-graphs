
Sparse array
 /firstHeading 
 bodyContent 

 tagline 
From Wikipedia, the free encyclopedia
 /tagline 
 subtitle 

 /subtitle 
 jumpto 

					Jump to:					navigation, 					search

 /jumpto 
 bodycontent 





This article has multiple issues. Please help improve it or discuss these issues on the talk page.





This article needs more links to other articles to help integrate it into the encyclopedia. Please help improve this article by adding links that are relevant to the context within the existing text. (September 2012) 







This article may be too technical for most readers to understand. Please help improve this article to make it understandable to non-experts, without removing the technical details. The talk page may contain suggestions. (February 2012) 







This article does not cite any references or sources. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (October 2011) 





In computer science, a sparse array is an array in which most of the elements have the same value (known as the default valueusually 0 or null). The occurrence of zero elements in a large array is inefficient for both computation and storage. An array in which there are a large number of zero elements is referred to as being sparse.
In the case of sparse arrays, we can ask for a value from an "empty" array position. If we do this, then for array of numbers, it should return zero, and for array of objects, it should return null.
A naive implementation of an array may allocate space for the entire array, but in the case where there are few non-default values, this implementation is inefficient. Typically the algorithm used instead of an ordinary array is determined by other known features (or statistical features) of the array; for instance, if the sparsity is known in advance, or if the elements are arranged according to some function (e.g. occur in blocks).
A heap memory allocator in a program might choose to store regions of blank space in a linked list rather than storing all of the allocated regions in, say a bit array.




Contents


1 Representation
2 Sparse Array as Linked List
3 See also
4 External links




[edit] Representation
Sparse Array can be represented as
Sparse_Array[{pos1 -> val1, pos2 -> val2,...}] or
Sparse_Array[{pos1, pos2,...} -> {val1, val2,...}]
which yields a sparse array in which values  appear at positions .
[edit] Sparse Array as Linked List
An obvious question that might be asked is why we need a linked list to represent a sparse array if we can represent it easily using a normal array. The answer to this question lies in the fact that while representing a sparse array as a normal array, a lot of space is allocated for zero or null elements. For example, consider the following array declaration:

double arr[1000][1000];

When we define this array as enough space of 1,000,000 doubles is allocated. As each double requires 8 bytes of memory, this array will require 8 million bytes of memory. Because this is a sparse array, most of its elements will have a value of zero (or null). Hence, defining this array will soak up all this space which will result in wastage of memory. An effective way to overcome this problem is to represent the array using a linked list which requires less memory as only elements having non-zero value are stored. Also, when a linked list is used, the array elements can be accessed through fewer iterations than in a normal array.
A sparse array as a linked list contains nodes linked to each other. In a one-dimensional sparse array, each node consist of an "index" (position) of the non-zero element and the "value" at that position and a node pointer "next"(for linking to the next node), nodes are linked in order as per the index. In the case of a two-dimensional sparse array, each node contains a row index, a column index (which together gives us its position), a value at that position and a pointer to the next node.
[edit] See also

Sparse matrix

[edit] External links

Boost sparse vector class
Rodolphe Buda, "Two Dimensional Aggregation Procedure: An Alternative to the Matrix Algebraic Algorithm", Computational Economics, 31(4), May, pp.397408, 2008.

 
NewPP limit report
Preprocessor visited node count: 2142/1000000
Preprocessor generated node count: 8777/1500000
Post-expand include size: 28400/2048000 bytes
Template argument size: 17418/2048000 bytes
Highest expansion depth: 25/40
Expensive parser function count: 5/500

 Saved in parser cache with key enwiki:pcache:idhash:697257-0!0!0!!en!4!* and timestamp 20130122175512 
  /bodycontent 
 printfooter 

				Retrieved from "http://en.wikipedia.org/w/index.php?title=Sparse_array&oldid=524430536"				
 /printfooter 
 catlinks 
Categories: ArraysHidden categories: Articles with too few wikilinks from September 2012All articles with too few wikilinksArticles covered by WikiProject Wikify from September 2012All articles covered by WikiProject WikifyWikipedia articles that are too technical from February 2012All articles that are too technicalArticles needing expert attention from February 2012All articles needing expert attentionArticles lacking sources from October 2011All articles lacking sources  /catlinks 

 debughtml 
 /debughtml 

 /bodyContent 

 