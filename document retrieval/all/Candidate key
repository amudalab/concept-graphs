
Candidate key
 /firstHeading 
 bodyContent 

 tagline 
From Wikipedia, the free encyclopedia
 /tagline 
 subtitle 

 /subtitle 
 jumpto 

					Jump to:					navigation, 					search

 /jumpto 
 bodycontent 
In the relational model of databases, a candidate key of a relation is a minimal superkey for that relation; that is, a set of attributes such that

the relation does not have two distinct tuples (i.e. rows or records in common database language) with the same values for these attributes (which means that the set of attributes is a superkey)
there is no proper subset of these attributes for which (1) holds (which means that the set is minimal).

The constituent attributes are called prime attributes. Conversely, an attribute that does not occur in ANY candidate key is called a non-prime attribute.
Since a relation contains no duplicate tuples, the set of all its attributes is a superkey if NULL values are not used. It follows that every relation will have at least one candidate key.
The candidate keys of a relation tell us all the possible ways we can identify its tuples. As such they are an important concept for the design of database schema.




Contents


1 Example
2 Determining candidate keys
3 See also
4 References
5 External links




[edit] Example
The definition of candidate keys can be illustrated with the following (abstract) example. Consider a relation variable (relvar) R with attributes (A, B, C, D) that has only the following two legal values r1 and r2:

r1

A
B
C
D


a1
b1
c1
d1


a1
b2
c2
d1


a2
b1
c2
d1



r2

A
B
C
D


a1
b1
c1
d1


a1
b2
c2
d1


a1
b1
c2
d2


Here r2 differs from r1 only in the A and D values of the last tuple.
For r1 the following sets have the uniqueness property, i.e., there are no two distinct tuples in the instance with the same values for the attributes in the set:

{A,B}, {A,C}, {B,C}, {A,B,C}, {A,B,D}, {A,C,D}, {B,C,D}, {A,B,C,D}

For r2 the uniqueness property holds for the following sets;

{B,C}, {B,D}, {C,D}, {A,B,C}, {A,B,D}, {A,C,D}, {B,C,D}, {A,B,C,D}

Since superkeys of a relvar are those sets of attributes that have the uniqueness property for all legal values of that relvar and because we assume that r1 and r2 are all the legal values that R can take, we can determine the set of superkeys of R by taking the intersection of the two lists:

{B,C}, {A,B,C}, {A,B,D}, {A,C,D}, {B,C,D}, {A,B,C,D}

Finally we need to select those sets for which there is no proper subset in the list, which are in this case:

{B,C}, {A,B,D}, {A,C,D}

These are indeed the candidate keys of relvar R.
We have to consider all the relations that might be assigned to a relvar to determine whether a certain set of attributes is a candidate key. For example, if we had considered only r1 then we would have concluded that {A,B} is a candidate key, which is incorrect. However, we might be able to conclude from such a relation that a certain set is not a candidate key, because that set does not have the uniqueness property (example {A,D} for r1). Note that the existence of a proper subset of a set that has the uniqueness property cannot in general be used as evidence that the superset is not a candidate key. In particular, note that in the case of an empty relation, every subset of the heading has the uniqueness property, including the empty set.
[edit] Determining candidate keys
The previous example only illustrates the definition of a candidate key and not how these are determined in practice. It is important to determine all superkeys, which is especially difficult if the relation represents a set of relationships rather than a set of entities. Therefore it is often useful to attempt to find any "forgotten" superkeys by also determining the functional dependencies. We can derive more superkeys by applying the following rule:

if S is a superkey and XY a functional dependency
then (S  {Y})  {X} is also a superkey, where '\' is the set difference.

Consider for example the relation

Marriage (Husband, Wife, Date)

for which it will trivially hold that

{Husband, Wife, Date}

is a superkey. If we assume that a certain person can marry at most once on a given date then this implies the functional dependencies:

{Husband, Date}  Wife
{Wife, Date}  Husband

In this case, applying the above rule leads to the derivation of the superkeys {Husband, Date} and {Wife, Date} respectively.
[edit] See also

Alternate key
Compound key
Database normalization
Primary key
Relational database
Superkey
Prime implicant is the corresponding notion of a candidate key in boolean logic

[edit] References

Date, Christopher (2003). "5: Integrity". An Introduction to Database Systems. Addison-Wesley. pp.268276. ISBN978-0-321-18956-1.

[edit] External links

Relation Database terms of reference, Keys: An overview of the different types of keys in an RDBMS









v
t
e


Database management systems









Database models
Database normalization
Database storage
Distributed DBMS
Federated database system
Referential integrity
Relational algebra
Relational calculus
Relational database
Relational DBMS
Relational model
Object-relational database
Transaction processing








Concepts



Database
ACID
CRUD
Null
Candidate key
Foreign key
Primary key
Superkey
Surrogate key
Armstrong's axioms
NoSQL








Objects



Relation

table
column
row


View
Transaction
Log
Trigger
Index
Stored procedure
Cursor
Partition








Components



Concurrency control
Data dictionary
JDBC
XQJ
ODBC
Query language
Query optimizer
Query plan








Functions



Administration and automation
Query optimization
Replication











Database products
Object-oriented

comparison


Relational

comparison


Document-oriented
NewSQL








 
NewPP limit report
Preprocessor visited node count: 1015/1000000
Preprocessor generated node count: 19700/1500000
Post-expand include size: 17444/2048000 bytes
Template argument size: 8295/2048000 bytes
Highest expansion depth: 13/40
Expensive parser function count: 0/500

 Saved in parser cache with key enwiki:pcache:idhash:336975-0!*!0!!en!*!* and timestamp 20121214192611 
  /bodycontent 
 printfooter 

				Retrieved from "http://en.wikipedia.org/w/index.php?title=Candidate_key&oldid=516116126"				
 /printfooter 
 catlinks 
Categories: Database management systemsData modeling  /catlinks 

 debughtml 
 /debughtml 

 /bodyContent 

 