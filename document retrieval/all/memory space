
Computational resource
 /firstHeading 
 bodyContent 

 tagline 
From Wikipedia, the free encyclopedia
 /tagline 
 subtitle 
(Redirected from Memory space)
 /subtitle 
 jumpto 

					Jump to:					navigation, 					search

 /jumpto 
 bodycontent 
Not to be confused with Resource (computer science).





This article needs additional citations for verification. Please help improve this article by adding citations to reliable sources. Unsourced material may be challenged and removed. (September 2007) 


In computational complexity theory, a computational resource is a resource used by some computational models in the solution of computational problems.
The simplest computational resources are computation time, the number of steps necessary to solve a problem, and memory space, the amount of storage needed while solving the problem, but many more complicated resources have been defined.
A computational problem is generally defined in terms of its action on any valid input. Examples of problems might be "given an integer n, determine whether n is prime", or "given two numbers x and y, calculate the product x*y". As the inputs get bigger, the amount of computational resources needed to solve a problem will increase. Thus, the resources needed to solve a problem are described in terms of asymptotic analysis, by identifying the resources as a function of the length or size of the input.
Computational resources are useful because we can study which problems can be computed in a certain amount of each computational resource. In this way, we can determine whether algorithms for solving the problem are optimal and we can make statements about an algorithm's efficiency. The set of all of the computational problems that can be solved using a certain amount of a certain computational resource is a complexity class, and relationships between different complexity classes are one of the most important topics in complexity theory.
[edit] Describing generally accessible computing equipment
The term "Computational resource" is commonly used to describe accessible computing equipment and software. See Utility computing.
[edit] Formal quantification of computing capability
There has been some effort to formally quantify computing capability. A bounded Turing machine has been used to model specific computations using the number of state transitions and alphabet size to quantify the computational effort required to solve a particular problem.[1][2]
[edit] References


^ Gregory J., Chaitin (1966). "On the Length of Programs for Computing Finite Binary Sequences". Journal of the ACM (JACM) 13 (4): 547569. doi:10.1145/321356.321363. http://www.cs.auckland.ac.nz/CDMTCS/chaitin/acm66.pdf. Retrieved 2007-09-25.
^ Sow, Daby; Eleftheriadis, Alexandros (1998). "Representing Information with Computational Resource Bounds". Signals, Systems & Computers. Conference Record of the Thirty-Second Asilomar. Volume 1. pp.452456. ISBN0-7803-5148-7. 10.1109/ACSSC.1998.750904. http://www.ee.columbia.edu/ln/dvmm/publications/98/daby_eleft_asilomar98.pdf. Retrieved 2007-09-25.


 
NewPP limit report
Preprocessor visited node count: 1675/1000000
Preprocessor generated node count: 20598/1500000
Post-expand include size: 14016/2048000 bytes
Template argument size: 5786/2048000 bytes
Highest expansion depth: 17/40
Expensive parser function count: 1/500

 Saved in parser cache with key enwiki:pcache:idhash:4628222-0!*!0!!*!4!* and timestamp 20130101061936 
  /bodycontent 
 printfooter 

				Retrieved from "http://en.wikipedia.org/w/index.php?title=Computational_resource&oldid=495942577"				
 /printfooter 
 catlinks 
Categories: Computational complexity theoryComputational resourcesHidden categories: Articles needing additional references from September 2007All articles needing additional references  /catlinks 

 debughtml 
 /debughtml 

 /bodyContent 

 