nodedef> name,label
v0,-dimensional range
v1,-dimensional range query
v2,-dimensional range tree
v3,1-dimensional range
v4,1-dimensional range tree
v5,2-3 tree
v6,2-4 tree
v7,2-dimensional range tree
v8,abstract data
v9,abuse of notation
v10,access
v11,access pattern
v12,access probabilities
v13,access probability
v14,access sequence
v15,accessed
v16,accessed node
v17,active data dictionary
v18,activity
v19,actual data
v20,acyclic
v21,acyclic directed graph
v22,address
v23,adjacency list
v24,adjacency list representation
v25,adjacency matrix
v26,advanced data structures
v27,adversarial
v28,adversarial user
v29,aigs
v30,algorithm
v31,algorithm for finding
v32,algorithms and data structures
v33,alternative to balanced trees
v34,ammunition and ordnance
v35,amortized
v36,amortized cost
v37,amortized running time
v38,amortized time
v39,amount of data movement
v40,amp
v41,amusement parks
v42,analysis
v43,ancestor of the leftmost
v44,approximate
v45,approximate sketch
v46,area
v47,array
v48,array implementation
v49,array index
v50,array processor
v51,article is a stub
v52,ary
v53,assigns
v54,asymmetric doubly linked list
v55,asymptotic
v56,asymptotic notation
v57,asymptotically optimal
v58,aux
v59,aux index
v60,aux-aux index
v61,auxiliary
v62,auxiliary index
v63,auxiliary tree
v64,average
v65,average case
v66,average search time
v67,average time complexity
v68,average-case performance
v69,avl
v70,avl tree
v71,bachmannlandau
v72,bachmannlandau notation
v73,back to step
v74,balance
v75,balance factor
v76,balanced
v77,balanced binary
v78,balanced tree
v79,balancing
v80,base
v81,base case
v82,bayer
v83,bayer & mccreight
v84,best
v85,best-case performance
v86,big
v87,big o notation
v88,big theta
v89,binary
v90,binary heap
v91,binary search
v92,binary search algorithm
v93,binary search tree
v94,binary tree
v95,binomial
v96,binomial heap
v97,binomial tree
v98,binomial tree of order
v99,binomial trees of order
v100,bipartite
v101,bipartite graph
v102,bit
v103,bit string
v104,bit variable
v105,black
v106,black node
v107,black tree
v108,block
v109,boolean
v110,boolean satisfiability
v111,bottom
v112,bottom part
v113,bottom path
v114,bound
v115,bound on the work
v116,boundary
v117,boundary vertex
v118,boundary vertices
v119,bounding node
v120,branching factor
v121,breadth
v122,breadth-first search
v123,broadcast
v124,broadcast television
v125,bst
v126,buffer
v127,cable
v128,cable television
v129,cache
v130,cache size
v131,call
v132,cartesian
v133,cartesian tree
v134,case
v135,change
v136,charles e leiserson
v137,checking
v138,child
v139,child is stored
v140,child node
v141,child of its parent
v142,child pointer
v143,children
v144,children of every red
v145,circular
v146,circular buffer
v147,circular queue
v148,citation
v149,citation needed
v150,class
v151,cluster
v152,cluster path
v153,colored
v154,colored binary tree
v155,coloring
v156,common
v157,common ancestor
v158,common prefix
v159,commonly accessed
v160,commonly accessed element
v161,comparison of programming languages
v162,competitive
v163,competitive ratio
v164,complete
v165,complete binary
v166,complete binary tree
v167,complexity
v168,component
v169,computer
v170,computer programming
v171,computer science
v172,computing
v173,concurrent
v174,concurrent priority queues
v175,connected
v176,connected component
v177,conquer
v178,conquer algorithm
v179,constant
v180,constant factor
v181,constant time
v182,constructed
v183,constructed in linear time
v184,construction
v185,containing
v186,content of a document
v187,contiguous block of memory
v188,cost
v189,cryptographic hash function
v190,cur
v191,cur reaches
v192,current
v193,current address
v194,current node
v195,current node in consideration
v196,curve
v197,d-ary heap
v198,damaged
v199,damaged block
v200,dancing tree
v201,data
v202,data array
v203,data change
v204,data dictionary
v205,data element
v206,data item
v207,data skew
v208,data skew in space
v209,data structure
v210,data type
v211,database
v212,database engine
v213,december
v214,decision
v215,decision analysis
v216,decision support tool
v217,decision tree
v218,decrease
v219,decrease and conquer
v220,decrease the priority
v221,deficient
v222,deficient node
v223,definition
v224,delete
v225,delete operation
v226,delete-min operations
v227,deleting
v228,deleting an element
v229,deletion
v230,depth
v231,depth-first search
v232,describing the content
v233,destroy node
v234,development
v235,diagram
v236,dictionary
v237,dictionary of algorithms
v238,dimensional
v239,directed
v240,directed graph
v241,directed path
v242,disambiguation
v243,disambiguation pages
v244,disk
v245,disk block
v246,disk drive
v247,disk read
v248,divide and conquer
v249,divide and conquer algorithm
v250,document by keywords
v251,donald knuth
v252,double ended queue
v253,doubly
v254,doubly linked
v255,doubly linked list
v256,downward
v257,downward-swapping procedure
v258,drawing
v259,drawing of a hypergraph
v260,dynamic
v261,dynamic array
v262,dynamic trees with top
v263,edge
v264,edge cluster
v265,edit
v266,edit section
v267,element
v268,element of the heap
v269,element x is set
v270,elements in the list
v271,elements of the list
v272,elements stored
v273,else
v274,emergence
v275,empty
v276,empty tree
v277,end
v278,end function
v279,end if end
v280,end of the array
v281,engine
v282,equal to the smallest
v283,equals sign
v284,equivalence checking
v285,every
v286,expansion
v287,expect from a list
v288,explicit
v289,explicit stack
v290,external
v291,external boundary vertices
v292,external links
v293,external node
v294,extract minimum
v295,factor
v296,family
v297,family of bachmannlandau notations
v298,fibonacci
v299,fibonacci heap
v300,fibonacci heap from figure
v301,field
v302,figure
v303,file
v304,file system
v305,find
v306,find a node
v307,find the longest
v308,finding
v309,first
v310,first node
v311,folk
v312,folk & zoellick
v313,formal
v314,formal definition
v315,formal verification
v316,fourier transform
v317,frequently
v318,frequently accessed
v319,fully
v320,fully dynamic trees
v321,function
v322,function call
v323,function merge
v324,function remove
v325,fusion tree
v326,georgy adelson-velsky
v327,good substitute
v328,graph
v329,graph algorithms
v330,graph drawing
v331,graph model
v332,graph partitioning
v333,graph theory
v334,graph-structured stack
v335,greater than the largest
v336,greatest lower bound
v337,greedy
v338,greedy algorithm
v339,grid array
v340,grows
v341,grows at a rate
v342,growth
v343,growth rate
v344,half leaf
v345,hash
v346,hash function
v347,hash list
v348,hash mark
v349,hash tables
v350,head
v351,head of the list
v352,head pointer
v353,heap
v354,heap implementation
v355,heap leaching
v356,heap operations
v357,heap property
v358,height
v359,henceforth
v360,higher
v361,higher than level
v362,horizontal
v363,horizontal link
v364,hypergraph
v365,hypergraph coloring
v366,hypergraph drawing
v367,hypergraph is a hypergraph
v368,ibm
v369,ibm j of research
v370,ieee trans
v371,implementation
v372,implementation of a self-organizing
v373,implementation of binomial heap
v374,implementation of fibonacci heap
v375,incidence
v376,incidence graph
v377,incidence matrix
v378,increase the priority
v379,index
v380,index of wikipedia
v381,index structure
v382,indexable
v383,indexable skiplist
v384,indexed
v385,indexed in partition
v386,influence diagram
v387,information
v388,information in a publication
v389,information in fully dynamic
v390,information systems query
v391,inorder
v392,inorder predecessor
v393,inorder traversal
v394,input
v395,insert
v396,insert a new node
v397,insert a node
v398,inserted node
v399,inserting
v400,inserting a node
v401,insertion
v402,insertion or deletion
v403,insertions and deletions
v404,interest in aigs
v405,internal
v406,internal node
v407,internal operation
v408,internal storage
v409,international
v410,international conference
v411,international symposium on graph
v412,interval
v413,introduction to algorithms
v414,isomorphic
v415,item
v416,item at position
v417,item in a max-heap
v418,item in a min-heap
v419,items in the queue
v420,join
v421,join operation
v422,k-d tree
v423,keys
v424,knuth
v425,label timestamp
v426,landau
v427,landau symbols
v428,language
v429,large
v430,large number
v431,leaching
v432,leaf
v433,leaf child
v434,leaf children
v435,leaf cluster
v436,leaf node
v437,lecture notes
v438,lecture notes in computer
v439,left
v440,left child
v441,left link
v442,left subtree
v443,leftist heap
v444,leftmost
v445,legal
v446,legal node
v447,level
v448,level k or higher
v449,levi graph
v450,library
v451,library and information science
v452,line of people
v453,linear
v454,linear octree
v455,linear search
v456,link
v457,link field
v458,link of width
v459,linked
v460,linked list
v461,linked representation
v462,list
v463,list item
v464,list list
v465,list of broadcast
v466,list of children
v467,list of n elements
v468,list of references
v469,list of trees
v470,list of visited nodes
v471,list public
v472,lists articles
v473,little
v474,little-o notation
v475,local search
v476,location
v477,location on the stack
v478,logic
v479,logic synthesis
v480,logic synthesis and verification
v481,longest
v482,longest common prefix
v483,longest downward path
v484,lower bound
v485,lowest common ancestor
v486,machine word
v487,main
v488,main database
v489,main memory
v490,maintaining
v491,maintaining information in fully
v492,make
v493,make it our current
v494,mark
v495,mask out
v496,matrix
v497,max
v498,maximum
v499,maximum number
v500,maximum weight
v501,may
v502,mccreight
v503,memory
v504,memory database
v505,merge
v506,merging
v507,merging of two binomial
v508,merging two heaps
v509,method
v510,min
v511,minimum
v512,minimum element
v513,minimum number
v514,minimum number of elements
v515,minimum spanning tree
v516,mobile
v517,mobile queue
v518,model
v519,moving object
v520,multilevel
v521,multilevel partition
v522,national institute of standards
v523,nearest neighbor query
v524,needed
v525,new
v526,newnode
v527,nil
v528,nil else if nil
v529,node
v530,node assigns
v531,node class
v532,node containing `` key
v533,node has three children
v534,node in a tree
v535,node in the list
v536,node is level
v537,node newnode
v538,node node
v539,node representing
v540,node sketch
v541,node somenode
v542,node to its leaf
v543,nodes of level
v544,non
v545,non-leaf child
v546,non-leaf node
v547,notation
v548,notes
v549,notes in computer science
v550,number
v551,number of black nodes
v552,number of child
v553,number of child nodes
v554,number of children
v555,number of edges
v556,number of elements
v557,number of keys
v558,number of nodes
v559,number of points
v560,number of types
v561,object
v562,object locations
v563,octree
v564,office
v565,offline
v566,offline binary search tree
v567,onto
v568,operation
v569,operations research
v570,optimal
v571,optimal offline binary search
v572,optimal solution
v573,oracle
v574,oracle timesten
v575,order
v576,ordered
v577,ordered list
v578,ordered pairs of vertices
v579,ordered tree
v580,organizing
v581,origin
v582,origin of the stack
v583,original
v584,original problem
v585,original research
v586,outer class
v587,page
v588,pairing heap
v589,pairs
v590,pairs of vertices
v591,parallel
v592,parallel comparison
v593,parallel computing
v594,parent
v595,parent node
v596,parent pointer
v597,parks
v598,partial
v599,partial hypergraph
v600,partition
v601,partitioning
v602,path
v603,path cluster
v604,path edge
v605,path edge cluster
v606,pattern
v607,paul
v608,paul e black
v609,perfect
v610,perfect binary tree
v611,performance
v612,performance analysis
v613,periodical publication that lists
v614,physical
v615,physical queue
v616,point
v617,pointer
v618,points stored
v619,points to the smallest
v620,position
v621,possibly
v622,possibly empty
v623,post office
v624,predecessor
v625,preferred
v626,preferred child
v627,preferred children
v628,preferred path
v629,previous
v630,previous node
v631,priority
v632,priority of an item
v633,priority operations
v634,priority queue
v635,probabilistic
v636,probabilistic alternative to balanced
v637,probability
v638,probability of access
v639,problem
v640,procedure
v641,procedure calls
v642,processor
v643,prof erik demaine
v644,programming
v645,programming language
v646,proof
v647,proof for cost
v648,proof outline
v649,property
v650,public
v651,public static
v652,public static void
v653,publication
v654,publication that lists articles
v655,push
v656,push operation
v657,pushed
v658,pushed onto the stack
v659,pythagorean
v660,pythagorean triples
v661,query
v662,query interval
v663,query window
v664,queue
v665,queue area
v666,queue is a queue
v667,queueing
v668,queueish property
v669,radio
v670,radio station
v671,range
v672,range queries
v673,range query
v674,range searching
v675,range tree
v676,rate
v677,rate that may henceforth
v678,read
v679,real
v680,real number
v681,recursion
v682,recursion stack
v683,recursive
v684,recursive calls
v685,recursive procedure
v686,red
v687,red node
v688,red node are black
v689,red or black
v690,red-black tree
v691,redblack
v692,redblack tree
v693,reference point
v694,reference tree
v695,references
v696,references to other nodes
v697,regularly updated print periodical
v698,relational
v699,relational database
v700,remove
v701,removing
v702,removing a node
v703,removing values
v704,representation
v705,required
v706,research
v707,research and development
v708,rest
v709,rest of the list
v710,results
v711,results per page
v712,retrieved
v713,retrieved december
v714,return
v715,return heap
v716,return merge
v717,return min
v718,return nil
v719,return t end
v720,return t end function
v721,ronald l rivest
v722,root
v723,root cluster
v724,root element
v725,root node
v726,rooted
v727,rooted tree
v728,rotations
v729,running time
v730,runs
v731,runs in the order
v732,satisfiability
v733,scapegoat
v734,scapegoat tree
v735,science
v736,search
v737,search & amp
v738,search algorithm
v739,search fails
v740,search path
v741,search results
v742,search time
v743,search tree
v744,searched
v745,searching
v746,secondary storage
v747,section
v748,section requires expansion
v749,seek time
v750,segment tree
v751,self
v752,self-balanced bst
v753,self-balancing binary
v754,self-balancing binary search tree
v755,self-balancing bst
v756,self-organizing list
v757,separation
v758,separation values
v759,separator
v760,separator in the parent
v761,sequence
v762,sequential
v763,sequential representation
v764,set
v765,set membership
v766,set of keys
v767,set of points
v768,set system
v769,set the link field
v770,shape
v771,shape property
v772,sibling lists
v773,sift
v774,sift-down function
v775,sign
v776,simple queue
v777,singly
v778,singly linked
v779,singly linked list
v780,size
v781,sketch
v782,sketch bit
v783,sketch function
v784,sketch of proof
v785,skew
v786,skew and split
v787,skew heap
v788,skip list
v789,skiplist
v790,smallest
v791,smallest element
v792,solution
v793,somenode
v794,space
v795,space complexity
v796,space partitioning
v797,space-filling curve
v798,span
v799,span to be searched
v800,splay tree
v801,split
v802,sports
v803,sports and gaming
v804,squared linear terms
v805,stack
v806,stack is empty
v807,stack overflow
v808,stack pointer
v809,standards and technology
v810,station
v811,storage
v812,stored
v813,stored in the subtree
v814,stored in tree
v815,string
v816,strong
v817,strong and weak emergence
v818,strongly isomorphic
v819,struct node
v820,structure
v821,subdivision
v822,subdivision drawing
v823,substitute
v824,substitute activity
v825,subtraction
v826,subtraction linked list
v827,subtree
v828,subtree rooted
v829,sufficiently
v830,sufficiently large
v831,sufficiently large input parameter
v832,suffix
v833,suffix link
v834,suffix tree
v835,suffix tree construction
v836,swapping
v837,symbols
v838,symposium on graph drawing
v839,synthesis
v840,synthesis and verification
v841,synthesis and verification system
v842,t-th item selection
v843,tail
v844,tail point
v845,tail pointer
v846,takes
v847,takes constant amortized time
v848,tango tree
v849,telescope
v850,telescope array
v851,television
v852,television station
v853,ternary
v854,ternary search tree
v855,ternary tree
v856,th
v857,theory
v858,theta
v859,threaded
v860,threaded binary
v861,threaded binary tree
v862,threaded node
v863,three
v864,time
v865,time complexity
v866,time required
v867,timestamp
v868,toaru majutsu no index
v869,tool
v870,top
v871,top hash
v872,top of the stack
v873,top part
v874,top tree
v875,topmost
v876,topmost item
v877,total
v878,total number
v879,transform
v880,transpose method
v881,traversal
v882,traversal of the list
v883,traverse the list
v884,traversing the list
v885,tree
v886,tree data structure
v887,tree finger tree
v888,tree for moving objects
v889,tree for the string
v890,tree is a tree
v891,tree of order
v892,tree on a set
v893,tree root
v894,tree rotations
v895,trees of order
v896,trees with top trees
v897,two
v898,type
v899,uniform
v900,uniform hypergraph
v901,unsourced
v902,unsourced statements
v903,update
v904,update time
v905,updated print periodical publication
v906,upper bound
v907,upward
v908,upward-swapping procedure
v909,user
v910,values
v911,venn diagram
v912,verification
v913,vertex
v914,vertex set
v915,vertices
v916,virtual
v917,virtual queue
v918,virtual queueing
v919,visited
v920,visited node
v921,weak
v922,weak heap
v923,weak reference
v924,weight
v925,width
v926,wikipedia
v927,wikipedia by expanding
v928,word
v929,work
v930,worst
v931,worst case
v932,worst case height
v933,worst-case analysis
v934,worst-case complexity
v935,worst-case performance
v936,xor
v937,xor linked list
v938,xor operation
v939,zoellick

edgedef>node1,node2,directed,weight,labelvisible
