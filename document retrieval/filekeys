binary tree 1.gdf<<binary tree,children,node,root,tree<<binary search trees,complete binary tree,data structure,depth,full binary tree,height,insertion,internal node,leaf,left child,level,parent,recursive definition,right child,vertex<<balanced binary tree,computer science,deletion,directed graph,extended binary tree,external node,k-ary tree,linked list,perfect binary tree,rooted binary tree,rooted tree,subtrees<<binary heap,breadth-first search,edge,inorder traversal,level-order traversal,ordered tree,postorder traversal,preorder traversal,searching,sorting
binary tree 2.gdf<<node<<binary tree,children,parent,root,tree<<inorder traversal,left subtree,level,linear,linked list,postorder traversal,preorder traversal,right subtree<<data structure,leaf,left child,pointer,right child,siblings
dbms1.gdf<<attributes,database,entity<<dbms,entity types,er model,identifying relationship,key attribute,multi-valued attribute,relationship type,transactions<<composite attribute,foreign keys,information system,participation constraints,simple attribute,single-valued attribute<<application programming,binary relation,cardinality ratios,composite key,conceptual schema,database management system,default key,entity relationship,entity set,null attributes,one is to n relationship,relational model,table,unary relationship,universe of discourse
ds1.gdf<<running time<<algorithms,array,big oh notation,big omega,data structure,exponential,primitive operation,program,pseudo code,sorting,worst case<<arithmetic operations,asymptotic analysis,best case,big omega notation,control statement,linear time algorithm,little oh notation,little omega notation,logarithmic,logical operation,memory,programming construct,quadratic<<asymptotic running time,average case,big theta notation,boolean expression,efficient algorithm,insertion sort,linear algorithm,list,non linear function,programming language,sorting technique
ds10.gdf<<pivot,quick sort<<array,partitioning,running time<<expected time,median element,random element,randomized quick sort,worst case<<average time,divide and conquer,insertion sort,linear time,partition procedure,pivot element,randomized algorithm,randomized partition
ds11.gdf<<avl tree,binary search trees,insertion,node,root<<complete binary tree,height balance property,height balanced,recurrence,recurrence relation,rotation<<data structure,height balanced trees,height imbalance,induction hypothesis,logarithmic height property<<height of a node
ds12.gdf<<child,rotation<<avl trees,deletion,height balance,insertion,node,subtree<<binary search tree,double rotation,height balance problem,height imbalance,rebalance,single rotation<<height balance property,local reorganization
ds13.gdf<<delete,keys,search,two four trees<<binary search,binary search trees,binary tree,height of the tree,insert,internal node,leaf node,merge,multi way search trees,order log n,search property,search tree,split,sub tree<<borrow from sibling,inorder traversal,rotation,tree height<<data structure,worst case
ds2.gdf<<stack<<abstract data type,constructor method,data type,exception,java,push,top<<array implementation,data structure,generic type,growth strategy,pop,programming,regular push,special push,stack empty exception,stack full exception,stack implementation,stack interface,super class,tight strategy,try block,worst case<<catch block,java virtual machine,parent class
ds3.gdf<<data type,double ended queue,linked list,queue<<abstract data type,data structure,doubly linked list,element rank,stack,vector,worst case<<arrays,circularly linked list,dequeue,enqueue,front element,list abstract data type,rear element,running time,sequence data type,singly linked list,vector data type<<array implementation,first in first out principle,last in first out principle,list data type,queue full exception,vector abstract data type
ds4.gdf<<dictionary,hash table,linked list,search<<data structure,hash function,hashing,insert,worst case<<abstract data type,binary search,delete,dictionary abstract data type,iterative procedure,load factor,recursive procedure<<abstract model,big oh notation,chaining,collision resolution,divide and conquer,simple uniform function
ds5.gdf<<chaining,hash function,hash table,hashing,insert,search<<compression map,hash code map,linear probing,linked list,load factor,open addressing<<delete,double hashing,linear congruential,linear congruential generator,polynomial accumulation<<collision resolution,fibonacci hashing,random number generator,universal hashing
ds6.gdf<<binary tree,node,tree<<complete binary tree,height,internal node,leaf,level,parent,root<<ancestor,data structure,decision tree,degree,depth,hierarchy,linked list,ordered tree,sibling,unbounded tree<<abstract data type,arithmetic expression,generic method
ds7.gdf<<binary tree,node<<arithmetic expression,inorder traversal,postorder traversal,preorder traversal,tree traversal<<children,euler walk,eulers rule,ordered trees<<recursive procedure
ds8.gdf<<binary search,dictionary<<array,binary search tree,data structure,deletion,insertion,ordered dictionaries,total order<<height,recursive procedure<<key element pair,logarithmic time,ordering relation,running time
hashing 1.gdf<<array,associative array,bucket,cache,chaining,data structure,hash collision,hash function,hash table,hash value,insert,key,list,load factor,lookup,memory,open addressing,worst case<<2 choice hash,amortized time,average cost,bit masking,clustering,coalesced hash,collision resolution,consistent hash,cuckoo hash,database indexing,delete,disk based,double hash,dynamic array,dynamic resizing,empty bucket,hash distribution,hopscotch hash,key value pair,linear probing,linked list,perfect hash table,perl,pointer,probe sequence,ruby,searching,separate chaining<<array hash table,b-tree,binary search time,cache efficiency,cache performance,chaining hash table,cryptographic hash function,dynamic perfect hash,external robin hash,geometric resizing,hash bucket,hash map,incremental resizing,memory allocator,modulo reduction,ordered list,processor cache,self balancing tree<<array hash table,b-tree,binary search time,cache efficiency,cache performance,chaining hash table,cryptographic hash function,dynamic perfect hash,external robin hash,geometric resizing,hash bucket,hash map,incremental resizing,memory allocator,modulo reduction,ordered list,processor cache,self balancing tree
hashing 2.gdf<<data structure,hash function,hash table,hashing,integer<<array,level<<array,level<<data type
hashing 3.gdf<<hashing<<closed hashing,data structure,find,hash function,hash table,insert,key,open hashing<<collision resolution,delete,linear hashing,linked list,open addressing,separate chaining<<array,index,memory allocation,rehash strategy,search time
hashing 4.gdf<<chaining,hash function,hash table,keys<<algorithms,arrays,bits,bucket,chaining hash table,chains,clustering,collision resolution,data structure,hash values,index,linear probing,linked list,load factors,memory,open addressing,perfect hashing,probing,searching,worst case<<amortized analysis,associative arrays,chi-squared test,coalesced hashing,collision rates,complexity,consistent hashing,cryptographic hash function,cuckoo hashing,database,delete,disk based hashes,double hashing,dynamic arrays,external storage,incremental doubling,internal storage,probabilistic hashing,quadratic probing,self balancing binary search trees,single-slot stepping<<avalanche effect,bit masking,bloom filter,caches,chaining implementations,chaining tables,computer programming,data compression,distributed hashes,dynamic perfect hashing,graph,hash bucket,hash implementation,hash map,last-come-first-served hashing,linearly probed hash tables,open addressed hash tables,perfect hash table,self balancing tree,sets,time-critical operations,universal hash function
ml1.gdf<<learning algorithm,supervised learning<<machine learning,unsupervised<<reinforcement learning<<learning theory,machine learning algorithm,unsupervised learning,unsupervised learning algorithm
ml10.gdf<<cross validation,feature selection,forward selections,generalization error<<empirical risk minimization,empty heart problem,model selection,vc dimension<<forward selection algorithm,k-fold cross validation,learning theory,wrapper feature selection<<feature selection algorithm,k-l divergence,mutual information,wrapper model feature selection,wrapper model feature selection algorithms
ml11.gdf<<machine learning problem,machine learning system,test error<<accuracy,debugging,error analysis,high bias,high variance,optimization objective,training error<<ablative analysis,cost function,online learning,premature statistical optimization,square error,total online error<<bayesian regularization,bayesian statistics and regularization,mail delivery robot
ml12.gdf<<clustering,distribution<<clustering,distribution<<em algorithm,expectation maximization algorithm,gaussian distribution,law of likelihood,unsupervised learning<<cluster centroids,gaussian discriminant analysis algorithm,k-means algorithm,number of clusters
ml2.gdf<<descent,gradient descent<<descent,gradient descent<<gradient descent algorithm,learning algorithm,supervised learning<<batch gradient descent
ml3.gdf<<regression<<fitting,gaussian,linear regression,locally weighted regression<<log likelihood,overfitting<<classification,error,non-parametric learning algorithm,perceptron,probabilistic interpretation,underfitting
ml5.gdf<<gaussian discriminant analysis<<generative learning algorithms,maximum likelihood estimate,naive bayes<<bayes rule,discriminative learning algorithms,gaussian discriminant analysis model,generative model,laplace smoothing,likelihood estimation,modeling assumptions,naive bayes algorithm,naive bayes assumption<<multivariate gaussian,regenerative learning algorithms
ml6.gdf<<neural networks,support vector machines<<non-linear classifier,non-linear division boundaries<<multivariate bernoulli event model<<gradient descent,history of neural networks,hyper plane,multinomial event model
ml7.gdf<<optimization problems<<duo problem,lagrange multipliers,optimal margin classifier,support vector machines<<active constraint,convex optimization,duo optimization problem,gamma hat,primal optimization problem,primal problem<<geometric margin,kkt conditions,method of lagrange multipliers,primal and duo optimization problem,prime optimization problem
ml8.gdf<<kernel,optimization problem<<idea of kernels,smo algorithm,support vector machine<<box constraint,coordinate assent,galcean kernel,kernel function,l1 norm soft margin svm,mercer kernels,svm optimization problem,valid kernel<<bosk constraint
ml9.gdf<<bias,generalization error<<training error,variance<<benuve random variables,empirical risk minimization,learning theory<<bias variance trade-off,bias variance tradeoff,epsilon hat
newstack.gdf<<stack<<data structure,push,top<<abstract data type,pop<<last in first out,object,size
newstack2.gdf<<stack<<last in first out,pop,push,top<<last in first out,pop,push,top<<data structure,linked list,non recursive algorithm,recursive function
newstack3.gdf<<stack<<list<<array based stack,data structure,pop,size,stack implementation,top<<last in first out,linked stacks,push
ppl1.gdf<<programming language<<algorithm,computational process,first order logic,infinitary object,machine<<accurate succinct finitary representation,assembly language,data structure,finitary representation,finitary specification,history of programming language,imperative language,machine language,parallel language,propositional logic<<compilation,distributed language,functional language,object oriented language,sequential language,stored program concept
